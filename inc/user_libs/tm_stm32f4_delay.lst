ARM GAS  /tmp/ccFmD5nI.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   3              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   4              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   5              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   6              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   7              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
   8              		.eabi_attribute 30, 4	@ Tag_ABI_optimization_goals
   9              		.eabi_attribute 34, 1	@ Tag_CPU_unaligned_access
  10              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  11              		.file	"tm_stm32f4_delay.c"
  12              	@ GNU C11 (GNU Tools for Arm Embedded Processors 7-2017-q4-major) version 7.2.1 20170904 (release) 
  13              	@	compiled by GNU C version 4.8.4, GMP version 6.1.0, MPFR version 3.1.4, MPC version 1.0.3, isl ve
  14              	
  15              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  16              	@ options passed:  -I . -I ./inc -I ./inc/CMSIS
  17              	@ -I STM32F4xx_StdPeriph_Driver/inc -I ./inc/user_libs
  18              	@ -imultilib thumb/v7e-m
  19              	@ -iprefix /home/sticky/opt/gcc-arm-none-eabi-7-2017-q4-major/bin/../lib/gcc/arm-none-eabi/7.2.1/
  20              	@ -isysroot /home/sticky/opt/gcc-arm-none-eabi-7-2017-q4-major/bin/../arm-none-eabi
  21              	@ -D__USES_INITFINI__ -D STM32F40XX -D USE_STDPERIPH_DRIVER
  22              	@ -D RUN_FROM_FLASH=1 inc/user_libs/tm_stm32f4_delay.c -mcpu=cortex-m4
  23              	@ -mthumb -auxbase-strip inc/user_libs/tm_stm32f4_delay.o -g -gdwarf-2 -Os
  24              	@ -Wall -Wstrict-prototypes -fomit-frame-pointer -fverbose-asm
  25              	@ options enabled:  -faggressive-loop-optimizations -falign-jumps
  26              	@ -falign-labels -falign-loops -fauto-inc-dec -fbranch-count-reg
  27              	@ -fcaller-saves -fchkp-check-incomplete-type -fchkp-check-read
  28              	@ -fchkp-check-write -fchkp-instrument-calls -fchkp-narrow-bounds
  29              	@ -fchkp-optimize -fchkp-store-bounds -fchkp-use-static-bounds
  30              	@ -fchkp-use-static-const-bounds -fchkp-use-wrappers -fcode-hoisting
  31              	@ -fcombine-stack-adjustments -fcommon -fcompare-elim -fcprop-registers
  32              	@ -fcrossjumping -fcse-follow-jumps -fdefer-pop
  33              	@ -fdelete-null-pointer-checks -fdevirtualize -fdevirtualize-speculatively
  34              	@ -fdwarf2-cfi-asm -fearly-inlining -feliminate-unused-debug-types
  35              	@ -fexpensive-optimizations -fforward-propagate -ffp-int-builtin-inexact
  36              	@ -ffunction-cse -fgcse -fgcse-lm -fgnu-runtime -fgnu-unique
  37              	@ -fguess-branch-probability -fhoist-adjacent-loads -fident -fif-conversion
  38              	@ -fif-conversion2 -findirect-inlining -finline -finline-atomics
  39              	@ -finline-functions -finline-functions-called-once
  40              	@ -finline-small-functions -fipa-bit-cp -fipa-cp -fipa-icf
  41              	@ -fipa-icf-functions -fipa-icf-variables -fipa-profile -fipa-pure-const
  42              	@ -fipa-ra -fipa-reference -fipa-sra -fipa-vrp -fira-hoist-pressure
  43              	@ -fira-share-save-slots -fira-share-spill-slots
  44              	@ -fisolate-erroneous-paths-dereference -fivopts -fkeep-static-consts
  45              	@ -fleading-underscore -flifetime-dse -flra-remat -flto-odr-type-merging
  46              	@ -fmath-errno -fmerge-constants -fmerge-debug-strings
  47              	@ -fmove-loop-invariants -fomit-frame-pointer -foptimize-sibling-calls
  48              	@ -fpartial-inlining -fpeephole -fpeephole2 -fplt -fprefetch-loop-arrays
  49              	@ -freg-struct-return -freorder-blocks -freorder-functions
  50              	@ -frerun-cse-after-loop -fsched-critical-path-heuristic
  51              	@ -fsched-dep-count-heuristic -fsched-group-heuristic -fsched-interblock
  52              	@ -fsched-last-insn-heuristic -fsched-pressure -fsched-rank-heuristic
  53              	@ -fsched-spec -fsched-spec-insn-heuristic -fsched-stalled-insns-dep
  54              	@ -fschedule-insns2 -fsection-anchors -fsemantic-interposition
  55              	@ -fshow-column -fshrink-wrap-separate -fsigned-zeros
  56              	@ -fsplit-ivs-in-unroller -fsplit-wide-types -fssa-backprop -fssa-phiopt
  57              	@ -fstdarg-opt -fstore-merging -fstrict-aliasing -fstrict-overflow
ARM GAS  /tmp/ccFmD5nI.s 			page 2


  58              	@ -fstrict-volatile-bitfields -fsync-libcalls -fthread-jumps
  59              	@ -ftoplevel-reorder -ftrapping-math -ftree-bit-ccp -ftree-builtin-call-dce
  60              	@ -ftree-ccp -ftree-ch -ftree-coalesce-vars -ftree-copy-prop -ftree-cselim
  61              	@ -ftree-dce -ftree-dominator-opts -ftree-dse -ftree-forwprop -ftree-fre
  62              	@ -ftree-loop-if-convert -ftree-loop-im -ftree-loop-ivcanon
  63              	@ -ftree-loop-optimize -ftree-parallelize-loops= -ftree-phiprop -ftree-pre
  64              	@ -ftree-pta -ftree-reassoc -ftree-scev-cprop -ftree-sink -ftree-slsr
  65              	@ -ftree-sra -ftree-switch-conversion -ftree-tail-merge -ftree-ter
  66              	@ -ftree-vrp -funit-at-a-time -fvar-tracking -fvar-tracking-assignments
  67              	@ -fverbose-asm -fzero-initialized-in-bss -masm-syntax-unified
  68              	@ -mlittle-endian -mpic-data-is-text-relative -msched-prolog -mthumb
  69              	@ -munaligned-access -mvectorize-with-neon-quad
  70              	
  71              		.text
  72              	.Ltext0:
  73              		.cfi_sections	.debug_frame
  74              		.align	1
  75              		.global	SysTick_Handler
  76              		.syntax unified
  77              		.thumb
  78              		.thumb_func
  79              		.fpu softvfp
  80              		.type	SysTick_Handler, %function
  81              	SysTick_Handler:
  82              	.LFB112:
  83              		.file 1 "inc/user_libs/tm_stm32f4_delay.c"
   1:inc/user_libs/tm_stm32f4_delay.c **** /**	
   2:inc/user_libs/tm_stm32f4_delay.c ****  * |----------------------------------------------------------------------
   3:inc/user_libs/tm_stm32f4_delay.c ****  * | Copyright (C) Tilen Majerle, 2014
   4:inc/user_libs/tm_stm32f4_delay.c ****  * | 
   5:inc/user_libs/tm_stm32f4_delay.c ****  * | This program is free software: you can redistribute it and/or modify
   6:inc/user_libs/tm_stm32f4_delay.c ****  * | it under the terms of the GNU General Public License as published by
   7:inc/user_libs/tm_stm32f4_delay.c ****  * | the Free Software Foundation, either version 3 of the License, or
   8:inc/user_libs/tm_stm32f4_delay.c ****  * | any later version.
   9:inc/user_libs/tm_stm32f4_delay.c ****  * |  
  10:inc/user_libs/tm_stm32f4_delay.c ****  * | This program is distributed in the hope that it will be useful,
  11:inc/user_libs/tm_stm32f4_delay.c ****  * | but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:inc/user_libs/tm_stm32f4_delay.c ****  * | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:inc/user_libs/tm_stm32f4_delay.c ****  * | GNU General Public License for more details.
  14:inc/user_libs/tm_stm32f4_delay.c ****  * | 
  15:inc/user_libs/tm_stm32f4_delay.c ****  * | You should have received a copy of the GNU General Public License
  16:inc/user_libs/tm_stm32f4_delay.c ****  * | along with this program.  If not, see <http://www.gnu.org/licenses/>.
  17:inc/user_libs/tm_stm32f4_delay.c ****  * |----------------------------------------------------------------------
  18:inc/user_libs/tm_stm32f4_delay.c ****  */
  19:inc/user_libs/tm_stm32f4_delay.c **** #include "tm_stm32f4_delay.h"
  20:inc/user_libs/tm_stm32f4_delay.c **** 
  21:inc/user_libs/tm_stm32f4_delay.c **** __IO uint32_t TM_TimingDelay = 0;
  22:inc/user_libs/tm_stm32f4_delay.c **** __IO uint32_t TM_Time = 0;
  23:inc/user_libs/tm_stm32f4_delay.c **** __IO uint32_t TM_Time2 = 0;
  24:inc/user_libs/tm_stm32f4_delay.c **** volatile uint32_t mult;
  25:inc/user_libs/tm_stm32f4_delay.c **** uint8_t TM_DELAY_Initialized = 0;
  26:inc/user_libs/tm_stm32f4_delay.c **** 
  27:inc/user_libs/tm_stm32f4_delay.c **** /* Private structure */
  28:inc/user_libs/tm_stm32f4_delay.c **** typedef struct {
  29:inc/user_libs/tm_stm32f4_delay.c **** 	uint8_t Count;
  30:inc/user_libs/tm_stm32f4_delay.c **** 	TM_DELAY_Timer_t* Timers[DELAY_MAX_CUSTOM_TIMERS];
  31:inc/user_libs/tm_stm32f4_delay.c **** } TM_DELAY_Timers_t;
ARM GAS  /tmp/ccFmD5nI.s 			page 3


  32:inc/user_libs/tm_stm32f4_delay.c **** 
  33:inc/user_libs/tm_stm32f4_delay.c **** /* Custom timers structure */
  34:inc/user_libs/tm_stm32f4_delay.c **** static TM_DELAY_Timers_t CustomTimers;
  35:inc/user_libs/tm_stm32f4_delay.c **** 
  36:inc/user_libs/tm_stm32f4_delay.c **** #if defined(TM_DELAY_TIM)
  37:inc/user_libs/tm_stm32f4_delay.c **** void TM_DELAY_INT_InitTIM(void);
  38:inc/user_libs/tm_stm32f4_delay.c **** #endif
  39:inc/user_libs/tm_stm32f4_delay.c **** 
  40:inc/user_libs/tm_stm32f4_delay.c **** #if defined(TM_DELAY_TIM)
  41:inc/user_libs/tm_stm32f4_delay.c **** void TM_DELAY_TIM_IRQ_HANDLER(void) {
  42:inc/user_libs/tm_stm32f4_delay.c **** 	uint8_t i;
  43:inc/user_libs/tm_stm32f4_delay.c **** 	TM_DELAY_TIM->SR = ~TIM_IT_Update;
  44:inc/user_libs/tm_stm32f4_delay.c **** #elif defined(KEIL_IDE)
  45:inc/user_libs/tm_stm32f4_delay.c **** void TimingDelay_Decrement(void) {
  46:inc/user_libs/tm_stm32f4_delay.c **** 	uint8_t i;
  47:inc/user_libs/tm_stm32f4_delay.c **** #else
  48:inc/user_libs/tm_stm32f4_delay.c **** void SysTick_Handler(void) {
  84              		.loc 1 48 0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 0
  87              		@ frame_needed = 0, uses_anonymous_args = 0
  88 0000 70B5     		push	{r4, r5, r6, lr}	@
  89              	.LCFI0:
  90              		.cfi_def_cfa_offset 16
  91              		.cfi_offset 4, -16
  92              		.cfi_offset 5, -12
  93              		.cfi_offset 6, -8
  94              		.cfi_offset 14, -4
  95              	@ inc/user_libs/tm_stm32f4_delay.c:52: 	TM_Time++;
  49:inc/user_libs/tm_stm32f4_delay.c **** 	uint8_t i;
  50:inc/user_libs/tm_stm32f4_delay.c **** #endif
  51:inc/user_libs/tm_stm32f4_delay.c **** 	
  52:inc/user_libs/tm_stm32f4_delay.c **** 	TM_Time++;
  96              		.loc 1 52 0
  97 0002 134C     		ldr	r4, .L17	@ tmp129,
  98 0004 2368     		ldr	r3, [r4]	@ TM_Time.0_1, TM_Time
  99 0006 0133     		adds	r3, r3, #1	@ _2, TM_Time.0_1,
 100 0008 2360     		str	r3, [r4]	@ _2, TM_Time
 101              	@ inc/user_libs/tm_stm32f4_delay.c:53: 	if (TM_Time2 != 0x00) {
  53:inc/user_libs/tm_stm32f4_delay.c **** 	if (TM_Time2 != 0x00) {
 102              		.loc 1 53 0
 103 000a 6368     		ldr	r3, [r4, #4]	@ TM_Time2.1_3, TM_Time2
 104 000c 13B1     		cbz	r3, .L2	@ TM_Time2.1_3,
 105              	@ inc/user_libs/tm_stm32f4_delay.c:54: 		TM_Time2--;
  54:inc/user_libs/tm_stm32f4_delay.c **** 		TM_Time2--;
 106              		.loc 1 54 0
 107 000e 6368     		ldr	r3, [r4, #4]	@ TM_Time2.2_4, TM_Time2
 108 0010 013B     		subs	r3, r3, #1	@ _5, TM_Time2.2_4,
 109 0012 6360     		str	r3, [r4, #4]	@ _5, TM_Time2
 110              	.L2:
 111              	@ inc/user_libs/tm_stm32f4_delay.c:58: 	TM_DELAY_1msHandler();
  55:inc/user_libs/tm_stm32f4_delay.c **** 	}
  56:inc/user_libs/tm_stm32f4_delay.c **** 	
  57:inc/user_libs/tm_stm32f4_delay.c **** 	/* Call user function */
  58:inc/user_libs/tm_stm32f4_delay.c **** 	TM_DELAY_1msHandler();
 112              		.loc 1 58 0
 113 0014 FFF7FEFF 		bl	TM_DELAY_1msHandler	@
ARM GAS  /tmp/ccFmD5nI.s 			page 4


 114              	.LVL0:
 115              	@ inc/user_libs/tm_stm32f4_delay.c:61: 	for (i = 0; i < CustomTimers.Count; i++) {
  59:inc/user_libs/tm_stm32f4_delay.c **** 	
  60:inc/user_libs/tm_stm32f4_delay.c **** 	/* Check custom timers */
  61:inc/user_libs/tm_stm32f4_delay.c **** 	for (i = 0; i < CustomTimers.Count; i++) {
 116              		.loc 1 61 0
 117 0018 0026     		movs	r6, #0	@ ivtmp.28,
 118              	.LVL1:
 119              	.L3:
 120              	@ inc/user_libs/tm_stm32f4_delay.c:61: 	for (i = 0; i < CustomTimers.Count; i++) {
 121              		.loc 1 61 0 is_stmt 0 discriminator 1
 122 001a 237A     		ldrb	r3, [r4, #8]	@ zero_extendqisi2	@ CustomTimers.Count, CustomTimers.Count
 123 001c F5B2     		uxtb	r5, r6	@ ivtmp.28, ivtmp.28
 124 001e AB42     		cmp	r3, r5	@ CustomTimers.Count, ivtmp.28
 125 0020 00D8     		bhi	.L7	@,
 126              	@ inc/user_libs/tm_stm32f4_delay.c:87: }
  62:inc/user_libs/tm_stm32f4_delay.c **** 		/* Check if timer is enabled */
  63:inc/user_libs/tm_stm32f4_delay.c **** 		if (
  64:inc/user_libs/tm_stm32f4_delay.c **** 			CustomTimers.Timers[i] &&          /*!< Pointer exists */
  65:inc/user_libs/tm_stm32f4_delay.c **** 			CustomTimers.Timers[i]->Enabled && /*!< Timer is enabled */
  66:inc/user_libs/tm_stm32f4_delay.c **** 			CustomTimers.Timers[i]->CNT > 0    /*!< Counter is not NULL */
  67:inc/user_libs/tm_stm32f4_delay.c **** 		) {
  68:inc/user_libs/tm_stm32f4_delay.c **** 			/* Decrease counter */
  69:inc/user_libs/tm_stm32f4_delay.c **** 			CustomTimers.Timers[i]->CNT--;
  70:inc/user_libs/tm_stm32f4_delay.c **** 			
  71:inc/user_libs/tm_stm32f4_delay.c **** 			/* Check if count is zero */
  72:inc/user_libs/tm_stm32f4_delay.c **** 			if (CustomTimers.Timers[i]->CNT == 0) {
  73:inc/user_libs/tm_stm32f4_delay.c **** 				/* Call user callback function */
  74:inc/user_libs/tm_stm32f4_delay.c **** 				CustomTimers.Timers[i]->Callback(CustomTimers.Timers[i]->UserParameters);
  75:inc/user_libs/tm_stm32f4_delay.c **** 				
  76:inc/user_libs/tm_stm32f4_delay.c **** 				/* Set new counter value */
  77:inc/user_libs/tm_stm32f4_delay.c **** 				CustomTimers.Timers[i]->CNT = CustomTimers.Timers[i]->ARR;
  78:inc/user_libs/tm_stm32f4_delay.c **** 				
  79:inc/user_libs/tm_stm32f4_delay.c **** 				/* Disable timer if auto reload feature is not used */
  80:inc/user_libs/tm_stm32f4_delay.c **** 				if (!CustomTimers.Timers[i]->AutoReload) {
  81:inc/user_libs/tm_stm32f4_delay.c **** 					/* Disable counter */
  82:inc/user_libs/tm_stm32f4_delay.c **** 					CustomTimers.Timers[i]->Enabled = 0;
  83:inc/user_libs/tm_stm32f4_delay.c **** 				}
  84:inc/user_libs/tm_stm32f4_delay.c **** 			}
  85:inc/user_libs/tm_stm32f4_delay.c **** 		}
  86:inc/user_libs/tm_stm32f4_delay.c **** 	}
  87:inc/user_libs/tm_stm32f4_delay.c **** }
 127              		.loc 1 87 0 is_stmt 1
 128 0022 70BD     		pop	{r4, r5, r6, pc}	@
 129              	.LVL2:
 130              	.L7:
 131              	@ inc/user_libs/tm_stm32f4_delay.c:64: 			CustomTimers.Timers[i] &&          /*!< Pointer exists */
  64:inc/user_libs/tm_stm32f4_delay.c **** 			CustomTimers.Timers[i]->Enabled && /*!< Timer is enabled */
 132              		.loc 1 64 0
 133 0024 04EB8505 		add	r5, r4, r5, lsl #2	@ tmp135, tmp149, ivtmp.28,
 134 0028 EB68     		ldr	r3, [r5, #12]	@ _7, CustomTimers.Timers
 135              	@ inc/user_libs/tm_stm32f4_delay.c:63: 		if (
  63:inc/user_libs/tm_stm32f4_delay.c **** 			CustomTimers.Timers[i] &&          /*!< Pointer exists */
 136              		.loc 1 63 0
 137 002a 7BB1     		cbz	r3, .L5	@ _7,
 138              	@ inc/user_libs/tm_stm32f4_delay.c:64: 			CustomTimers.Timers[i] &&          /*!< Pointer exists */
  64:inc/user_libs/tm_stm32f4_delay.c **** 			CustomTimers.Timers[i]->Enabled && /*!< Timer is enabled */
ARM GAS  /tmp/ccFmD5nI.s 			page 5


 139              		.loc 1 64 0
 140 002c 1A7B     		ldrb	r2, [r3, #12]	@ zero_extendqisi2	@ _7->Enabled, _7->Enabled
 141 002e 6AB1     		cbz	r2, .L5	@ _7->Enabled,
 142              	@ inc/user_libs/tm_stm32f4_delay.c:66: 			CustomTimers.Timers[i]->CNT > 0    /*!< Counter is not NU
  66:inc/user_libs/tm_stm32f4_delay.c **** 		) {
 143              		.loc 1 66 0
 144 0030 9A68     		ldr	r2, [r3, #8]	@ _9, _7->CNT
 145              	@ inc/user_libs/tm_stm32f4_delay.c:65: 			CustomTimers.Timers[i]->Enabled && /*!< Timer is enabled 
  65:inc/user_libs/tm_stm32f4_delay.c **** 			CustomTimers.Timers[i]->CNT > 0    /*!< Counter is not NULL */
 146              		.loc 1 65 0
 147 0032 5AB1     		cbz	r2, .L5	@ _9,
 148              	@ inc/user_libs/tm_stm32f4_delay.c:69: 			CustomTimers.Timers[i]->CNT--;
  69:inc/user_libs/tm_stm32f4_delay.c **** 			
 149              		.loc 1 69 0
 150 0034 013A     		subs	r2, r2, #1	@ _10, _9,
 151 0036 9A60     		str	r2, [r3, #8]	@ _10, _7->CNT
 152              	@ inc/user_libs/tm_stm32f4_delay.c:72: 			if (CustomTimers.Timers[i]->CNT == 0) {
  72:inc/user_libs/tm_stm32f4_delay.c **** 				/* Call user callback function */
 153              		.loc 1 72 0
 154 0038 42B9     		cbnz	r2, .L5	@ _10,
 155              	@ inc/user_libs/tm_stm32f4_delay.c:74: 				CustomTimers.Timers[i]->Callback(CustomTimers.Timers[i]-
  74:inc/user_libs/tm_stm32f4_delay.c **** 				
 156              		.loc 1 74 0
 157 003a D3E90420 		ldrd	r2, r0, [r3, #16]	@ _7->Callback,, _7,
 158 003e 9047     		blx	r2	@ _7->Callback
 159              	.LVL3:
 160              	@ inc/user_libs/tm_stm32f4_delay.c:77: 				CustomTimers.Timers[i]->CNT = CustomTimers.Timers[i]->AR
  77:inc/user_libs/tm_stm32f4_delay.c **** 				
 161              		.loc 1 77 0
 162 0040 EB68     		ldr	r3, [r5, #12]	@ _13, CustomTimers.Timers
 163 0042 1A68     		ldr	r2, [r3]	@ _13->ARR, _13->ARR
 164 0044 9A60     		str	r2, [r3, #8]	@ _13->ARR, _13->CNT
 165              	@ inc/user_libs/tm_stm32f4_delay.c:80: 				if (!CustomTimers.Timers[i]->AutoReload) {
  80:inc/user_libs/tm_stm32f4_delay.c **** 					/* Disable counter */
 166              		.loc 1 80 0
 167 0046 5A68     		ldr	r2, [r3, #4]	@ _13->AutoReload, _13->AutoReload
 168 0048 02B9     		cbnz	r2, .L5	@ _13->AutoReload,
 169              	@ inc/user_libs/tm_stm32f4_delay.c:82: 					CustomTimers.Timers[i]->Enabled = 0;
  82:inc/user_libs/tm_stm32f4_delay.c **** 				}
 170              		.loc 1 82 0
 171 004a 1A73     		strb	r2, [r3, #12]	@ _13->AutoReload, _13->Enabled
 172              	.L5:
 173              	.LVL4:
 174 004c 0136     		adds	r6, r6, #1	@ ivtmp.28, ivtmp.28,
 175              	.LVL5:
 176 004e E4E7     		b	.L3	@
 177              	.L18:
 178              		.align	2
 179              	.L17:
 180 0050 00000000 		.word	.LANCHOR0
 181              		.cfi_endproc
 182              	.LFE112:
 183              		.size	SysTick_Handler, .-SysTick_Handler
 184              		.align	1
 185              		.global	TM_DELAY_Init
 186              		.syntax unified
 187              		.thumb
ARM GAS  /tmp/ccFmD5nI.s 			page 6


 188              		.thumb_func
 189              		.fpu softvfp
 190              		.type	TM_DELAY_Init, %function
 191              	TM_DELAY_Init:
 192              	.LFB113:
  88:inc/user_libs/tm_stm32f4_delay.c **** 
  89:inc/user_libs/tm_stm32f4_delay.c **** void TM_DELAY_Init(void) {	
 193              		.loc 1 89 0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197              		@ link register save eliminated.
 198              	@ inc/user_libs/tm_stm32f4_delay.c:94: 	if (SysTick_Config(SystemCoreClock / 1000)) {
  90:inc/user_libs/tm_stm32f4_delay.c **** #if defined(TM_DELAY_TIM)
  91:inc/user_libs/tm_stm32f4_delay.c **** 	TM_DELAY_INT_InitTIM();
  92:inc/user_libs/tm_stm32f4_delay.c **** #else
  93:inc/user_libs/tm_stm32f4_delay.c **** 	/* Set Systick interrupt every 1ms */
  94:inc/user_libs/tm_stm32f4_delay.c **** 	if (SysTick_Config(SystemCoreClock / 1000)) {
 199              		.loc 1 94 0
 200 0054 0D4B     		ldr	r3, .L20	@ tmp114,
 201              	.LBB14:
 202              	.LBB15:
 203              	@ ./inc/CMSIS/core_cm4.h:1285:   SysTick->LOAD  = (ticks & SysTick_LOAD_RELOAD_Msk) - 1;      /* se
 204              		.file 2 "./inc/CMSIS/core_cm4.h"
   1:./inc/CMSIS/core_cm4.h **** /**************************************************************************//**
   2:./inc/CMSIS/core_cm4.h ****  * @file     core_cm4.h
   3:./inc/CMSIS/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:./inc/CMSIS/core_cm4.h ****  * @version  V2.10
   5:./inc/CMSIS/core_cm4.h ****  * @date     19. July 2011
   6:./inc/CMSIS/core_cm4.h ****  *
   7:./inc/CMSIS/core_cm4.h ****  * @note
   8:./inc/CMSIS/core_cm4.h ****  * Copyright (C) 2009-2011 ARM Limited. All rights reserved.
   9:./inc/CMSIS/core_cm4.h ****  *
  10:./inc/CMSIS/core_cm4.h ****  * @par
  11:./inc/CMSIS/core_cm4.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M
  12:./inc/CMSIS/core_cm4.h ****  * processor based microcontrollers.  This file can be freely distributed
  13:./inc/CMSIS/core_cm4.h ****  * within development tools that are supporting such ARM based processors.
  14:./inc/CMSIS/core_cm4.h ****  *
  15:./inc/CMSIS/core_cm4.h ****  * @par
  16:./inc/CMSIS/core_cm4.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:./inc/CMSIS/core_cm4.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:./inc/CMSIS/core_cm4.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:./inc/CMSIS/core_cm4.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:./inc/CMSIS/core_cm4.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:./inc/CMSIS/core_cm4.h ****  *
  22:./inc/CMSIS/core_cm4.h ****  ******************************************************************************/
  23:./inc/CMSIS/core_cm4.h **** #if defined ( __ICCARM__ )
  24:./inc/CMSIS/core_cm4.h ****  #pragma system_include  /* treat file as system include file for MISRA check */
  25:./inc/CMSIS/core_cm4.h **** #endif
  26:./inc/CMSIS/core_cm4.h **** 
  27:./inc/CMSIS/core_cm4.h **** #ifdef __cplusplus
  28:./inc/CMSIS/core_cm4.h ****  extern "C" {
  29:./inc/CMSIS/core_cm4.h **** #endif
  30:./inc/CMSIS/core_cm4.h **** 
  31:./inc/CMSIS/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  32:./inc/CMSIS/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  33:./inc/CMSIS/core_cm4.h **** 
ARM GAS  /tmp/ccFmD5nI.s 			page 7


  34:./inc/CMSIS/core_cm4.h **** 
  35:./inc/CMSIS/core_cm4.h **** /** \mainpage CMSIS Cortex-M4
  36:./inc/CMSIS/core_cm4.h **** 
  37:./inc/CMSIS/core_cm4.h ****   This documentation describes the CMSIS Cortex-M Core Peripheral Access Layer.
  38:./inc/CMSIS/core_cm4.h ****   It consists of:
  39:./inc/CMSIS/core_cm4.h **** 
  40:./inc/CMSIS/core_cm4.h ****      - Cortex-M Core Register Definitions
  41:./inc/CMSIS/core_cm4.h ****      - Cortex-M functions
  42:./inc/CMSIS/core_cm4.h ****      - Cortex-M instructions
  43:./inc/CMSIS/core_cm4.h ****      - Cortex-M SIMD instructions
  44:./inc/CMSIS/core_cm4.h **** 
  45:./inc/CMSIS/core_cm4.h ****   The CMSIS Cortex-M4 Core Peripheral Access Layer contains C and assembly functions that ease
  46:./inc/CMSIS/core_cm4.h ****   access to the Cortex-M Core
  47:./inc/CMSIS/core_cm4.h ****  */
  48:./inc/CMSIS/core_cm4.h **** 
  49:./inc/CMSIS/core_cm4.h **** /** \defgroup CMSIS_MISRA_Exceptions  CMSIS MISRA-C:2004 Compliance Exceptions
  50:./inc/CMSIS/core_cm4.h ****   CMSIS violates following MISRA-C2004 Rules:
  51:./inc/CMSIS/core_cm4.h ****   
  52:./inc/CMSIS/core_cm4.h ****    - Violates MISRA 2004 Required Rule 8.5, object/function definition in header file.<br>
  53:./inc/CMSIS/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'. 
  54:./inc/CMSIS/core_cm4.h **** 
  55:./inc/CMSIS/core_cm4.h ****    - Violates MISRA 2004 Required Rule 18.4, declaration of union type or object of union type: '{.
  56:./inc/CMSIS/core_cm4.h ****      Unions are used for effective representation of core registers.
  57:./inc/CMSIS/core_cm4.h ****    
  58:./inc/CMSIS/core_cm4.h ****    - Violates MISRA 2004 Advisory Rule 19.7, Function-like macro defined.<br>
  59:./inc/CMSIS/core_cm4.h ****      Function-like macros are used to allow more efficient code. 
  60:./inc/CMSIS/core_cm4.h **** 
  61:./inc/CMSIS/core_cm4.h ****  */
  62:./inc/CMSIS/core_cm4.h **** 
  63:./inc/CMSIS/core_cm4.h **** 
  64:./inc/CMSIS/core_cm4.h **** /*******************************************************************************
  65:./inc/CMSIS/core_cm4.h ****  *                 CMSIS definitions
  66:./inc/CMSIS/core_cm4.h ****  ******************************************************************************/
  67:./inc/CMSIS/core_cm4.h **** /** \defgroup CMSIS_core_definitions CMSIS Core Definitions
  68:./inc/CMSIS/core_cm4.h ****   This file defines all structures and symbols for CMSIS core:
  69:./inc/CMSIS/core_cm4.h ****    - CMSIS version number
  70:./inc/CMSIS/core_cm4.h ****    - Cortex-M core
  71:./inc/CMSIS/core_cm4.h ****    - Cortex-M core Revision Number
  72:./inc/CMSIS/core_cm4.h ****   @{
  73:./inc/CMSIS/core_cm4.h ****  */
  74:./inc/CMSIS/core_cm4.h **** 
  75:./inc/CMSIS/core_cm4.h **** /*  CMSIS CM4 definitions */
  76:./inc/CMSIS/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (0x02)                                                       /*!<
  77:./inc/CMSIS/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (0x10)                                                       /*!<
  78:./inc/CMSIS/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16) | __CM4_CMSIS_VERSION_SUB) /*!<
  79:./inc/CMSIS/core_cm4.h **** 
  80:./inc/CMSIS/core_cm4.h **** #define __CORTEX_M                (0x04)                                                       /*!<
  81:./inc/CMSIS/core_cm4.h **** 
  82:./inc/CMSIS/core_cm4.h **** 
  83:./inc/CMSIS/core_cm4.h **** #if   defined ( __CC_ARM )
  84:./inc/CMSIS/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  85:./inc/CMSIS/core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  86:./inc/CMSIS/core_cm4.h **** 
  87:./inc/CMSIS/core_cm4.h **** #elif defined ( __ICCARM__ )
  88:./inc/CMSIS/core_cm4.h ****   #define __ASM           __asm                                       /*!< asm keyword for IAR Comp
  89:./inc/CMSIS/core_cm4.h ****   #define __INLINE        inline                                      /*!< inline keyword for IAR C
  90:./inc/CMSIS/core_cm4.h **** 
ARM GAS  /tmp/ccFmD5nI.s 			page 8


  91:./inc/CMSIS/core_cm4.h **** #elif defined ( __GNUC__ )
  92:./inc/CMSIS/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  93:./inc/CMSIS/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  94:./inc/CMSIS/core_cm4.h **** 
  95:./inc/CMSIS/core_cm4.h **** #elif defined ( __TASKING__ )
  96:./inc/CMSIS/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
  97:./inc/CMSIS/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
  98:./inc/CMSIS/core_cm4.h **** 
  99:./inc/CMSIS/core_cm4.h **** #endif
 100:./inc/CMSIS/core_cm4.h **** 
 101:./inc/CMSIS/core_cm4.h **** /*!< __FPU_USED to be checked prior to making use of FPU specific registers and functions */
 102:./inc/CMSIS/core_cm4.h **** #if defined ( __CC_ARM )
 103:./inc/CMSIS/core_cm4.h ****   #if defined __TARGET_FPU_VFP
 104:./inc/CMSIS/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 105:./inc/CMSIS/core_cm4.h ****       #define __FPU_USED       1
 106:./inc/CMSIS/core_cm4.h ****     #else
 107:./inc/CMSIS/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 108:./inc/CMSIS/core_cm4.h ****       #define __FPU_USED       0
 109:./inc/CMSIS/core_cm4.h ****     #endif
 110:./inc/CMSIS/core_cm4.h ****   #else
 111:./inc/CMSIS/core_cm4.h ****     #define __FPU_USED         0
 112:./inc/CMSIS/core_cm4.h ****   #endif
 113:./inc/CMSIS/core_cm4.h **** 
 114:./inc/CMSIS/core_cm4.h **** #elif defined ( __ICCARM__ )
 115:./inc/CMSIS/core_cm4.h ****   #if defined __ARMVFP__
 116:./inc/CMSIS/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 117:./inc/CMSIS/core_cm4.h ****       #define __FPU_USED       1
 118:./inc/CMSIS/core_cm4.h ****     #else
 119:./inc/CMSIS/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 120:./inc/CMSIS/core_cm4.h ****       #define __FPU_USED       0
 121:./inc/CMSIS/core_cm4.h ****     #endif
 122:./inc/CMSIS/core_cm4.h ****   #else
 123:./inc/CMSIS/core_cm4.h ****     #define __FPU_USED         0
 124:./inc/CMSIS/core_cm4.h ****   #endif
 125:./inc/CMSIS/core_cm4.h **** 
 126:./inc/CMSIS/core_cm4.h **** #elif defined ( __GNUC__ )
 127:./inc/CMSIS/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 128:./inc/CMSIS/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 129:./inc/CMSIS/core_cm4.h ****       #define __FPU_USED       1
 130:./inc/CMSIS/core_cm4.h ****     #else
 131:./inc/CMSIS/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 132:./inc/CMSIS/core_cm4.h ****       #define __FPU_USED       0
 133:./inc/CMSIS/core_cm4.h ****     #endif
 134:./inc/CMSIS/core_cm4.h ****   #else
 135:./inc/CMSIS/core_cm4.h ****     #define __FPU_USED         0
 136:./inc/CMSIS/core_cm4.h ****   #endif
 137:./inc/CMSIS/core_cm4.h **** 
 138:./inc/CMSIS/core_cm4.h **** #elif defined ( __TASKING__ )
 139:./inc/CMSIS/core_cm4.h ****     /* add preprocessor checks to define __FPU_USED */
 140:./inc/CMSIS/core_cm4.h ****     #define __FPU_USED         0
 141:./inc/CMSIS/core_cm4.h **** #endif
 142:./inc/CMSIS/core_cm4.h **** 
 143:./inc/CMSIS/core_cm4.h **** #include <stdint.h>                      /*!< standard types definitions                      */
 144:./inc/CMSIS/core_cm4.h **** #include <core_cmInstr.h>                /*!< Core Instruction Access                         */
 145:./inc/CMSIS/core_cm4.h **** #include <core_cmFunc.h>                 /*!< Core Function Access                            */
 146:./inc/CMSIS/core_cm4.h **** #include <core_cm4_simd.h>               /*!< Compiler specific SIMD Intrinsics               */
 147:./inc/CMSIS/core_cm4.h **** 
ARM GAS  /tmp/ccFmD5nI.s 			page 9


 148:./inc/CMSIS/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 149:./inc/CMSIS/core_cm4.h **** 
 150:./inc/CMSIS/core_cm4.h **** #ifndef __CMSIS_GENERIC
 151:./inc/CMSIS/core_cm4.h **** 
 152:./inc/CMSIS/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 153:./inc/CMSIS/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 154:./inc/CMSIS/core_cm4.h **** 
 155:./inc/CMSIS/core_cm4.h **** /* check device defines and use defaults */
 156:./inc/CMSIS/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 157:./inc/CMSIS/core_cm4.h ****   #ifndef __CM4_REV
 158:./inc/CMSIS/core_cm4.h ****     #define __CM4_REV               0x0000
 159:./inc/CMSIS/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 160:./inc/CMSIS/core_cm4.h ****   #endif
 161:./inc/CMSIS/core_cm4.h **** 
 162:./inc/CMSIS/core_cm4.h ****   #ifndef __FPU_PRESENT
 163:./inc/CMSIS/core_cm4.h ****     #define __FPU_PRESENT             0
 164:./inc/CMSIS/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 165:./inc/CMSIS/core_cm4.h ****   #endif
 166:./inc/CMSIS/core_cm4.h **** 
 167:./inc/CMSIS/core_cm4.h ****   #ifndef __MPU_PRESENT
 168:./inc/CMSIS/core_cm4.h ****     #define __MPU_PRESENT             0
 169:./inc/CMSIS/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 170:./inc/CMSIS/core_cm4.h ****   #endif
 171:./inc/CMSIS/core_cm4.h **** 
 172:./inc/CMSIS/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 173:./inc/CMSIS/core_cm4.h ****     #define __NVIC_PRIO_BITS          4
 174:./inc/CMSIS/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 175:./inc/CMSIS/core_cm4.h ****   #endif
 176:./inc/CMSIS/core_cm4.h **** 
 177:./inc/CMSIS/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 178:./inc/CMSIS/core_cm4.h ****     #define __Vendor_SysTickConfig    0
 179:./inc/CMSIS/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 180:./inc/CMSIS/core_cm4.h ****   #endif
 181:./inc/CMSIS/core_cm4.h **** #endif
 182:./inc/CMSIS/core_cm4.h **** 
 183:./inc/CMSIS/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 184:./inc/CMSIS/core_cm4.h **** #ifdef __cplusplus
 185:./inc/CMSIS/core_cm4.h ****   #define   __I     volatile             /*!< defines 'read only' permissions                 */
 186:./inc/CMSIS/core_cm4.h **** #else
 187:./inc/CMSIS/core_cm4.h ****   #define   __I     volatile const       /*!< defines 'read only' permissions                 */
 188:./inc/CMSIS/core_cm4.h **** #endif
 189:./inc/CMSIS/core_cm4.h **** #define     __O     volatile             /*!< defines 'write only' permissions                */
 190:./inc/CMSIS/core_cm4.h **** #define     __IO    volatile             /*!< defines 'read / write' permissions              */
 191:./inc/CMSIS/core_cm4.h **** 
 192:./inc/CMSIS/core_cm4.h **** /*@} end of group CMSIS_core_definitions */
 193:./inc/CMSIS/core_cm4.h **** 
 194:./inc/CMSIS/core_cm4.h **** 
 195:./inc/CMSIS/core_cm4.h **** 
 196:./inc/CMSIS/core_cm4.h **** /*******************************************************************************
 197:./inc/CMSIS/core_cm4.h ****  *                 Register Abstraction
 198:./inc/CMSIS/core_cm4.h ****  ******************************************************************************/
 199:./inc/CMSIS/core_cm4.h **** /** \defgroup CMSIS_core_register CMSIS Core Register
 200:./inc/CMSIS/core_cm4.h ****   Core Register contain:
 201:./inc/CMSIS/core_cm4.h ****   - Core Register
 202:./inc/CMSIS/core_cm4.h ****   - Core NVIC Register
 203:./inc/CMSIS/core_cm4.h ****   - Core SCB Register
 204:./inc/CMSIS/core_cm4.h ****   - Core SysTick Register
ARM GAS  /tmp/ccFmD5nI.s 			page 10


 205:./inc/CMSIS/core_cm4.h ****   - Core Debug Register
 206:./inc/CMSIS/core_cm4.h ****   - Core MPU Register
 207:./inc/CMSIS/core_cm4.h ****   - Core FPU Register
 208:./inc/CMSIS/core_cm4.h **** */
 209:./inc/CMSIS/core_cm4.h **** 
 210:./inc/CMSIS/core_cm4.h **** /** \ingroup  CMSIS_core_register
 211:./inc/CMSIS/core_cm4.h ****     \defgroup CMSIS_CORE CMSIS Core
 212:./inc/CMSIS/core_cm4.h ****   Type definitions for the Cortex-M Core Registers
 213:./inc/CMSIS/core_cm4.h ****   @{
 214:./inc/CMSIS/core_cm4.h ****  */
 215:./inc/CMSIS/core_cm4.h **** 
 216:./inc/CMSIS/core_cm4.h **** /** \brief  Union type to access the Application Program Status Register (APSR).
 217:./inc/CMSIS/core_cm4.h ****  */
 218:./inc/CMSIS/core_cm4.h **** typedef union
 219:./inc/CMSIS/core_cm4.h **** {
 220:./inc/CMSIS/core_cm4.h ****   struct
 221:./inc/CMSIS/core_cm4.h ****   {
 222:./inc/CMSIS/core_cm4.h **** #if (__CORTEX_M != 0x04)
 223:./inc/CMSIS/core_cm4.h ****     uint32_t _reserved0:27;              /*!< bit:  0..26  Reserved                           */
 224:./inc/CMSIS/core_cm4.h **** #else
 225:./inc/CMSIS/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved                           */
 226:./inc/CMSIS/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 227:./inc/CMSIS/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved                           */
 228:./inc/CMSIS/core_cm4.h **** #endif
 229:./inc/CMSIS/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 230:./inc/CMSIS/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 231:./inc/CMSIS/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 232:./inc/CMSIS/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 233:./inc/CMSIS/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 234:./inc/CMSIS/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 235:./inc/CMSIS/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 236:./inc/CMSIS/core_cm4.h **** } APSR_Type;
 237:./inc/CMSIS/core_cm4.h **** 
 238:./inc/CMSIS/core_cm4.h **** 
 239:./inc/CMSIS/core_cm4.h **** /** \brief  Union type to access the Interrupt Program Status Register (IPSR).
 240:./inc/CMSIS/core_cm4.h ****  */
 241:./inc/CMSIS/core_cm4.h **** typedef union
 242:./inc/CMSIS/core_cm4.h **** {
 243:./inc/CMSIS/core_cm4.h ****   struct
 244:./inc/CMSIS/core_cm4.h ****   {
 245:./inc/CMSIS/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 246:./inc/CMSIS/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved                           */
 247:./inc/CMSIS/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 248:./inc/CMSIS/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 249:./inc/CMSIS/core_cm4.h **** } IPSR_Type;
 250:./inc/CMSIS/core_cm4.h **** 
 251:./inc/CMSIS/core_cm4.h **** 
 252:./inc/CMSIS/core_cm4.h **** /** \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 253:./inc/CMSIS/core_cm4.h ****  */
 254:./inc/CMSIS/core_cm4.h **** typedef union
 255:./inc/CMSIS/core_cm4.h **** {
 256:./inc/CMSIS/core_cm4.h ****   struct
 257:./inc/CMSIS/core_cm4.h ****   {
 258:./inc/CMSIS/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 259:./inc/CMSIS/core_cm4.h **** #if (__CORTEX_M != 0x04)
 260:./inc/CMSIS/core_cm4.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved                           */
 261:./inc/CMSIS/core_cm4.h **** #else
ARM GAS  /tmp/ccFmD5nI.s 			page 11


 262:./inc/CMSIS/core_cm4.h ****     uint32_t _reserved0:7;               /*!< bit:  9..15  Reserved                           */
 263:./inc/CMSIS/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 264:./inc/CMSIS/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved                           */
 265:./inc/CMSIS/core_cm4.h **** #endif
 266:./inc/CMSIS/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0)          */
 267:./inc/CMSIS/core_cm4.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0)          */
 268:./inc/CMSIS/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 269:./inc/CMSIS/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 270:./inc/CMSIS/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 271:./inc/CMSIS/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 272:./inc/CMSIS/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 273:./inc/CMSIS/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 274:./inc/CMSIS/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 275:./inc/CMSIS/core_cm4.h **** } xPSR_Type;
 276:./inc/CMSIS/core_cm4.h **** 
 277:./inc/CMSIS/core_cm4.h **** 
 278:./inc/CMSIS/core_cm4.h **** /** \brief  Union type to access the Control Registers (CONTROL).
 279:./inc/CMSIS/core_cm4.h ****  */
 280:./inc/CMSIS/core_cm4.h **** typedef union
 281:./inc/CMSIS/core_cm4.h **** {
 282:./inc/CMSIS/core_cm4.h ****   struct
 283:./inc/CMSIS/core_cm4.h ****   {
 284:./inc/CMSIS/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 285:./inc/CMSIS/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used                   */
 286:./inc/CMSIS/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag           */
 287:./inc/CMSIS/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved                           */
 288:./inc/CMSIS/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 289:./inc/CMSIS/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 290:./inc/CMSIS/core_cm4.h **** } CONTROL_Type;
 291:./inc/CMSIS/core_cm4.h **** 
 292:./inc/CMSIS/core_cm4.h **** /*@} end of group CMSIS_CORE */
 293:./inc/CMSIS/core_cm4.h **** 
 294:./inc/CMSIS/core_cm4.h **** 
 295:./inc/CMSIS/core_cm4.h **** /** \ingroup  CMSIS_core_register
 296:./inc/CMSIS/core_cm4.h ****     \defgroup CMSIS_NVIC CMSIS NVIC
 297:./inc/CMSIS/core_cm4.h ****   Type definitions for the Cortex-M NVIC Registers
 298:./inc/CMSIS/core_cm4.h ****   @{
 299:./inc/CMSIS/core_cm4.h ****  */
 300:./inc/CMSIS/core_cm4.h **** 
 301:./inc/CMSIS/core_cm4.h **** /** \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 302:./inc/CMSIS/core_cm4.h ****  */
 303:./inc/CMSIS/core_cm4.h **** typedef struct
 304:./inc/CMSIS/core_cm4.h **** {
 305:./inc/CMSIS/core_cm4.h ****   __IO uint32_t ISER[8];                 /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register   
 306:./inc/CMSIS/core_cm4.h ****        uint32_t RESERVED0[24];
 307:./inc/CMSIS/core_cm4.h ****   __IO uint32_t ICER[8];                 /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 308:./inc/CMSIS/core_cm4.h ****        uint32_t RSERVED1[24];
 309:./inc/CMSIS/core_cm4.h ****   __IO uint32_t ISPR[8];                 /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register  
 310:./inc/CMSIS/core_cm4.h ****        uint32_t RESERVED2[24];
 311:./inc/CMSIS/core_cm4.h ****   __IO uint32_t ICPR[8];                 /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 312:./inc/CMSIS/core_cm4.h ****        uint32_t RESERVED3[24];
 313:./inc/CMSIS/core_cm4.h ****   __IO uint32_t IABR[8];                 /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register   
 314:./inc/CMSIS/core_cm4.h ****        uint32_t RESERVED4[56];
 315:./inc/CMSIS/core_cm4.h ****   __IO uint8_t  IP[240];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 316:./inc/CMSIS/core_cm4.h ****        uint32_t RESERVED5[644];
 317:./inc/CMSIS/core_cm4.h ****   __O  uint32_t STIR;                    /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 318:./inc/CMSIS/core_cm4.h **** }  NVIC_Type;
ARM GAS  /tmp/ccFmD5nI.s 			page 12


 319:./inc/CMSIS/core_cm4.h **** 
 320:./inc/CMSIS/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 321:./inc/CMSIS/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0                                          /*!< STIR: I
 322:./inc/CMSIS/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL << NVIC_STIR_INTID_Pos)            /*!< STIR: I
 323:./inc/CMSIS/core_cm4.h **** 
 324:./inc/CMSIS/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 325:./inc/CMSIS/core_cm4.h **** 
 326:./inc/CMSIS/core_cm4.h **** 
 327:./inc/CMSIS/core_cm4.h **** /** \ingroup  CMSIS_core_register
 328:./inc/CMSIS/core_cm4.h ****     \defgroup CMSIS_SCB CMSIS SCB
 329:./inc/CMSIS/core_cm4.h ****   Type definitions for the Cortex-M System Control Block Registers
 330:./inc/CMSIS/core_cm4.h ****   @{
 331:./inc/CMSIS/core_cm4.h ****  */
 332:./inc/CMSIS/core_cm4.h **** 
 333:./inc/CMSIS/core_cm4.h **** /** \brief  Structure type to access the System Control Block (SCB).
 334:./inc/CMSIS/core_cm4.h ****  */
 335:./inc/CMSIS/core_cm4.h **** typedef struct
 336:./inc/CMSIS/core_cm4.h **** {
 337:./inc/CMSIS/core_cm4.h ****   __I  uint32_t CPUID;                   /*!< Offset: 0x000 (R/ )  CPUID Base Register             
 338:./inc/CMSIS/core_cm4.h ****   __IO uint32_t ICSR;                    /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 339:./inc/CMSIS/core_cm4.h ****   __IO uint32_t VTOR;                    /*!< Offset: 0x008 (R/W)  Vector Table Offset Register    
 340:./inc/CMSIS/core_cm4.h ****   __IO uint32_t AIRCR;                   /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 341:./inc/CMSIS/core_cm4.h ****   __IO uint32_t SCR;                     /*!< Offset: 0x010 (R/W)  System Control Register         
 342:./inc/CMSIS/core_cm4.h ****   __IO uint32_t CCR;                     /*!< Offset: 0x014 (R/W)  Configuration Control Register  
 343:./inc/CMSIS/core_cm4.h ****   __IO uint8_t  SHP[12];                 /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 344:./inc/CMSIS/core_cm4.h ****   __IO uint32_t SHCSR;                   /*!< Offset: 0x024 (R/W)  System Handler Control and State
 345:./inc/CMSIS/core_cm4.h ****   __IO uint32_t CFSR;                    /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 346:./inc/CMSIS/core_cm4.h ****   __IO uint32_t HFSR;                    /*!< Offset: 0x02C (R/W)  HardFault Status Register       
 347:./inc/CMSIS/core_cm4.h ****   __IO uint32_t DFSR;                    /*!< Offset: 0x030 (R/W)  Debug Fault Status Register     
 348:./inc/CMSIS/core_cm4.h ****   __IO uint32_t MMFAR;                   /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 349:./inc/CMSIS/core_cm4.h ****   __IO uint32_t BFAR;                    /*!< Offset: 0x038 (R/W)  BusFault Address Register       
 350:./inc/CMSIS/core_cm4.h ****   __IO uint32_t AFSR;                    /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 351:./inc/CMSIS/core_cm4.h ****   __I  uint32_t PFR[2];                  /*!< Offset: 0x040 (R/ )  Processor Feature Register      
 352:./inc/CMSIS/core_cm4.h ****   __I  uint32_t DFR;                     /*!< Offset: 0x048 (R/ )  Debug Feature Register          
 353:./inc/CMSIS/core_cm4.h ****   __I  uint32_t ADR;                     /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register      
 354:./inc/CMSIS/core_cm4.h ****   __I  uint32_t MMFR[4];                 /*!< Offset: 0x050 (R/ )  Memory Model Feature Register   
 355:./inc/CMSIS/core_cm4.h ****   __I  uint32_t ISAR[5];                 /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 356:./inc/CMSIS/core_cm4.h ****        uint32_t RESERVED0[5];
 357:./inc/CMSIS/core_cm4.h ****   __IO uint32_t CPACR;                   /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 358:./inc/CMSIS/core_cm4.h **** } SCB_Type;
 359:./inc/CMSIS/core_cm4.h **** 
 360:./inc/CMSIS/core_cm4.h **** /* SCB CPUID Register Definitions */
 361:./inc/CMSIS/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 362:./inc/CMSIS/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 363:./inc/CMSIS/core_cm4.h **** 
 364:./inc/CMSIS/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 365:./inc/CMSIS/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 366:./inc/CMSIS/core_cm4.h **** 
 367:./inc/CMSIS/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16                                             /*!< SCB 
 368:./inc/CMSIS/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 369:./inc/CMSIS/core_cm4.h **** 
 370:./inc/CMSIS/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 371:./inc/CMSIS/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 372:./inc/CMSIS/core_cm4.h **** 
 373:./inc/CMSIS/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 374:./inc/CMSIS/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL << SCB_CPUID_REVISION_Pos)              /*!< SCB 
 375:./inc/CMSIS/core_cm4.h **** 
ARM GAS  /tmp/ccFmD5nI.s 			page 13


 376:./inc/CMSIS/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 377:./inc/CMSIS/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 378:./inc/CMSIS/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 379:./inc/CMSIS/core_cm4.h **** 
 380:./inc/CMSIS/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 381:./inc/CMSIS/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 382:./inc/CMSIS/core_cm4.h **** 
 383:./inc/CMSIS/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 384:./inc/CMSIS/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 385:./inc/CMSIS/core_cm4.h **** 
 386:./inc/CMSIS/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 387:./inc/CMSIS/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 388:./inc/CMSIS/core_cm4.h **** 
 389:./inc/CMSIS/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 390:./inc/CMSIS/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 391:./inc/CMSIS/core_cm4.h **** 
 392:./inc/CMSIS/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 393:./inc/CMSIS/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 394:./inc/CMSIS/core_cm4.h **** 
 395:./inc/CMSIS/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 396:./inc/CMSIS/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 397:./inc/CMSIS/core_cm4.h **** 
 398:./inc/CMSIS/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 399:./inc/CMSIS/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 400:./inc/CMSIS/core_cm4.h **** 
 401:./inc/CMSIS/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 402:./inc/CMSIS/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 403:./inc/CMSIS/core_cm4.h **** 
 404:./inc/CMSIS/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 405:./inc/CMSIS/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL << SCB_ICSR_VECTACTIVE_Pos)           /*!< SCB 
 406:./inc/CMSIS/core_cm4.h **** 
 407:./inc/CMSIS/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 408:./inc/CMSIS/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 409:./inc/CMSIS/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 410:./inc/CMSIS/core_cm4.h **** 
 411:./inc/CMSIS/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 412:./inc/CMSIS/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 413:./inc/CMSIS/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 414:./inc/CMSIS/core_cm4.h **** 
 415:./inc/CMSIS/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 416:./inc/CMSIS/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 417:./inc/CMSIS/core_cm4.h **** 
 418:./inc/CMSIS/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 419:./inc/CMSIS/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 420:./inc/CMSIS/core_cm4.h **** 
 421:./inc/CMSIS/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 422:./inc/CMSIS/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 423:./inc/CMSIS/core_cm4.h **** 
 424:./inc/CMSIS/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 425:./inc/CMSIS/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 426:./inc/CMSIS/core_cm4.h **** 
 427:./inc/CMSIS/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 428:./inc/CMSIS/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 429:./inc/CMSIS/core_cm4.h **** 
 430:./inc/CMSIS/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 431:./inc/CMSIS/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL << SCB_AIRCR_VECTRESET_Pos)               /*!< SCB 
 432:./inc/CMSIS/core_cm4.h **** 
ARM GAS  /tmp/ccFmD5nI.s 			page 14


 433:./inc/CMSIS/core_cm4.h **** /* SCB System Control Register Definitions */
 434:./inc/CMSIS/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 435:./inc/CMSIS/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 436:./inc/CMSIS/core_cm4.h **** 
 437:./inc/CMSIS/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 438:./inc/CMSIS/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 439:./inc/CMSIS/core_cm4.h **** 
 440:./inc/CMSIS/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 441:./inc/CMSIS/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 442:./inc/CMSIS/core_cm4.h **** 
 443:./inc/CMSIS/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 444:./inc/CMSIS/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 445:./inc/CMSIS/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 446:./inc/CMSIS/core_cm4.h **** 
 447:./inc/CMSIS/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 448:./inc/CMSIS/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 449:./inc/CMSIS/core_cm4.h **** 
 450:./inc/CMSIS/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 451:./inc/CMSIS/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 452:./inc/CMSIS/core_cm4.h **** 
 453:./inc/CMSIS/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 454:./inc/CMSIS/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 455:./inc/CMSIS/core_cm4.h **** 
 456:./inc/CMSIS/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 457:./inc/CMSIS/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 458:./inc/CMSIS/core_cm4.h **** 
 459:./inc/CMSIS/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 460:./inc/CMSIS/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL << SCB_CCR_NONBASETHRDENA_Pos)            /*!< SCB 
 461:./inc/CMSIS/core_cm4.h **** 
 462:./inc/CMSIS/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 463:./inc/CMSIS/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 464:./inc/CMSIS/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 465:./inc/CMSIS/core_cm4.h **** 
 466:./inc/CMSIS/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 467:./inc/CMSIS/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 468:./inc/CMSIS/core_cm4.h **** 
 469:./inc/CMSIS/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 470:./inc/CMSIS/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 471:./inc/CMSIS/core_cm4.h **** 
 472:./inc/CMSIS/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 473:./inc/CMSIS/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 474:./inc/CMSIS/core_cm4.h **** 
 475:./inc/CMSIS/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 476:./inc/CMSIS/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 477:./inc/CMSIS/core_cm4.h **** 
 478:./inc/CMSIS/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 479:./inc/CMSIS/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 480:./inc/CMSIS/core_cm4.h **** 
 481:./inc/CMSIS/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 482:./inc/CMSIS/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 483:./inc/CMSIS/core_cm4.h **** 
 484:./inc/CMSIS/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 485:./inc/CMSIS/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 486:./inc/CMSIS/core_cm4.h **** 
 487:./inc/CMSIS/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 488:./inc/CMSIS/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 489:./inc/CMSIS/core_cm4.h **** 
ARM GAS  /tmp/ccFmD5nI.s 			page 15


 490:./inc/CMSIS/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 491:./inc/CMSIS/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 492:./inc/CMSIS/core_cm4.h **** 
 493:./inc/CMSIS/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 494:./inc/CMSIS/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 495:./inc/CMSIS/core_cm4.h **** 
 496:./inc/CMSIS/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 497:./inc/CMSIS/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 498:./inc/CMSIS/core_cm4.h **** 
 499:./inc/CMSIS/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 500:./inc/CMSIS/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 501:./inc/CMSIS/core_cm4.h **** 
 502:./inc/CMSIS/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 503:./inc/CMSIS/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL << SCB_SHCSR_MEMFAULTACT_Pos)             /*!< SCB 
 504:./inc/CMSIS/core_cm4.h **** 
 505:./inc/CMSIS/core_cm4.h **** /* SCB Configurable Fault Status Registers Definitions */
 506:./inc/CMSIS/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 507:./inc/CMSIS/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 508:./inc/CMSIS/core_cm4.h **** 
 509:./inc/CMSIS/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 510:./inc/CMSIS/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 511:./inc/CMSIS/core_cm4.h **** 
 512:./inc/CMSIS/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 513:./inc/CMSIS/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL << SCB_CFSR_MEMFAULTSR_Pos)            /*!< SCB 
 514:./inc/CMSIS/core_cm4.h **** 
 515:./inc/CMSIS/core_cm4.h **** /* SCB Hard Fault Status Registers Definitions */
 516:./inc/CMSIS/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 517:./inc/CMSIS/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 518:./inc/CMSIS/core_cm4.h **** 
 519:./inc/CMSIS/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 520:./inc/CMSIS/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 521:./inc/CMSIS/core_cm4.h **** 
 522:./inc/CMSIS/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 523:./inc/CMSIS/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 524:./inc/CMSIS/core_cm4.h **** 
 525:./inc/CMSIS/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 526:./inc/CMSIS/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 527:./inc/CMSIS/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 528:./inc/CMSIS/core_cm4.h **** 
 529:./inc/CMSIS/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 530:./inc/CMSIS/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 531:./inc/CMSIS/core_cm4.h **** 
 532:./inc/CMSIS/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 533:./inc/CMSIS/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 534:./inc/CMSIS/core_cm4.h **** 
 535:./inc/CMSIS/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 536:./inc/CMSIS/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 537:./inc/CMSIS/core_cm4.h **** 
 538:./inc/CMSIS/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 539:./inc/CMSIS/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL << SCB_DFSR_HALTED_Pos)                   /*!< SCB 
 540:./inc/CMSIS/core_cm4.h **** 
 541:./inc/CMSIS/core_cm4.h **** /*@} end of group CMSIS_SCB */
 542:./inc/CMSIS/core_cm4.h **** 
 543:./inc/CMSIS/core_cm4.h **** 
 544:./inc/CMSIS/core_cm4.h **** /** \ingroup  CMSIS_core_register
 545:./inc/CMSIS/core_cm4.h ****     \defgroup CMSIS_SCnSCB CMSIS System Control and ID Register not in the SCB
 546:./inc/CMSIS/core_cm4.h ****   Type definitions for the Cortex-M System Control and ID Register not in the SCB
ARM GAS  /tmp/ccFmD5nI.s 			page 16


 547:./inc/CMSIS/core_cm4.h ****   @{
 548:./inc/CMSIS/core_cm4.h ****  */
 549:./inc/CMSIS/core_cm4.h **** 
 550:./inc/CMSIS/core_cm4.h **** /** \brief  Structure type to access the System Control and ID Register not in the SCB.
 551:./inc/CMSIS/core_cm4.h ****  */
 552:./inc/CMSIS/core_cm4.h **** typedef struct
 553:./inc/CMSIS/core_cm4.h **** {
 554:./inc/CMSIS/core_cm4.h ****        uint32_t RESERVED0[1];
 555:./inc/CMSIS/core_cm4.h ****   __I  uint32_t ICTR;                    /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 556:./inc/CMSIS/core_cm4.h ****   __IO uint32_t ACTLR;                   /*!< Offset: 0x008 (R/W)  Auxiliary Control Register      
 557:./inc/CMSIS/core_cm4.h **** } SCnSCB_Type;
 558:./inc/CMSIS/core_cm4.h **** 
 559:./inc/CMSIS/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 560:./inc/CMSIS/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0                                          /*!< ICTR: I
 561:./inc/CMSIS/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL << SCnSCB_ICTR_INTLINESNUM_Pos)      /*!< ICTR: I
 562:./inc/CMSIS/core_cm4.h **** 
 563:./inc/CMSIS/core_cm4.h **** /* Auxiliary Control Register Definitions */
 564:./inc/CMSIS/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9                                          /*!< ACTLR: 
 565:./inc/CMSIS/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 566:./inc/CMSIS/core_cm4.h **** 
 567:./inc/CMSIS/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8                                          /*!< ACTLR: 
 568:./inc/CMSIS/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 569:./inc/CMSIS/core_cm4.h **** 
 570:./inc/CMSIS/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2                                          /*!< ACTLR: 
 571:./inc/CMSIS/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 572:./inc/CMSIS/core_cm4.h **** 
 573:./inc/CMSIS/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1                                          /*!< ACTLR: 
 574:./inc/CMSIS/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 575:./inc/CMSIS/core_cm4.h **** 
 576:./inc/CMSIS/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0                                          /*!< ACTLR: 
 577:./inc/CMSIS/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL << SCnSCB_ACTLR_DISMCYCINT_Pos)        /*!< ACTLR: 
 578:./inc/CMSIS/core_cm4.h **** 
 579:./inc/CMSIS/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 580:./inc/CMSIS/core_cm4.h **** 
 581:./inc/CMSIS/core_cm4.h **** 
 582:./inc/CMSIS/core_cm4.h **** /** \ingroup  CMSIS_core_register
 583:./inc/CMSIS/core_cm4.h ****     \defgroup CMSIS_SysTick CMSIS SysTick
 584:./inc/CMSIS/core_cm4.h ****   Type definitions for the Cortex-M System Timer Registers
 585:./inc/CMSIS/core_cm4.h ****   @{
 586:./inc/CMSIS/core_cm4.h ****  */
 587:./inc/CMSIS/core_cm4.h **** 
 588:./inc/CMSIS/core_cm4.h **** /** \brief  Structure type to access the System Timer (SysTick).
 589:./inc/CMSIS/core_cm4.h ****  */
 590:./inc/CMSIS/core_cm4.h **** typedef struct
 591:./inc/CMSIS/core_cm4.h **** {
 592:./inc/CMSIS/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 593:./inc/CMSIS/core_cm4.h ****   __IO uint32_t LOAD;                    /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register   
 594:./inc/CMSIS/core_cm4.h ****   __IO uint32_t VAL;                     /*!< Offset: 0x008 (R/W)  SysTick Current Value Register  
 595:./inc/CMSIS/core_cm4.h ****   __I  uint32_t CALIB;                   /*!< Offset: 0x00C (R/ )  SysTick Calibration Register    
 596:./inc/CMSIS/core_cm4.h **** } SysTick_Type;
 597:./inc/CMSIS/core_cm4.h **** 
 598:./inc/CMSIS/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 599:./inc/CMSIS/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 600:./inc/CMSIS/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 601:./inc/CMSIS/core_cm4.h **** 
 602:./inc/CMSIS/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 603:./inc/CMSIS/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
ARM GAS  /tmp/ccFmD5nI.s 			page 17


 604:./inc/CMSIS/core_cm4.h **** 
 605:./inc/CMSIS/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 606:./inc/CMSIS/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 607:./inc/CMSIS/core_cm4.h **** 
 608:./inc/CMSIS/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 609:./inc/CMSIS/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL << SysTick_CTRL_ENABLE_Pos)               /*!< SysT
 610:./inc/CMSIS/core_cm4.h **** 
 611:./inc/CMSIS/core_cm4.h **** /* SysTick Reload Register Definitions */
 612:./inc/CMSIS/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 613:./inc/CMSIS/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL << SysTick_LOAD_RELOAD_Pos)        /*!< SysT
 614:./inc/CMSIS/core_cm4.h **** 
 615:./inc/CMSIS/core_cm4.h **** /* SysTick Current Register Definitions */
 616:./inc/CMSIS/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 617:./inc/CMSIS/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 618:./inc/CMSIS/core_cm4.h **** 
 619:./inc/CMSIS/core_cm4.h **** /* SysTick Calibration Register Definitions */
 620:./inc/CMSIS/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 621:./inc/CMSIS/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 622:./inc/CMSIS/core_cm4.h **** 
 623:./inc/CMSIS/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 624:./inc/CMSIS/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 625:./inc/CMSIS/core_cm4.h **** 
 626:./inc/CMSIS/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 627:./inc/CMSIS/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL << SysTick_VAL_CURRENT_Pos)        /*!< SysT
 628:./inc/CMSIS/core_cm4.h **** 
 629:./inc/CMSIS/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 630:./inc/CMSIS/core_cm4.h **** 
 631:./inc/CMSIS/core_cm4.h **** 
 632:./inc/CMSIS/core_cm4.h **** /** \ingroup  CMSIS_core_register
 633:./inc/CMSIS/core_cm4.h ****     \defgroup CMSIS_ITM CMSIS ITM
 634:./inc/CMSIS/core_cm4.h ****   Type definitions for the Cortex-M Instrumentation Trace Macrocell (ITM)
 635:./inc/CMSIS/core_cm4.h ****   @{
 636:./inc/CMSIS/core_cm4.h ****  */
 637:./inc/CMSIS/core_cm4.h **** 
 638:./inc/CMSIS/core_cm4.h **** /** \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 639:./inc/CMSIS/core_cm4.h ****  */
 640:./inc/CMSIS/core_cm4.h **** typedef struct
 641:./inc/CMSIS/core_cm4.h **** {
 642:./inc/CMSIS/core_cm4.h ****   __O  union
 643:./inc/CMSIS/core_cm4.h ****   {
 644:./inc/CMSIS/core_cm4.h ****     __O  uint8_t    u8;                  /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit         
 645:./inc/CMSIS/core_cm4.h ****     __O  uint16_t   u16;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit        
 646:./inc/CMSIS/core_cm4.h ****     __O  uint32_t   u32;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit        
 647:./inc/CMSIS/core_cm4.h ****   }  PORT [32];                          /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers     
 648:./inc/CMSIS/core_cm4.h ****        uint32_t RESERVED0[864];
 649:./inc/CMSIS/core_cm4.h ****   __IO uint32_t TER;                     /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register       
 650:./inc/CMSIS/core_cm4.h ****        uint32_t RESERVED1[15];
 651:./inc/CMSIS/core_cm4.h ****   __IO uint32_t TPR;                     /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register    
 652:./inc/CMSIS/core_cm4.h ****        uint32_t RESERVED2[15];
 653:./inc/CMSIS/core_cm4.h ****   __IO uint32_t TCR;                     /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register      
 654:./inc/CMSIS/core_cm4.h **** } ITM_Type;
 655:./inc/CMSIS/core_cm4.h **** 
 656:./inc/CMSIS/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 657:./inc/CMSIS/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0                                          /*!< ITM TPR
 658:./inc/CMSIS/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL << ITM_TPR_PRIVMASK_Pos)             /*!< ITM TPR
 659:./inc/CMSIS/core_cm4.h **** 
 660:./inc/CMSIS/core_cm4.h **** /* ITM Trace Control Register Definitions */
ARM GAS  /tmp/ccFmD5nI.s 			page 18


 661:./inc/CMSIS/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23                                          /*!< ITM TCR
 662:./inc/CMSIS/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                   /*!< ITM TCR
 663:./inc/CMSIS/core_cm4.h **** 
 664:./inc/CMSIS/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16                                          /*!< ITM TCR
 665:./inc/CMSIS/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)          /*!< ITM TCR
 666:./inc/CMSIS/core_cm4.h **** 
 667:./inc/CMSIS/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10                                          /*!< ITM TCR
 668:./inc/CMSIS/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                /*!< ITM TCR
 669:./inc/CMSIS/core_cm4.h **** 
 670:./inc/CMSIS/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8                                          /*!< ITM TCR
 671:./inc/CMSIS/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)             /*!< ITM TCR
 672:./inc/CMSIS/core_cm4.h **** 
 673:./inc/CMSIS/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4                                          /*!< ITM TCR
 674:./inc/CMSIS/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                 /*!< ITM TCR
 675:./inc/CMSIS/core_cm4.h **** 
 676:./inc/CMSIS/core_cm4.h **** #define ITM_TCR_TXENA_Pos                   3                                          /*!< ITM TCR
 677:./inc/CMSIS/core_cm4.h **** #define ITM_TCR_TXENA_Msk                  (1UL << ITM_TCR_TXENA_Pos)                  /*!< ITM TCR
 678:./inc/CMSIS/core_cm4.h **** 
 679:./inc/CMSIS/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2                                          /*!< ITM TCR
 680:./inc/CMSIS/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                /*!< ITM TCR
 681:./inc/CMSIS/core_cm4.h **** 
 682:./inc/CMSIS/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1                                          /*!< ITM TCR
 683:./inc/CMSIS/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                  /*!< ITM TCR
 684:./inc/CMSIS/core_cm4.h **** 
 685:./inc/CMSIS/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0                                          /*!< ITM TCR
 686:./inc/CMSIS/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL << ITM_TCR_ITMENA_Pos)                 /*!< ITM TCR
 687:./inc/CMSIS/core_cm4.h **** 
 688:./inc/CMSIS/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 689:./inc/CMSIS/core_cm4.h **** 
 690:./inc/CMSIS/core_cm4.h **** 
 691:./inc/CMSIS/core_cm4.h **** #if (__MPU_PRESENT == 1)
 692:./inc/CMSIS/core_cm4.h **** /** \ingroup  CMSIS_core_register
 693:./inc/CMSIS/core_cm4.h ****     \defgroup CMSIS_MPU CMSIS MPU
 694:./inc/CMSIS/core_cm4.h ****   Type definitions for the Cortex-M Memory Protection Unit (MPU)
 695:./inc/CMSIS/core_cm4.h ****   @{
 696:./inc/CMSIS/core_cm4.h ****  */
 697:./inc/CMSIS/core_cm4.h **** 
 698:./inc/CMSIS/core_cm4.h **** /** \brief  Structure type to access the Memory Protection Unit (MPU).
 699:./inc/CMSIS/core_cm4.h ****  */
 700:./inc/CMSIS/core_cm4.h **** typedef struct
 701:./inc/CMSIS/core_cm4.h **** {
 702:./inc/CMSIS/core_cm4.h ****   __I  uint32_t TYPE;                    /*!< Offset: 0x000 (R/ )  MPU Type Register               
 703:./inc/CMSIS/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x004 (R/W)  MPU Control Register            
 704:./inc/CMSIS/core_cm4.h ****   __IO uint32_t RNR;                     /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register      
 705:./inc/CMSIS/core_cm4.h ****   __IO uint32_t RBAR;                    /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
 706:./inc/CMSIS/core_cm4.h ****   __IO uint32_t RASR;                    /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
 707:./inc/CMSIS/core_cm4.h ****   __IO uint32_t RBAR_A1;                 /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
 708:./inc/CMSIS/core_cm4.h ****   __IO uint32_t RASR_A1;                 /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
 709:./inc/CMSIS/core_cm4.h ****   __IO uint32_t RBAR_A2;                 /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
 710:./inc/CMSIS/core_cm4.h ****   __IO uint32_t RASR_A2;                 /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
 711:./inc/CMSIS/core_cm4.h ****   __IO uint32_t RBAR_A3;                 /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
 712:./inc/CMSIS/core_cm4.h ****   __IO uint32_t RASR_A3;                 /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
 713:./inc/CMSIS/core_cm4.h **** } MPU_Type;
 714:./inc/CMSIS/core_cm4.h **** 
 715:./inc/CMSIS/core_cm4.h **** /* MPU Type Register */
 716:./inc/CMSIS/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
 717:./inc/CMSIS/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
ARM GAS  /tmp/ccFmD5nI.s 			page 19


 718:./inc/CMSIS/core_cm4.h **** 
 719:./inc/CMSIS/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
 720:./inc/CMSIS/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 721:./inc/CMSIS/core_cm4.h **** 
 722:./inc/CMSIS/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
 723:./inc/CMSIS/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL << MPU_TYPE_SEPARATE_Pos)                 /*!< MPU 
 724:./inc/CMSIS/core_cm4.h **** 
 725:./inc/CMSIS/core_cm4.h **** /* MPU Control Register */
 726:./inc/CMSIS/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
 727:./inc/CMSIS/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 728:./inc/CMSIS/core_cm4.h **** 
 729:./inc/CMSIS/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
 730:./inc/CMSIS/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 731:./inc/CMSIS/core_cm4.h **** 
 732:./inc/CMSIS/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
 733:./inc/CMSIS/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL << MPU_CTRL_ENABLE_Pos)                   /*!< MPU 
 734:./inc/CMSIS/core_cm4.h **** 
 735:./inc/CMSIS/core_cm4.h **** /* MPU Region Number Register */
 736:./inc/CMSIS/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
 737:./inc/CMSIS/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL << MPU_RNR_REGION_Pos)                 /*!< MPU 
 738:./inc/CMSIS/core_cm4.h **** 
 739:./inc/CMSIS/core_cm4.h **** /* MPU Region Base Address Register */
 740:./inc/CMSIS/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
 741:./inc/CMSIS/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
 742:./inc/CMSIS/core_cm4.h **** 
 743:./inc/CMSIS/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
 744:./inc/CMSIS/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 745:./inc/CMSIS/core_cm4.h **** 
 746:./inc/CMSIS/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
 747:./inc/CMSIS/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL << MPU_RBAR_REGION_Pos)                 /*!< MPU 
 748:./inc/CMSIS/core_cm4.h **** 
 749:./inc/CMSIS/core_cm4.h **** /* MPU Region Attribute and Size Register */
 750:./inc/CMSIS/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16                                             /*!< MPU 
 751:./inc/CMSIS/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
 752:./inc/CMSIS/core_cm4.h **** 
 753:./inc/CMSIS/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
 754:./inc/CMSIS/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
 755:./inc/CMSIS/core_cm4.h **** 
 756:./inc/CMSIS/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
 757:./inc/CMSIS/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 758:./inc/CMSIS/core_cm4.h **** 
 759:./inc/CMSIS/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0                                             /*!< MPU 
 760:./inc/CMSIS/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL << MPU_RASR_ENABLE_Pos)                   /*!< MPU 
 761:./inc/CMSIS/core_cm4.h **** 
 762:./inc/CMSIS/core_cm4.h **** /*@} end of group CMSIS_MPU */
 763:./inc/CMSIS/core_cm4.h **** #endif
 764:./inc/CMSIS/core_cm4.h **** 
 765:./inc/CMSIS/core_cm4.h **** 
 766:./inc/CMSIS/core_cm4.h **** #if (__FPU_PRESENT == 1)
 767:./inc/CMSIS/core_cm4.h **** /** \ingroup  CMSIS_core_register
 768:./inc/CMSIS/core_cm4.h ****     \defgroup CMSIS_FPU CMSIS FPU
 769:./inc/CMSIS/core_cm4.h ****   Type definitions for the Cortex-M Floating Point Unit (FPU)
 770:./inc/CMSIS/core_cm4.h ****   @{
 771:./inc/CMSIS/core_cm4.h ****  */
 772:./inc/CMSIS/core_cm4.h **** 
 773:./inc/CMSIS/core_cm4.h **** /** \brief  Structure type to access the Floating Point Unit (FPU).
 774:./inc/CMSIS/core_cm4.h ****  */
ARM GAS  /tmp/ccFmD5nI.s 			page 20


 775:./inc/CMSIS/core_cm4.h **** typedef struct
 776:./inc/CMSIS/core_cm4.h **** {
 777:./inc/CMSIS/core_cm4.h ****        uint32_t RESERVED0[1];
 778:./inc/CMSIS/core_cm4.h ****   __IO uint32_t FPCCR;                   /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
 779:./inc/CMSIS/core_cm4.h ****   __IO uint32_t FPCAR;                   /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
 780:./inc/CMSIS/core_cm4.h ****   __IO uint32_t FPDSCR;                  /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
 781:./inc/CMSIS/core_cm4.h ****   __I  uint32_t MVFR0;                   /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
 782:./inc/CMSIS/core_cm4.h ****   __I  uint32_t MVFR1;                   /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
 783:./inc/CMSIS/core_cm4.h **** } FPU_Type;
 784:./inc/CMSIS/core_cm4.h **** 
 785:./inc/CMSIS/core_cm4.h **** /* Floating-Point Context Control Register */
 786:./inc/CMSIS/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31                                             /*!< FPCC
 787:./inc/CMSIS/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
 788:./inc/CMSIS/core_cm4.h **** 
 789:./inc/CMSIS/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30                                             /*!< FPCC
 790:./inc/CMSIS/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
 791:./inc/CMSIS/core_cm4.h **** 
 792:./inc/CMSIS/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8                                             /*!< FPCC
 793:./inc/CMSIS/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
 794:./inc/CMSIS/core_cm4.h **** 
 795:./inc/CMSIS/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6                                             /*!< FPCC
 796:./inc/CMSIS/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
 797:./inc/CMSIS/core_cm4.h **** 
 798:./inc/CMSIS/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5                                             /*!< FPCC
 799:./inc/CMSIS/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
 800:./inc/CMSIS/core_cm4.h **** 
 801:./inc/CMSIS/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4                                             /*!< FPCC
 802:./inc/CMSIS/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
 803:./inc/CMSIS/core_cm4.h **** 
 804:./inc/CMSIS/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3                                             /*!< FPCC
 805:./inc/CMSIS/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
 806:./inc/CMSIS/core_cm4.h **** 
 807:./inc/CMSIS/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1                                             /*!< FPCC
 808:./inc/CMSIS/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
 809:./inc/CMSIS/core_cm4.h **** 
 810:./inc/CMSIS/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0                                             /*!< FPCC
 811:./inc/CMSIS/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL << FPU_FPCCR_LSPACT_Pos)                  /*!< FPCC
 812:./inc/CMSIS/core_cm4.h **** 
 813:./inc/CMSIS/core_cm4.h **** /* Floating-Point Context Address Register */
 814:./inc/CMSIS/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3                                             /*!< FPCA
 815:./inc/CMSIS/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
 816:./inc/CMSIS/core_cm4.h **** 
 817:./inc/CMSIS/core_cm4.h **** /* Floating-Point Default Status Control Register */
 818:./inc/CMSIS/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26                                             /*!< FPDS
 819:./inc/CMSIS/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
 820:./inc/CMSIS/core_cm4.h **** 
 821:./inc/CMSIS/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25                                             /*!< FPDS
 822:./inc/CMSIS/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
 823:./inc/CMSIS/core_cm4.h **** 
 824:./inc/CMSIS/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24                                             /*!< FPDS
 825:./inc/CMSIS/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
 826:./inc/CMSIS/core_cm4.h **** 
 827:./inc/CMSIS/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22                                             /*!< FPDS
 828:./inc/CMSIS/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
 829:./inc/CMSIS/core_cm4.h **** 
 830:./inc/CMSIS/core_cm4.h **** /* Media and FP Feature Register 0 */
 831:./inc/CMSIS/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28                                             /*!< MVFR
ARM GAS  /tmp/ccFmD5nI.s 			page 21


 832:./inc/CMSIS/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
 833:./inc/CMSIS/core_cm4.h **** 
 834:./inc/CMSIS/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24                                             /*!< MVFR
 835:./inc/CMSIS/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
 836:./inc/CMSIS/core_cm4.h **** 
 837:./inc/CMSIS/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20                                             /*!< MVFR
 838:./inc/CMSIS/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
 839:./inc/CMSIS/core_cm4.h **** 
 840:./inc/CMSIS/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16                                             /*!< MVFR
 841:./inc/CMSIS/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
 842:./inc/CMSIS/core_cm4.h **** 
 843:./inc/CMSIS/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12                                             /*!< MVFR
 844:./inc/CMSIS/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
 845:./inc/CMSIS/core_cm4.h **** 
 846:./inc/CMSIS/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8                                             /*!< MVFR
 847:./inc/CMSIS/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
 848:./inc/CMSIS/core_cm4.h **** 
 849:./inc/CMSIS/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4                                             /*!< MVFR
 850:./inc/CMSIS/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
 851:./inc/CMSIS/core_cm4.h **** 
 852:./inc/CMSIS/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0                                             /*!< MVFR
 853:./inc/CMSIS/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL << FPU_MVFR0_A_SIMD_registers_Pos)      /*!< MVFR
 854:./inc/CMSIS/core_cm4.h **** 
 855:./inc/CMSIS/core_cm4.h **** /* Media and FP Feature Register 1 */
 856:./inc/CMSIS/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28                                             /*!< MVFR
 857:./inc/CMSIS/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
 858:./inc/CMSIS/core_cm4.h **** 
 859:./inc/CMSIS/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24                                             /*!< MVFR
 860:./inc/CMSIS/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
 861:./inc/CMSIS/core_cm4.h **** 
 862:./inc/CMSIS/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4                                             /*!< MVFR
 863:./inc/CMSIS/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
 864:./inc/CMSIS/core_cm4.h **** 
 865:./inc/CMSIS/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0                                             /*!< MVFR
 866:./inc/CMSIS/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL << FPU_MVFR1_FtZ_mode_Pos)              /*!< MVFR
 867:./inc/CMSIS/core_cm4.h **** 
 868:./inc/CMSIS/core_cm4.h **** /*@} end of group CMSIS_FPU */
 869:./inc/CMSIS/core_cm4.h **** #endif
 870:./inc/CMSIS/core_cm4.h **** 
 871:./inc/CMSIS/core_cm4.h **** 
 872:./inc/CMSIS/core_cm4.h **** /** \ingroup  CMSIS_core_register
 873:./inc/CMSIS/core_cm4.h ****     \defgroup CMSIS_CoreDebug CMSIS Core Debug
 874:./inc/CMSIS/core_cm4.h ****   Type definitions for the Cortex-M Core Debug Registers
 875:./inc/CMSIS/core_cm4.h ****   @{
 876:./inc/CMSIS/core_cm4.h ****  */
 877:./inc/CMSIS/core_cm4.h **** 
 878:./inc/CMSIS/core_cm4.h **** /** \brief  Structure type to access the Core Debug Register (CoreDebug).
 879:./inc/CMSIS/core_cm4.h ****  */
 880:./inc/CMSIS/core_cm4.h **** typedef struct
 881:./inc/CMSIS/core_cm4.h **** {
 882:./inc/CMSIS/core_cm4.h ****   __IO uint32_t DHCSR;                   /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
 883:./inc/CMSIS/core_cm4.h ****   __O  uint32_t DCRSR;                   /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
 884:./inc/CMSIS/core_cm4.h ****   __IO uint32_t DCRDR;                   /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
 885:./inc/CMSIS/core_cm4.h ****   __IO uint32_t DEMCR;                   /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
 886:./inc/CMSIS/core_cm4.h **** } CoreDebug_Type;
 887:./inc/CMSIS/core_cm4.h **** 
 888:./inc/CMSIS/core_cm4.h **** /* Debug Halting Control and Status Register */
ARM GAS  /tmp/ccFmD5nI.s 			page 22


 889:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
 890:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
 891:./inc/CMSIS/core_cm4.h **** 
 892:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
 893:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
 894:./inc/CMSIS/core_cm4.h **** 
 895:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
 896:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
 897:./inc/CMSIS/core_cm4.h **** 
 898:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
 899:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
 900:./inc/CMSIS/core_cm4.h **** 
 901:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
 902:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
 903:./inc/CMSIS/core_cm4.h **** 
 904:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
 905:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
 906:./inc/CMSIS/core_cm4.h **** 
 907:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
 908:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
 909:./inc/CMSIS/core_cm4.h **** 
 910:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
 911:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
 912:./inc/CMSIS/core_cm4.h **** 
 913:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
 914:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
 915:./inc/CMSIS/core_cm4.h **** 
 916:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
 917:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
 918:./inc/CMSIS/core_cm4.h **** 
 919:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
 920:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
 921:./inc/CMSIS/core_cm4.h **** 
 922:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
 923:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL << CoreDebug_DHCSR_C_DEBUGEN_Pos)         /*!< Core
 924:./inc/CMSIS/core_cm4.h **** 
 925:./inc/CMSIS/core_cm4.h **** /* Debug Core Register Selector Register */
 926:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
 927:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
 928:./inc/CMSIS/core_cm4.h **** 
 929:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
 930:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL << CoreDebug_DCRSR_REGSEL_Pos)         /*!< Core
 931:./inc/CMSIS/core_cm4.h **** 
 932:./inc/CMSIS/core_cm4.h **** /* Debug Exception and Monitor Control Register */
 933:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
 934:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
 935:./inc/CMSIS/core_cm4.h **** 
 936:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
 937:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
 938:./inc/CMSIS/core_cm4.h **** 
 939:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
 940:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
 941:./inc/CMSIS/core_cm4.h **** 
 942:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
 943:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
 944:./inc/CMSIS/core_cm4.h **** 
 945:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
ARM GAS  /tmp/ccFmD5nI.s 			page 23


 946:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
 947:./inc/CMSIS/core_cm4.h **** 
 948:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
 949:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
 950:./inc/CMSIS/core_cm4.h **** 
 951:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
 952:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
 953:./inc/CMSIS/core_cm4.h **** 
 954:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
 955:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
 956:./inc/CMSIS/core_cm4.h **** 
 957:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
 958:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
 959:./inc/CMSIS/core_cm4.h **** 
 960:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
 961:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
 962:./inc/CMSIS/core_cm4.h **** 
 963:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
 964:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
 965:./inc/CMSIS/core_cm4.h **** 
 966:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
 967:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
 968:./inc/CMSIS/core_cm4.h **** 
 969:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
 970:./inc/CMSIS/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL << CoreDebug_DEMCR_VC_CORERESET_Pos)      /*!< Core
 971:./inc/CMSIS/core_cm4.h **** 
 972:./inc/CMSIS/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
 973:./inc/CMSIS/core_cm4.h **** 
 974:./inc/CMSIS/core_cm4.h **** 
 975:./inc/CMSIS/core_cm4.h **** /** \ingroup  CMSIS_core_register
 976:./inc/CMSIS/core_cm4.h ****   @{
 977:./inc/CMSIS/core_cm4.h ****  */
 978:./inc/CMSIS/core_cm4.h **** 
 979:./inc/CMSIS/core_cm4.h **** /* Memory mapping of Cortex-M4 Hardware */
 980:./inc/CMSIS/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
 981:./inc/CMSIS/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address        
 982:./inc/CMSIS/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
 983:./inc/CMSIS/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address    
 984:./inc/CMSIS/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address       
 985:./inc/CMSIS/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
 986:./inc/CMSIS/core_cm4.h **** 
 987:./inc/CMSIS/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
 988:./inc/CMSIS/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
 989:./inc/CMSIS/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
 990:./inc/CMSIS/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
 991:./inc/CMSIS/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
 992:./inc/CMSIS/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
 993:./inc/CMSIS/core_cm4.h **** 
 994:./inc/CMSIS/core_cm4.h **** #if (__MPU_PRESENT == 1)
 995:./inc/CMSIS/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit  
 996:./inc/CMSIS/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit  
 997:./inc/CMSIS/core_cm4.h **** #endif
 998:./inc/CMSIS/core_cm4.h **** 
 999:./inc/CMSIS/core_cm4.h **** #if (__FPU_PRESENT == 1)
1000:./inc/CMSIS/core_cm4.h ****   #define FPU_BASE          (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit     
1001:./inc/CMSIS/core_cm4.h ****   #define FPU               ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit     
1002:./inc/CMSIS/core_cm4.h **** #endif
ARM GAS  /tmp/ccFmD5nI.s 			page 24


1003:./inc/CMSIS/core_cm4.h **** 
1004:./inc/CMSIS/core_cm4.h **** /*@} */
1005:./inc/CMSIS/core_cm4.h **** 
1006:./inc/CMSIS/core_cm4.h **** 
1007:./inc/CMSIS/core_cm4.h **** 
1008:./inc/CMSIS/core_cm4.h **** /*******************************************************************************
1009:./inc/CMSIS/core_cm4.h ****  *                Hardware Abstraction Layer
1010:./inc/CMSIS/core_cm4.h ****  ******************************************************************************/
1011:./inc/CMSIS/core_cm4.h **** /** \defgroup CMSIS_Core_FunctionInterface CMSIS Core Function Interface
1012:./inc/CMSIS/core_cm4.h ****   Core Function Interface contains:
1013:./inc/CMSIS/core_cm4.h ****   - Core NVIC Functions
1014:./inc/CMSIS/core_cm4.h ****   - Core SysTick Functions
1015:./inc/CMSIS/core_cm4.h ****   - Core Debug Functions
1016:./inc/CMSIS/core_cm4.h ****   - Core Register Access Functions
1017:./inc/CMSIS/core_cm4.h **** */
1018:./inc/CMSIS/core_cm4.h **** 
1019:./inc/CMSIS/core_cm4.h **** 
1020:./inc/CMSIS/core_cm4.h **** 
1021:./inc/CMSIS/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1022:./inc/CMSIS/core_cm4.h **** /** \ingroup  CMSIS_Core_FunctionInterface
1023:./inc/CMSIS/core_cm4.h ****     \defgroup CMSIS_Core_NVICFunctions CMSIS Core NVIC Functions
1024:./inc/CMSIS/core_cm4.h ****   @{
1025:./inc/CMSIS/core_cm4.h ****  */
1026:./inc/CMSIS/core_cm4.h **** 
1027:./inc/CMSIS/core_cm4.h **** /** \brief  Set Priority Grouping
1028:./inc/CMSIS/core_cm4.h **** 
1029:./inc/CMSIS/core_cm4.h ****   This function sets the priority grouping field using the required unlock sequence.
1030:./inc/CMSIS/core_cm4.h ****   The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1031:./inc/CMSIS/core_cm4.h ****   Only values from 0..7 are used.
1032:./inc/CMSIS/core_cm4.h ****   In case of a conflict between priority grouping and available
1033:./inc/CMSIS/core_cm4.h ****   priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1034:./inc/CMSIS/core_cm4.h **** 
1035:./inc/CMSIS/core_cm4.h ****     \param [in]      PriorityGroup  Priority grouping field
1036:./inc/CMSIS/core_cm4.h ****  */
1037:./inc/CMSIS/core_cm4.h **** static __INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1038:./inc/CMSIS/core_cm4.h **** {
1039:./inc/CMSIS/core_cm4.h ****   uint32_t reg_value;
1040:./inc/CMSIS/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07);               /* only values 0..7 a
1041:./inc/CMSIS/core_cm4.h **** 
1042:./inc/CMSIS/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1043:./inc/CMSIS/core_cm4.h ****   reg_value &= ~(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk);             /* clear bits to chan
1044:./inc/CMSIS/core_cm4.h ****   reg_value  =  (reg_value                                 |
1045:./inc/CMSIS/core_cm4.h ****                 ((uint32_t)0x5FA << SCB_AIRCR_VECTKEY_Pos) |
1046:./inc/CMSIS/core_cm4.h ****                 (PriorityGroupTmp << 8));                                     /* Insert write key a
1047:./inc/CMSIS/core_cm4.h ****   SCB->AIRCR =  reg_value;
1048:./inc/CMSIS/core_cm4.h **** }
1049:./inc/CMSIS/core_cm4.h **** 
1050:./inc/CMSIS/core_cm4.h **** 
1051:./inc/CMSIS/core_cm4.h **** /** \brief  Get Priority Grouping
1052:./inc/CMSIS/core_cm4.h **** 
1053:./inc/CMSIS/core_cm4.h ****   This function gets the priority grouping from NVIC Interrupt Controller.
1054:./inc/CMSIS/core_cm4.h ****   Priority grouping is SCB->AIRCR [10:8] PRIGROUP field.
1055:./inc/CMSIS/core_cm4.h **** 
1056:./inc/CMSIS/core_cm4.h ****     \return                Priority grouping field
1057:./inc/CMSIS/core_cm4.h ****  */
1058:./inc/CMSIS/core_cm4.h **** static __INLINE uint32_t NVIC_GetPriorityGrouping(void)
1059:./inc/CMSIS/core_cm4.h **** {
ARM GAS  /tmp/ccFmD5nI.s 			page 25


1060:./inc/CMSIS/core_cm4.h ****   return ((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos);   /* read priority grou
1061:./inc/CMSIS/core_cm4.h **** }
1062:./inc/CMSIS/core_cm4.h **** 
1063:./inc/CMSIS/core_cm4.h **** 
1064:./inc/CMSIS/core_cm4.h **** /** \brief  Enable External Interrupt
1065:./inc/CMSIS/core_cm4.h **** 
1066:./inc/CMSIS/core_cm4.h ****     This function enables a device specific interrupt in the NVIC interrupt controller.
1067:./inc/CMSIS/core_cm4.h ****     The interrupt number cannot be a negative value.
1068:./inc/CMSIS/core_cm4.h **** 
1069:./inc/CMSIS/core_cm4.h ****     \param [in]      IRQn  Number of the external interrupt to enable
1070:./inc/CMSIS/core_cm4.h ****  */
1071:./inc/CMSIS/core_cm4.h **** static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1072:./inc/CMSIS/core_cm4.h **** {
1073:./inc/CMSIS/core_cm4.h **** /*  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));  enable interrupt */
1074:./inc/CMSIS/core_cm4.h ****   NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32
1075:./inc/CMSIS/core_cm4.h **** }
1076:./inc/CMSIS/core_cm4.h **** 
1077:./inc/CMSIS/core_cm4.h **** 
1078:./inc/CMSIS/core_cm4.h **** /** \brief  Disable External Interrupt
1079:./inc/CMSIS/core_cm4.h **** 
1080:./inc/CMSIS/core_cm4.h ****     This function disables a device specific interrupt in the NVIC interrupt controller.
1081:./inc/CMSIS/core_cm4.h ****     The interrupt number cannot be a negative value.
1082:./inc/CMSIS/core_cm4.h **** 
1083:./inc/CMSIS/core_cm4.h ****     \param [in]      IRQn  Number of the external interrupt to disable
1084:./inc/CMSIS/core_cm4.h ****  */
1085:./inc/CMSIS/core_cm4.h **** static __INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1086:./inc/CMSIS/core_cm4.h **** {
1087:./inc/CMSIS/core_cm4.h ****   NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
1088:./inc/CMSIS/core_cm4.h **** }
1089:./inc/CMSIS/core_cm4.h **** 
1090:./inc/CMSIS/core_cm4.h **** 
1091:./inc/CMSIS/core_cm4.h **** /** \brief  Get Pending Interrupt
1092:./inc/CMSIS/core_cm4.h **** 
1093:./inc/CMSIS/core_cm4.h ****     This function reads the pending register in the NVIC and returns the pending bit
1094:./inc/CMSIS/core_cm4.h ****     for the specified interrupt.
1095:./inc/CMSIS/core_cm4.h **** 
1096:./inc/CMSIS/core_cm4.h ****     \param [in]      IRQn  Number of the interrupt for get pending
1097:./inc/CMSIS/core_cm4.h ****     \return             0  Interrupt status is not pending
1098:./inc/CMSIS/core_cm4.h ****     \return             1  Interrupt status is pending
1099:./inc/CMSIS/core_cm4.h ****  */
1100:./inc/CMSIS/core_cm4.h **** static __INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1101:./inc/CMSIS/core_cm4.h **** {
1102:./inc/CMSIS/core_cm4.h ****   return((uint32_t) ((NVIC->ISPR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); 
1103:./inc/CMSIS/core_cm4.h **** }
1104:./inc/CMSIS/core_cm4.h **** 
1105:./inc/CMSIS/core_cm4.h **** 
1106:./inc/CMSIS/core_cm4.h **** /** \brief  Set Pending Interrupt
1107:./inc/CMSIS/core_cm4.h **** 
1108:./inc/CMSIS/core_cm4.h ****     This function sets the pending bit for the specified interrupt.
1109:./inc/CMSIS/core_cm4.h ****     The interrupt number cannot be a negative value.
1110:./inc/CMSIS/core_cm4.h **** 
1111:./inc/CMSIS/core_cm4.h ****     \param [in]      IRQn  Number of the interrupt for set pending
1112:./inc/CMSIS/core_cm4.h ****  */
1113:./inc/CMSIS/core_cm4.h **** static __INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1114:./inc/CMSIS/core_cm4.h **** {
1115:./inc/CMSIS/core_cm4.h ****   NVIC->ISPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* set interrupt pending 
1116:./inc/CMSIS/core_cm4.h **** }
ARM GAS  /tmp/ccFmD5nI.s 			page 26


1117:./inc/CMSIS/core_cm4.h **** 
1118:./inc/CMSIS/core_cm4.h **** 
1119:./inc/CMSIS/core_cm4.h **** /** \brief  Clear Pending Interrupt
1120:./inc/CMSIS/core_cm4.h **** 
1121:./inc/CMSIS/core_cm4.h ****     This function clears the pending bit for the specified interrupt.
1122:./inc/CMSIS/core_cm4.h ****     The interrupt number cannot be a negative value.
1123:./inc/CMSIS/core_cm4.h **** 
1124:./inc/CMSIS/core_cm4.h ****     \param [in]      IRQn  Number of the interrupt for clear pending
1125:./inc/CMSIS/core_cm4.h ****  */
1126:./inc/CMSIS/core_cm4.h **** static __INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1127:./inc/CMSIS/core_cm4.h **** {
1128:./inc/CMSIS/core_cm4.h ****   NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrup
1129:./inc/CMSIS/core_cm4.h **** }
1130:./inc/CMSIS/core_cm4.h **** 
1131:./inc/CMSIS/core_cm4.h **** 
1132:./inc/CMSIS/core_cm4.h **** /** \brief  Get Active Interrupt
1133:./inc/CMSIS/core_cm4.h **** 
1134:./inc/CMSIS/core_cm4.h ****     This function reads the active register in NVIC and returns the active bit.
1135:./inc/CMSIS/core_cm4.h ****     \param [in]      IRQn  Number of the interrupt for get active
1136:./inc/CMSIS/core_cm4.h ****     \return             0  Interrupt status is not active
1137:./inc/CMSIS/core_cm4.h ****     \return             1  Interrupt status is active
1138:./inc/CMSIS/core_cm4.h ****  */
1139:./inc/CMSIS/core_cm4.h **** static __INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1140:./inc/CMSIS/core_cm4.h **** {
1141:./inc/CMSIS/core_cm4.h ****   return((uint32_t)((NVIC->IABR[(uint32_t)(IRQn) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0)); /
1142:./inc/CMSIS/core_cm4.h **** }
1143:./inc/CMSIS/core_cm4.h **** 
1144:./inc/CMSIS/core_cm4.h **** 
1145:./inc/CMSIS/core_cm4.h **** /** \brief  Set Interrupt Priority
1146:./inc/CMSIS/core_cm4.h **** 
1147:./inc/CMSIS/core_cm4.h ****     This function sets the priority for the specified interrupt. The interrupt
1148:./inc/CMSIS/core_cm4.h ****     number can be positive to specify an external (device specific)
1149:./inc/CMSIS/core_cm4.h ****     interrupt, or negative to specify an internal (core) interrupt.
1150:./inc/CMSIS/core_cm4.h **** 
1151:./inc/CMSIS/core_cm4.h ****     Note: The priority cannot be set for every core interrupt.
1152:./inc/CMSIS/core_cm4.h **** 
1153:./inc/CMSIS/core_cm4.h ****     \param [in]      IRQn  Number of the interrupt for set priority
1154:./inc/CMSIS/core_cm4.h ****     \param [in]  priority  Priority to set
1155:./inc/CMSIS/core_cm4.h ****  */
1156:./inc/CMSIS/core_cm4.h **** static __INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1157:./inc/CMSIS/core_cm4.h **** {
1158:./inc/CMSIS/core_cm4.h ****   if(IRQn < 0) {
1159:./inc/CMSIS/core_cm4.h ****     SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set 
1160:./inc/CMSIS/core_cm4.h ****   else {
1161:./inc/CMSIS/core_cm4.h ****     NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set 
1162:./inc/CMSIS/core_cm4.h **** }
1163:./inc/CMSIS/core_cm4.h **** 
1164:./inc/CMSIS/core_cm4.h **** 
1165:./inc/CMSIS/core_cm4.h **** /** \brief  Get Interrupt Priority
1166:./inc/CMSIS/core_cm4.h **** 
1167:./inc/CMSIS/core_cm4.h ****     This function reads the priority for the specified interrupt. The interrupt
1168:./inc/CMSIS/core_cm4.h ****     number can be positive to specify an external (device specific)
1169:./inc/CMSIS/core_cm4.h ****     interrupt, or negative to specify an internal (core) interrupt.
1170:./inc/CMSIS/core_cm4.h **** 
1171:./inc/CMSIS/core_cm4.h ****     The returned priority value is automatically aligned to the implemented
1172:./inc/CMSIS/core_cm4.h ****     priority bits of the microcontroller.
1173:./inc/CMSIS/core_cm4.h **** 
ARM GAS  /tmp/ccFmD5nI.s 			page 27


1174:./inc/CMSIS/core_cm4.h ****     \param [in]   IRQn  Number of the interrupt for get priority
1175:./inc/CMSIS/core_cm4.h ****     \return             Interrupt Priority
1176:./inc/CMSIS/core_cm4.h ****  */
1177:./inc/CMSIS/core_cm4.h **** static __INLINE uint32_t NVIC_GetPriority(IRQn_Type IRQn)
1178:./inc/CMSIS/core_cm4.h **** {
1179:./inc/CMSIS/core_cm4.h **** 
1180:./inc/CMSIS/core_cm4.h ****   if(IRQn < 0) {
1181:./inc/CMSIS/core_cm4.h ****     return((uint32_t)(SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] >> (8 - __NVIC_PRIO_BITS)));  } /* get p
1182:./inc/CMSIS/core_cm4.h ****   else {
1183:./inc/CMSIS/core_cm4.h ****     return((uint32_t)(NVIC->IP[(uint32_t)(IRQn)]           >> (8 - __NVIC_PRIO_BITS)));  } /* get p
1184:./inc/CMSIS/core_cm4.h **** }
1185:./inc/CMSIS/core_cm4.h **** 
1186:./inc/CMSIS/core_cm4.h **** 
1187:./inc/CMSIS/core_cm4.h **** /** \brief  Encode Priority
1188:./inc/CMSIS/core_cm4.h **** 
1189:./inc/CMSIS/core_cm4.h ****     This function encodes the priority for an interrupt with the given priority group,
1190:./inc/CMSIS/core_cm4.h ****     preemptive priority value and sub priority value.
1191:./inc/CMSIS/core_cm4.h ****     In case of a conflict between priority grouping and available
1192:./inc/CMSIS/core_cm4.h ****     priority bits (__NVIC_PRIO_BITS) the samllest possible priority group is set.
1193:./inc/CMSIS/core_cm4.h **** 
1194:./inc/CMSIS/core_cm4.h ****     The returned priority value can be used for NVIC_SetPriority(...) function
1195:./inc/CMSIS/core_cm4.h **** 
1196:./inc/CMSIS/core_cm4.h ****     \param [in]     PriorityGroup  Used priority group
1197:./inc/CMSIS/core_cm4.h ****     \param [in]   PreemptPriority  Preemptive priority value (starting from 0)
1198:./inc/CMSIS/core_cm4.h ****     \param [in]       SubPriority  Sub priority value (starting from 0)
1199:./inc/CMSIS/core_cm4.h ****     \return                        Encoded priority for the interrupt
1200:./inc/CMSIS/core_cm4.h ****  */
1201:./inc/CMSIS/core_cm4.h **** static __INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1202:./inc/CMSIS/core_cm4.h **** {
1203:./inc/CMSIS/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);          /* only values 0..7 are used        
1204:./inc/CMSIS/core_cm4.h ****   uint32_t PreemptPriorityBits;
1205:./inc/CMSIS/core_cm4.h ****   uint32_t SubPriorityBits;
1206:./inc/CMSIS/core_cm4.h **** 
1207:./inc/CMSIS/core_cm4.h ****   PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - Priori
1208:./inc/CMSIS/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + __
1209:./inc/CMSIS/core_cm4.h **** 
1210:./inc/CMSIS/core_cm4.h ****   return (
1211:./inc/CMSIS/core_cm4.h ****            ((PreemptPriority & ((1 << (PreemptPriorityBits)) - 1)) << SubPriorityBits) |
1212:./inc/CMSIS/core_cm4.h ****            ((SubPriority     & ((1 << (SubPriorityBits    )) - 1)))
1213:./inc/CMSIS/core_cm4.h ****          );
1214:./inc/CMSIS/core_cm4.h **** }
1215:./inc/CMSIS/core_cm4.h **** 
1216:./inc/CMSIS/core_cm4.h **** 
1217:./inc/CMSIS/core_cm4.h **** /** \brief  Decode Priority
1218:./inc/CMSIS/core_cm4.h **** 
1219:./inc/CMSIS/core_cm4.h ****     This function decodes an interrupt priority value with the given priority group to
1220:./inc/CMSIS/core_cm4.h ****     preemptive priority value and sub priority value.
1221:./inc/CMSIS/core_cm4.h ****     In case of a conflict between priority grouping and available
1222:./inc/CMSIS/core_cm4.h ****     priority bits (__NVIC_PRIO_BITS) the samllest possible priority group is set.
1223:./inc/CMSIS/core_cm4.h **** 
1224:./inc/CMSIS/core_cm4.h ****     The priority value can be retrieved with NVIC_GetPriority(...) function
1225:./inc/CMSIS/core_cm4.h **** 
1226:./inc/CMSIS/core_cm4.h ****     \param [in]         Priority   Priority value
1227:./inc/CMSIS/core_cm4.h ****     \param [in]     PriorityGroup  Used priority group
1228:./inc/CMSIS/core_cm4.h ****     \param [out] pPreemptPriority  Preemptive priority value (starting from 0)
1229:./inc/CMSIS/core_cm4.h ****     \param [out]     pSubPriority  Sub priority value (starting from 0)
1230:./inc/CMSIS/core_cm4.h ****  */
ARM GAS  /tmp/ccFmD5nI.s 			page 28


1231:./inc/CMSIS/core_cm4.h **** static __INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* pPre
1232:./inc/CMSIS/core_cm4.h **** {
1233:./inc/CMSIS/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & 0x07);          /* only values 0..7 are used        
1234:./inc/CMSIS/core_cm4.h ****   uint32_t PreemptPriorityBits;
1235:./inc/CMSIS/core_cm4.h ****   uint32_t SubPriorityBits;
1236:./inc/CMSIS/core_cm4.h **** 
1237:./inc/CMSIS/core_cm4.h ****   PreemptPriorityBits = ((7 - PriorityGroupTmp) > __NVIC_PRIO_BITS) ? __NVIC_PRIO_BITS : 7 - Priori
1238:./inc/CMSIS/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + __NVIC_PRIO_BITS) < 7) ? 0 : PriorityGroupTmp - 7 + __
1239:./inc/CMSIS/core_cm4.h **** 
1240:./inc/CMSIS/core_cm4.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & ((1 << (PreemptPriorityBits)) - 1);
1241:./inc/CMSIS/core_cm4.h ****   *pSubPriority     = (Priority                   ) & ((1 << (SubPriorityBits    )) - 1);
1242:./inc/CMSIS/core_cm4.h **** }
1243:./inc/CMSIS/core_cm4.h **** 
1244:./inc/CMSIS/core_cm4.h **** 
1245:./inc/CMSIS/core_cm4.h **** /** \brief  System Reset
1246:./inc/CMSIS/core_cm4.h **** 
1247:./inc/CMSIS/core_cm4.h ****     This function initiate a system reset request to reset the MCU.
1248:./inc/CMSIS/core_cm4.h ****  */
1249:./inc/CMSIS/core_cm4.h **** static __INLINE void NVIC_SystemReset(void)
1250:./inc/CMSIS/core_cm4.h **** {
1251:./inc/CMSIS/core_cm4.h ****   __DSB();                                                     /* Ensure all outstanding memory acc
1252:./inc/CMSIS/core_cm4.h ****                                                                   buffered write are completed befo
1253:./inc/CMSIS/core_cm4.h ****   SCB->AIRCR  = ((0x5FA << SCB_AIRCR_VECTKEY_Pos)      |
1254:./inc/CMSIS/core_cm4.h ****                  (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
1255:./inc/CMSIS/core_cm4.h ****                  SCB_AIRCR_SYSRESETREQ_Msk);                   /* Keep priority group unchanged */
1256:./inc/CMSIS/core_cm4.h ****   __DSB();                                                     /* Ensure completion of memory acces
1257:./inc/CMSIS/core_cm4.h ****   while(1);                                                    /* wait until reset */
1258:./inc/CMSIS/core_cm4.h **** }
1259:./inc/CMSIS/core_cm4.h **** 
1260:./inc/CMSIS/core_cm4.h **** /*@} end of CMSIS_Core_NVICFunctions */
1261:./inc/CMSIS/core_cm4.h **** 
1262:./inc/CMSIS/core_cm4.h **** 
1263:./inc/CMSIS/core_cm4.h **** 
1264:./inc/CMSIS/core_cm4.h **** /* ##################################    SysTick function  ########################################
1265:./inc/CMSIS/core_cm4.h **** /** \ingroup  CMSIS_Core_FunctionInterface
1266:./inc/CMSIS/core_cm4.h ****     \defgroup CMSIS_Core_SysTickFunctions CMSIS Core SysTick Functions
1267:./inc/CMSIS/core_cm4.h ****   @{
1268:./inc/CMSIS/core_cm4.h ****  */
1269:./inc/CMSIS/core_cm4.h **** 
1270:./inc/CMSIS/core_cm4.h **** #if (__Vendor_SysTickConfig == 0)
1271:./inc/CMSIS/core_cm4.h **** 
1272:./inc/CMSIS/core_cm4.h **** /** \brief  System Tick Configuration
1273:./inc/CMSIS/core_cm4.h **** 
1274:./inc/CMSIS/core_cm4.h ****     This function initialises the system tick timer and its interrupt and start the system tick tim
1275:./inc/CMSIS/core_cm4.h ****     Counter is in free running mode to generate periodical interrupts.
1276:./inc/CMSIS/core_cm4.h **** 
1277:./inc/CMSIS/core_cm4.h ****     \param [in]  ticks  Number of ticks between two interrupts
1278:./inc/CMSIS/core_cm4.h ****     \return          0  Function succeeded
1279:./inc/CMSIS/core_cm4.h ****     \return          1  Function failed
1280:./inc/CMSIS/core_cm4.h ****  */
1281:./inc/CMSIS/core_cm4.h **** static __INLINE uint32_t SysTick_Config(uint32_t ticks)
1282:./inc/CMSIS/core_cm4.h **** {
1283:./inc/CMSIS/core_cm4.h ****   if (ticks > SysTick_LOAD_RELOAD_Msk)  return (1);            /* Reload value impossible */
1284:./inc/CMSIS/core_cm4.h **** 
1285:./inc/CMSIS/core_cm4.h ****   SysTick->LOAD  = (ticks & SysTick_LOAD_RELOAD_Msk) - 1;      /* set reload register */
 205              		.loc 2 1285 0
 206 0056 0E49     		ldr	r1, .L20+4	@ tmp118,
ARM GAS  /tmp/ccFmD5nI.s 			page 29


 207              	.LBE15:
 208              	.LBE14:
 209              	@ inc/user_libs/tm_stm32f4_delay.c:94: 	if (SysTick_Config(SystemCoreClock / 1000)) {
 210              		.loc 1 94 0
 211 0058 1A68     		ldr	r2, [r3]	@ SystemCoreClock.4_1, SystemCoreClock
 212              	.LVL6:
 213 005a 4FF47A73 		mov	r3, #1000	@ tmp117,
 214 005e B2FBF3F3 		udiv	r3, r2, r3	@ tmp116, SystemCoreClock.4_1, tmp117
 215              	.LVL7:
 216              	.LBB19:
 217              	.LBB18:
 218              	@ ./inc/CMSIS/core_cm4.h:1285:   SysTick->LOAD  = (ticks & SysTick_LOAD_RELOAD_Msk) - 1;      /* se
 219              		.loc 2 1285 0
 220 0062 013B     		subs	r3, r3, #1	@ _11, tmp116,
 221              	.LVL8:
 222 0064 4B60     		str	r3, [r1, #4]	@ _11, MEM[(struct SysTick_Type *)3758153744B].LOAD
 223              	.LVL9:
 224              	.LBB16:
 225              	.LBB17:
 226              	@ ./inc/CMSIS/core_cm4.h:1159:     SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC
1159:./inc/CMSIS/core_cm4.h ****   else {
 227              		.loc 2 1159 0
 228 0066 0B4B     		ldr	r3, .L20+8	@ tmp119,
 229              	.LVL10:
 230 0068 F020     		movs	r0, #240	@ tmp120,
 231 006a 83F82300 		strb	r0, [r3, #35]	@ tmp120, MEM[(struct SCB_Type *)3758157056B].SHP
 232              	.LVL11:
 233              	.LBE17:
 234              	.LBE16:
 235              	@ ./inc/CMSIS/core_cm4.h:1287:   SysTick->VAL   = 0;                                          /* Lo
1286:./inc/CMSIS/core_cm4.h ****   NVIC_SetPriority (SysTick_IRQn, (1<<__NVIC_PRIO_BITS) - 1);  /* set Priority for Cortex-M0 System
1287:./inc/CMSIS/core_cm4.h ****   SysTick->VAL   = 0;                                          /* Load the SysTick Counter Value */
 236              		.loc 2 1287 0
 237 006e 0023     		movs	r3, #0	@ tmp123,
 238 0070 8B60     		str	r3, [r1, #8]	@ tmp123, MEM[(struct SysTick_Type *)3758153744B].VAL
 239              	@ ./inc/CMSIS/core_cm4.h:1288:   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
1288:./inc/CMSIS/core_cm4.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 240              		.loc 2 1288 0
 241 0072 0723     		movs	r3, #7	@ tmp125,
 242 0074 0B60     		str	r3, [r1]	@ tmp125, MEM[(struct SysTick_Type *)3758153744B].CTRL
 243              	.LVL12:
 244              	.LBE18:
 245              	.LBE19:
 246              	@ inc/user_libs/tm_stm32f4_delay.c:101: 		mult = SystemCoreClock / 7000000;
  95:inc/user_libs/tm_stm32f4_delay.c **** 		/* Capture error */
  96:inc/user_libs/tm_stm32f4_delay.c **** 		while (1);
  97:inc/user_libs/tm_stm32f4_delay.c **** 	}
  98:inc/user_libs/tm_stm32f4_delay.c **** 	
  99:inc/user_libs/tm_stm32f4_delay.c **** 	#ifdef __GNUC__
 100:inc/user_libs/tm_stm32f4_delay.c **** 		/* Set multiplier for delay under 1us with pooling mode = not so accurate */
 101:inc/user_libs/tm_stm32f4_delay.c **** 		mult = SystemCoreClock / 7000000;
 247              		.loc 1 101 0
 248 0076 084B     		ldr	r3, .L20+12	@ tmp127,
 249 0078 B2FBF3F2 		udiv	r2, r2, r3	@ _5, SystemCoreClock.4_1, tmp127
 250 007c 074B     		ldr	r3, .L20+16	@ tmp128,
 251 007e 1A60     		str	r2, [r3]	@ _5, mult
 252              	@ inc/user_libs/tm_stm32f4_delay.c:109: 	TM_DELAY_Initialized = 1;
ARM GAS  /tmp/ccFmD5nI.s 			page 30


 102:inc/user_libs/tm_stm32f4_delay.c **** 	#else
 103:inc/user_libs/tm_stm32f4_delay.c **** 		/* Set multiplier for delay under 1us with pooling mode = not so accurate */
 104:inc/user_libs/tm_stm32f4_delay.c **** 		mult = SystemCoreClock / 3000000;
 105:inc/user_libs/tm_stm32f4_delay.c **** 	#endif
 106:inc/user_libs/tm_stm32f4_delay.c **** #endif
 107:inc/user_libs/tm_stm32f4_delay.c **** 	
 108:inc/user_libs/tm_stm32f4_delay.c **** 	/* Set initialized flag */
 109:inc/user_libs/tm_stm32f4_delay.c **** 	TM_DELAY_Initialized = 1;
 253              		.loc 1 109 0
 254 0080 074B     		ldr	r3, .L20+20	@ tmp129,
 255 0082 0122     		movs	r2, #1	@ tmp130,
 256 0084 83F82020 		strb	r2, [r3, #32]	@ tmp130, TM_DELAY_Initialized
 257              	@ inc/user_libs/tm_stm32f4_delay.c:110: }
 110:inc/user_libs/tm_stm32f4_delay.c **** }
 258              		.loc 1 110 0
 259 0088 7047     		bx	lr	@
 260              	.L21:
 261 008a 00BF     		.align	2
 262              	.L20:
 263 008c 00000000 		.word	SystemCoreClock
 264 0090 10E000E0 		.word	-536813552
 265 0094 00ED00E0 		.word	-536810240
 266 0098 C0CF6A00 		.word	7000000
 267 009c 00000000 		.word	mult
 268 00a0 00000000 		.word	.LANCHOR0
 269              		.cfi_endproc
 270              	.LFE113:
 271              		.size	TM_DELAY_Init, .-TM_DELAY_Init
 272              		.align	1
 273              		.global	TM_DELAY_EnableDelayTimer
 274              		.syntax unified
 275              		.thumb
 276              		.thumb_func
 277              		.fpu softvfp
 278              		.type	TM_DELAY_EnableDelayTimer, %function
 279              	TM_DELAY_EnableDelayTimer:
 280              	.LFB114:
 111:inc/user_libs/tm_stm32f4_delay.c **** 
 112:inc/user_libs/tm_stm32f4_delay.c **** void TM_DELAY_EnableDelayTimer(void) {
 281              		.loc 1 112 0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		@ link register save eliminated.
 286              	@ inc/user_libs/tm_stm32f4_delay.c:114: 	if (!TM_DELAY_Initialized) {
 113:inc/user_libs/tm_stm32f4_delay.c **** 	/* Check if library is even initialized */
 114:inc/user_libs/tm_stm32f4_delay.c **** 	if (!TM_DELAY_Initialized) {
 287              		.loc 1 114 0
 288 00a4 044B     		ldr	r3, .L27	@ tmp113,
 289 00a6 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2	@ TM_DELAY_Initialized, TM_DELAY_Initialized
 290 00aa 23B1     		cbz	r3, .L22	@ TM_DELAY_Initialized,
 291              	@ inc/user_libs/tm_stm32f4_delay.c:123: 	SysTick->CTRL |= SysTick_CTRL_TICKINT_Msk;
 115:inc/user_libs/tm_stm32f4_delay.c **** 		return;
 116:inc/user_libs/tm_stm32f4_delay.c **** 	}
 117:inc/user_libs/tm_stm32f4_delay.c **** 	
 118:inc/user_libs/tm_stm32f4_delay.c **** #if defined(TM_DELAY_TIM)
 119:inc/user_libs/tm_stm32f4_delay.c **** 	/* Enable TIMER for delay, useful when you wakeup from sleep mode */
ARM GAS  /tmp/ccFmD5nI.s 			page 31


 120:inc/user_libs/tm_stm32f4_delay.c **** 	TM_DELAY_TIM->CR1 |= TIM_CR1_CEN;
 121:inc/user_libs/tm_stm32f4_delay.c **** #else
 122:inc/user_libs/tm_stm32f4_delay.c **** 	/* Enable systick interrupts, useful when you wakeup from sleep mode */  
 123:inc/user_libs/tm_stm32f4_delay.c **** 	SysTick->CTRL |= SysTick_CTRL_TICKINT_Msk;
 292              		.loc 1 123 0
 293 00ac 034A     		ldr	r2, .L27+4	@ tmp115,
 294 00ae 1368     		ldr	r3, [r2]	@ _2, MEM[(struct SysTick_Type *)3758153744B].CTRL
 295 00b0 43F00203 		orr	r3, r3, #2	@ _3, _2,
 296 00b4 1360     		str	r3, [r2]	@ _3, MEM[(struct SysTick_Type *)3758153744B].CTRL
 297              	.L22:
 298              	@ inc/user_libs/tm_stm32f4_delay.c:125: }
 124:inc/user_libs/tm_stm32f4_delay.c **** #endif
 125:inc/user_libs/tm_stm32f4_delay.c **** }
 299              		.loc 1 125 0
 300 00b6 7047     		bx	lr	@
 301              	.L28:
 302              		.align	2
 303              	.L27:
 304 00b8 00000000 		.word	.LANCHOR0
 305 00bc 10E000E0 		.word	-536813552
 306              		.cfi_endproc
 307              	.LFE114:
 308              		.size	TM_DELAY_EnableDelayTimer, .-TM_DELAY_EnableDelayTimer
 309              		.align	1
 310              		.global	TM_DELAY_DisableDelayTimer
 311              		.syntax unified
 312              		.thumb
 313              		.thumb_func
 314              		.fpu softvfp
 315              		.type	TM_DELAY_DisableDelayTimer, %function
 316              	TM_DELAY_DisableDelayTimer:
 317              	.LFB115:
 126:inc/user_libs/tm_stm32f4_delay.c **** 
 127:inc/user_libs/tm_stm32f4_delay.c **** void TM_DELAY_DisableDelayTimer(void) {
 318              		.loc 1 127 0
 319              		.cfi_startproc
 320              		@ args = 0, pretend = 0, frame = 0
 321              		@ frame_needed = 0, uses_anonymous_args = 0
 322              		@ link register save eliminated.
 323              	@ inc/user_libs/tm_stm32f4_delay.c:133: 	SysTick->CTRL &= ~SysTick_CTRL_TICKINT_Msk;
 128:inc/user_libs/tm_stm32f4_delay.c **** #if defined(TM_DELAY_TIM)
 129:inc/user_libs/tm_stm32f4_delay.c **** 	/* Disable TIMER for delay, useful when you go to sleep mode */
 130:inc/user_libs/tm_stm32f4_delay.c **** 	TM_DELAY_TIM->CR1 &= ~TIM_CR1_CEN;
 131:inc/user_libs/tm_stm32f4_delay.c **** #else
 132:inc/user_libs/tm_stm32f4_delay.c **** 	/* Disable systick, useful when you go to sleep mode */
 133:inc/user_libs/tm_stm32f4_delay.c **** 	SysTick->CTRL &= ~SysTick_CTRL_TICKINT_Msk;
 324              		.loc 1 133 0
 325 00c0 024A     		ldr	r2, .L30	@ tmp112,
 326 00c2 1368     		ldr	r3, [r2]	@ _1, MEM[(struct SysTick_Type *)3758153744B].CTRL
 327 00c4 23F00203 		bic	r3, r3, #2	@ _2, _1,
 328 00c8 1360     		str	r3, [r2]	@ _2, MEM[(struct SysTick_Type *)3758153744B].CTRL
 329              	@ inc/user_libs/tm_stm32f4_delay.c:135: }
 134:inc/user_libs/tm_stm32f4_delay.c **** #endif
 135:inc/user_libs/tm_stm32f4_delay.c **** }
 330              		.loc 1 135 0
 331 00ca 7047     		bx	lr	@
 332              	.L31:
ARM GAS  /tmp/ccFmD5nI.s 			page 32


 333              		.align	2
 334              	.L30:
 335 00cc 10E000E0 		.word	-536813552
 336              		.cfi_endproc
 337              	.LFE115:
 338              		.size	TM_DELAY_DisableDelayTimer, .-TM_DELAY_DisableDelayTimer
 339              		.align	1
 340              		.global	TM_DELAY_TimerCreate
 341              		.syntax unified
 342              		.thumb
 343              		.thumb_func
 344              		.fpu softvfp
 345              		.type	TM_DELAY_TimerCreate, %function
 346              	TM_DELAY_TimerCreate:
 347              	.LFB116:
 136:inc/user_libs/tm_stm32f4_delay.c **** 
 137:inc/user_libs/tm_stm32f4_delay.c **** /* Internal functions */
 138:inc/user_libs/tm_stm32f4_delay.c **** #if defined(TM_DELAY_TIM)
 139:inc/user_libs/tm_stm32f4_delay.c **** void TM_DELAY_INT_InitTIM(void) {
 140:inc/user_libs/tm_stm32f4_delay.c **** 	TIM_TimeBaseInitTypeDef TIM_TimeBaseStruct;
 141:inc/user_libs/tm_stm32f4_delay.c **** 	NVIC_InitTypeDef NVIC_InitStruct;
 142:inc/user_libs/tm_stm32f4_delay.c **** 	TM_TIMER_PROPERTIES_t TIM_Data;
 143:inc/user_libs/tm_stm32f4_delay.c **** 	
 144:inc/user_libs/tm_stm32f4_delay.c **** 	/* Get timer properties */
 145:inc/user_libs/tm_stm32f4_delay.c **** 	TM_TIMER_PROPERTIES_GetTimerProperties(TM_DELAY_TIM, &TIM_Data);
 146:inc/user_libs/tm_stm32f4_delay.c **** 	
 147:inc/user_libs/tm_stm32f4_delay.c **** 	/* Generate timer properties, 1us ticks */
 148:inc/user_libs/tm_stm32f4_delay.c **** 	TM_TIMER_PROPERTIES_GenerateDataForWorkingFrequency(&TIM_Data, 1000000);
 149:inc/user_libs/tm_stm32f4_delay.c **** 	
 150:inc/user_libs/tm_stm32f4_delay.c **** 	/* Enable clock for TIMx */
 151:inc/user_libs/tm_stm32f4_delay.c **** 	TM_TIMER_PROPERTIES_EnableClock(TM_DELAY_TIM);
 152:inc/user_libs/tm_stm32f4_delay.c **** 	
 153:inc/user_libs/tm_stm32f4_delay.c **** 	/* Set timer settings */
 154:inc/user_libs/tm_stm32f4_delay.c **** 	TIM_TimeBaseStruct.TIM_ClockDivision = 0;
 155:inc/user_libs/tm_stm32f4_delay.c **** 	TIM_TimeBaseStruct.TIM_CounterMode = TIM_CounterMode_Up;
 156:inc/user_libs/tm_stm32f4_delay.c **** 	TIM_TimeBaseStruct.TIM_Period = 999; /* 1 millisecond */
 157:inc/user_libs/tm_stm32f4_delay.c **** 	TIM_TimeBaseStruct.TIM_Prescaler = SystemCoreClock / (1000000 * (SystemCoreClock / TIM_Data.TimerF
 158:inc/user_libs/tm_stm32f4_delay.c **** 	TIM_TimeBaseStruct.TIM_RepetitionCounter = 0;
 159:inc/user_libs/tm_stm32f4_delay.c **** 	
 160:inc/user_libs/tm_stm32f4_delay.c **** 	/* Initialize timer */
 161:inc/user_libs/tm_stm32f4_delay.c **** 	TIM_TimeBaseInit(TM_DELAY_TIM, &TIM_TimeBaseStruct);
 162:inc/user_libs/tm_stm32f4_delay.c **** 	
 163:inc/user_libs/tm_stm32f4_delay.c **** 	/* Enable interrupt each update cycle */
 164:inc/user_libs/tm_stm32f4_delay.c **** 	TM_DELAY_TIM->DIER |= TIM_IT_Update;
 165:inc/user_libs/tm_stm32f4_delay.c **** 	
 166:inc/user_libs/tm_stm32f4_delay.c **** 	/* Set NVIC parameters */
 167:inc/user_libs/tm_stm32f4_delay.c **** 	NVIC_InitStruct.NVIC_IRQChannel = TM_DELAY_TIM_IRQ;
 168:inc/user_libs/tm_stm32f4_delay.c **** 	NVIC_InitStruct.NVIC_IRQChannelCmd = ENABLE;
 169:inc/user_libs/tm_stm32f4_delay.c **** 	NVIC_InitStruct.NVIC_IRQChannelPreemptionPriority = 0;
 170:inc/user_libs/tm_stm32f4_delay.c **** 	NVIC_InitStruct.NVIC_IRQChannelSubPriority = 0;
 171:inc/user_libs/tm_stm32f4_delay.c **** 	
 172:inc/user_libs/tm_stm32f4_delay.c **** 	/* Add to NVIC */
 173:inc/user_libs/tm_stm32f4_delay.c **** 	NVIC_Init(&NVIC_InitStruct);
 174:inc/user_libs/tm_stm32f4_delay.c **** 	
 175:inc/user_libs/tm_stm32f4_delay.c **** 	/* Start timer */
 176:inc/user_libs/tm_stm32f4_delay.c **** 	TM_DELAY_TIM->CR1 |= TIM_CR1_CEN;
 177:inc/user_libs/tm_stm32f4_delay.c **** }
ARM GAS  /tmp/ccFmD5nI.s 			page 33


 178:inc/user_libs/tm_stm32f4_delay.c **** #endif
 179:inc/user_libs/tm_stm32f4_delay.c **** 
 180:inc/user_libs/tm_stm32f4_delay.c **** TM_DELAY_Timer_t* TM_DELAY_TimerCreate(uint32_t ReloadValue, uint8_t AutoReload, uint8_t StartTimer
 348              		.loc 1 180 0
 349              		.cfi_startproc
 350              		@ args = 4, pretend = 0, frame = 0
 351              		@ frame_needed = 0, uses_anonymous_args = 0
 352              	.LVL13:
 353 00d0 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}	@
 354              	.LCFI1:
 355              		.cfi_def_cfa_offset 32
 356              		.cfi_offset 3, -32
 357              		.cfi_offset 4, -28
 358              		.cfi_offset 5, -24
 359              		.cfi_offset 6, -20
 360              		.cfi_offset 7, -16
 361              		.cfi_offset 8, -12
 362              		.cfi_offset 9, -8
 363              		.cfi_offset 14, -4
 364              	@ inc/user_libs/tm_stm32f4_delay.c:184: 	if (CustomTimers.Count >= DELAY_MAX_CUSTOM_TIMERS) {
 181:inc/user_libs/tm_stm32f4_delay.c **** 	TM_DELAY_Timer_t* tmp;
 182:inc/user_libs/tm_stm32f4_delay.c **** 	
 183:inc/user_libs/tm_stm32f4_delay.c **** 	/* Check if available */
 184:inc/user_libs/tm_stm32f4_delay.c **** 	if (CustomTimers.Count >= DELAY_MAX_CUSTOM_TIMERS) {
 365              		.loc 1 184 0
 366 00d4 0E4C     		ldr	r4, .L38	@ tmp120,
 367 00d6 257A     		ldrb	r5, [r4, #8]	@ zero_extendqisi2	@ _1, CustomTimers.Count
 368 00d8 042D     		cmp	r5, #4	@ _1,
 369              	@ inc/user_libs/tm_stm32f4_delay.c:180: TM_DELAY_Timer_t* TM_DELAY_TimerCreate(uint32_t ReloadValue
 180:inc/user_libs/tm_stm32f4_delay.c **** 	TM_DELAY_Timer_t* tmp;
 370              		.loc 1 180 0
 371 00da 0646     		mov	r6, r0	@ ReloadValue, ReloadValue
 372 00dc 8946     		mov	r9, r1	@ AutoReload, AutoReload
 373 00de 9046     		mov	r8, r2	@ StartTimer, StartTimer
 374 00e0 1F46     		mov	r7, r3	@ TM_DELAY_CustomTimerCallback, TM_DELAY_CustomTimerCallback
 375              	@ inc/user_libs/tm_stm32f4_delay.c:184: 	if (CustomTimers.Count >= DELAY_MAX_CUSTOM_TIMERS) {
 376              		.loc 1 184 0
 377 00e2 12D8     		bhi	.L34	@,
 378              	@ inc/user_libs/tm_stm32f4_delay.c:189: 	tmp = (TM_DELAY_Timer_t *) LIB_ALLOC_FUNC(sizeof(TM_DELAY_
 185:inc/user_libs/tm_stm32f4_delay.c **** 		return NULL;
 186:inc/user_libs/tm_stm32f4_delay.c **** 	}
 187:inc/user_libs/tm_stm32f4_delay.c **** 	
 188:inc/user_libs/tm_stm32f4_delay.c **** 	/* Try to allocate memory for timer structure */
 189:inc/user_libs/tm_stm32f4_delay.c **** 	tmp = (TM_DELAY_Timer_t *) LIB_ALLOC_FUNC(sizeof(TM_DELAY_Timer_t));
 379              		.loc 1 189 0
 380 00e4 1820     		movs	r0, #24	@,
 381              	.LVL14:
 382 00e6 FFF7FEFF 		bl	malloc	@
 383              	.LVL15:
 384              	@ inc/user_libs/tm_stm32f4_delay.c:192: 	if (tmp == NULL) {
 190:inc/user_libs/tm_stm32f4_delay.c **** 	
 191:inc/user_libs/tm_stm32f4_delay.c **** 	/* Check if allocated */
 192:inc/user_libs/tm_stm32f4_delay.c **** 	if (tmp == NULL) {
 385              		.loc 1 192 0
 386 00ea 60B1     		cbz	r0, .L32	@ <retval>,
 387              	@ inc/user_libs/tm_stm32f4_delay.c:202: 	tmp->UserParameters = UserParameters;
 193:inc/user_libs/tm_stm32f4_delay.c **** 		return NULL;
ARM GAS  /tmp/ccFmD5nI.s 			page 34


 194:inc/user_libs/tm_stm32f4_delay.c **** 	}
 195:inc/user_libs/tm_stm32f4_delay.c **** 	
 196:inc/user_libs/tm_stm32f4_delay.c **** 	/* Fill settings */
 197:inc/user_libs/tm_stm32f4_delay.c **** 	tmp->ARR = ReloadValue;
 198:inc/user_libs/tm_stm32f4_delay.c **** 	tmp->CNT = tmp->ARR;
 199:inc/user_libs/tm_stm32f4_delay.c **** 	tmp->AutoReload = AutoReload;
 200:inc/user_libs/tm_stm32f4_delay.c **** 	tmp->Enabled = StartTimer;
 201:inc/user_libs/tm_stm32f4_delay.c **** 	tmp->Callback = TM_DELAY_CustomTimerCallback;
 202:inc/user_libs/tm_stm32f4_delay.c **** 	tmp->UserParameters = UserParameters;
 388              		.loc 1 202 0
 389 00ec 089B     		ldr	r3, [sp, #32]	@ UserParameters, UserParameters
 390 00ee 4361     		str	r3, [r0, #20]	@ UserParameters, tmp_9->UserParameters
 391              	@ inc/user_libs/tm_stm32f4_delay.c:205: 	CustomTimers.Timers[CustomTimers.Count++] = tmp;
 203:inc/user_libs/tm_stm32f4_delay.c **** 	
 204:inc/user_libs/tm_stm32f4_delay.c **** 	/* Increase number of timers in memory */
 205:inc/user_libs/tm_stm32f4_delay.c **** 	CustomTimers.Timers[CustomTimers.Count++] = tmp;
 392              		.loc 1 205 0
 393 00f0 6B1C     		adds	r3, r5, #1	@ tmp124, _1,
 394 00f2 2372     		strb	r3, [r4, #8]	@ tmp124, CustomTimers.Count
 395              	@ inc/user_libs/tm_stm32f4_delay.c:199: 	tmp->AutoReload = AutoReload;
 199:inc/user_libs/tm_stm32f4_delay.c **** 	tmp->Enabled = StartTimer;
 396              		.loc 1 199 0
 397 00f4 C0E90196 		strd	r9, r6, [r0, #4]	@ AutoReload, ReloadValue, <retval>,
 398              	@ inc/user_libs/tm_stm32f4_delay.c:205: 	CustomTimers.Timers[CustomTimers.Count++] = tmp;
 399              		.loc 1 205 0
 400 00f8 04EB8504 		add	r4, r4, r5, lsl #2	@ tmp127, tmp120, _1,
 401              	@ inc/user_libs/tm_stm32f4_delay.c:197: 	tmp->ARR = ReloadValue;
 197:inc/user_libs/tm_stm32f4_delay.c **** 	tmp->CNT = tmp->ARR;
 402              		.loc 1 197 0
 403 00fc 0660     		str	r6, [r0]	@ ReloadValue, tmp_9->ARR
 404              	@ inc/user_libs/tm_stm32f4_delay.c:200: 	tmp->Enabled = StartTimer;
 200:inc/user_libs/tm_stm32f4_delay.c **** 	tmp->Callback = TM_DELAY_CustomTimerCallback;
 405              		.loc 1 200 0
 406 00fe 80F80C80 		strb	r8, [r0, #12]	@ StartTimer, tmp_9->Enabled
 407              	@ inc/user_libs/tm_stm32f4_delay.c:201: 	tmp->Callback = TM_DELAY_CustomTimerCallback;
 201:inc/user_libs/tm_stm32f4_delay.c **** 	tmp->UserParameters = UserParameters;
 408              		.loc 1 201 0
 409 0102 0761     		str	r7, [r0, #16]	@ TM_DELAY_CustomTimerCallback, tmp_9->Callback
 410              	@ inc/user_libs/tm_stm32f4_delay.c:205: 	CustomTimers.Timers[CustomTimers.Count++] = tmp;
 411              		.loc 1 205 0
 412 0104 E060     		str	r0, [r4, #12]	@ <retval>, CustomTimers.Timers
 413              	.LVL16:
 414              	.L32:
 415              	@ inc/user_libs/tm_stm32f4_delay.c:209: } 
 206:inc/user_libs/tm_stm32f4_delay.c **** 	
 207:inc/user_libs/tm_stm32f4_delay.c **** 	/* Return pointer to user */
 208:inc/user_libs/tm_stm32f4_delay.c **** 	return tmp;
 209:inc/user_libs/tm_stm32f4_delay.c **** } 
 416              		.loc 1 209 0
 417 0106 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}	@
 418              	.LVL17:
 419              	.L34:
 420              	@ inc/user_libs/tm_stm32f4_delay.c:185: 		return NULL;
 185:inc/user_libs/tm_stm32f4_delay.c **** 	}
 421              		.loc 1 185 0
 422 010a 0020     		movs	r0, #0	@ <retval>,
 423              	.LVL18:
ARM GAS  /tmp/ccFmD5nI.s 			page 35


 424 010c FBE7     		b	.L32	@
 425              	.L39:
 426 010e 00BF     		.align	2
 427              	.L38:
 428 0110 00000000 		.word	.LANCHOR0
 429              		.cfi_endproc
 430              	.LFE116:
 431              		.size	TM_DELAY_TimerCreate, .-TM_DELAY_TimerCreate
 432              		.align	1
 433              		.global	TM_DELAY_TimerDelete
 434              		.syntax unified
 435              		.thumb
 436              		.thumb_func
 437              		.fpu softvfp
 438              		.type	TM_DELAY_TimerDelete, %function
 439              	TM_DELAY_TimerDelete:
 440              	.LFB117:
 210:inc/user_libs/tm_stm32f4_delay.c **** 
 211:inc/user_libs/tm_stm32f4_delay.c **** void TM_DELAY_TimerDelete(TM_DELAY_Timer_t* Timer) {
 441              		.loc 1 211 0
 442              		.cfi_startproc
 443              		@ args = 0, pretend = 0, frame = 0
 444              		@ frame_needed = 0, uses_anonymous_args = 0
 445              		@ link register save eliminated.
 446              	.LVL19:
 447 0114 F0B4     		push	{r4, r5, r6, r7}	@
 448              	.LCFI2:
 449              		.cfi_def_cfa_offset 16
 450              		.cfi_offset 4, -16
 451              		.cfi_offset 5, -12
 452              		.cfi_offset 6, -8
 453              		.cfi_offset 7, -4
 454              	@ inc/user_libs/tm_stm32f4_delay.c:217: 	for (i = 0; i < CustomTimers.Count; i++) {
 212:inc/user_libs/tm_stm32f4_delay.c **** 	uint8_t i;
 213:inc/user_libs/tm_stm32f4_delay.c **** 	uint32_t irq;
 214:inc/user_libs/tm_stm32f4_delay.c **** 	TM_DELAY_Timer_t* tmp;
 215:inc/user_libs/tm_stm32f4_delay.c **** 	
 216:inc/user_libs/tm_stm32f4_delay.c **** 	/* Get location in array of pointers */
 217:inc/user_libs/tm_stm32f4_delay.c **** 	for (i = 0; i < CustomTimers.Count; i++) {
 455              		.loc 1 217 0
 456 0116 164B     		ldr	r3, .L49	@ tmp170,
 457 0118 1C46     		mov	r4, r3	@ ivtmp.60, tmp170
 458 011a 0021     		movs	r1, #0	@ ivtmp.50,
 459 011c 14F8085F 		ldrb	r5, [r4, #8]!	@ zero_extendqisi2	@ _4, CustomTimers.Count
 460              	.LVL20:
 461              	.L41:
 462 0120 CAB2     		uxtb	r2, r1	@ i, ivtmp.50
 463              	.LVL21:
 464              	@ inc/user_libs/tm_stm32f4_delay.c:217: 	for (i = 0; i < CustomTimers.Count; i++) {
 465              		.loc 1 217 0 is_stmt 0 discriminator 1
 466 0122 9542     		cmp	r5, r2	@ _4, i
 467 0124 02D8     		bhi	.L43	@,
 468              	@ inc/user_libs/tm_stm32f4_delay.c:224: 	if (i == CustomTimers.Count) {
 218:inc/user_libs/tm_stm32f4_delay.c **** 		if (Timer == CustomTimers.Timers[i]) {
 219:inc/user_libs/tm_stm32f4_delay.c **** 			break;
 220:inc/user_libs/tm_stm32f4_delay.c **** 		}
 221:inc/user_libs/tm_stm32f4_delay.c **** 	}
ARM GAS  /tmp/ccFmD5nI.s 			page 36


 222:inc/user_libs/tm_stm32f4_delay.c **** 	
 223:inc/user_libs/tm_stm32f4_delay.c **** 	/* Check for valid input */
 224:inc/user_libs/tm_stm32f4_delay.c **** 	if (i == CustomTimers.Count) {
 469              		.loc 1 224 0 is_stmt 1
 470 0126 07D1     		bne	.L45	@,
 471              	@ inc/user_libs/tm_stm32f4_delay.c:253: }
 225:inc/user_libs/tm_stm32f4_delay.c **** 		return;
 226:inc/user_libs/tm_stm32f4_delay.c **** 	}
 227:inc/user_libs/tm_stm32f4_delay.c **** 	
 228:inc/user_libs/tm_stm32f4_delay.c **** 	/* Save pointer to timer */
 229:inc/user_libs/tm_stm32f4_delay.c **** 	tmp = CustomTimers.Timers[i];
 230:inc/user_libs/tm_stm32f4_delay.c **** 	
 231:inc/user_libs/tm_stm32f4_delay.c **** 	/* Get interrupt status */
 232:inc/user_libs/tm_stm32f4_delay.c **** 	irq = __get_PRIMASK();
 233:inc/user_libs/tm_stm32f4_delay.c **** 
 234:inc/user_libs/tm_stm32f4_delay.c **** 	/* Disable interrupts */
 235:inc/user_libs/tm_stm32f4_delay.c **** 	__disable_irq();
 236:inc/user_libs/tm_stm32f4_delay.c **** 	
 237:inc/user_libs/tm_stm32f4_delay.c **** 	/* Shift array up */
 238:inc/user_libs/tm_stm32f4_delay.c **** 	for (; i < (CustomTimers.Count - 1); i++) {
 239:inc/user_libs/tm_stm32f4_delay.c **** 		/* Shift data to the left */
 240:inc/user_libs/tm_stm32f4_delay.c **** 		CustomTimers.Timers[i] = CustomTimers.Timers[i + 1];
 241:inc/user_libs/tm_stm32f4_delay.c **** 	}
 242:inc/user_libs/tm_stm32f4_delay.c **** 	
 243:inc/user_libs/tm_stm32f4_delay.c **** 	/* Decrease count */
 244:inc/user_libs/tm_stm32f4_delay.c **** 	CustomTimers.Count--;
 245:inc/user_libs/tm_stm32f4_delay.c **** 	
 246:inc/user_libs/tm_stm32f4_delay.c **** 	/* Enable IRQ if necessary */
 247:inc/user_libs/tm_stm32f4_delay.c **** 	if (!irq) {
 248:inc/user_libs/tm_stm32f4_delay.c **** 		__enable_irq();
 249:inc/user_libs/tm_stm32f4_delay.c **** 	}
 250:inc/user_libs/tm_stm32f4_delay.c **** 	
 251:inc/user_libs/tm_stm32f4_delay.c **** 	/* Free timer */
 252:inc/user_libs/tm_stm32f4_delay.c **** 	LIB_FREE_FUNC(tmp);
 253:inc/user_libs/tm_stm32f4_delay.c **** }
 472              		.loc 1 253 0
 473 0128 F0BC     		pop	{r4, r5, r6, r7}	@
 474              	.LCFI3:
 475              		.cfi_remember_state
 476              		.cfi_restore 7
 477              		.cfi_restore 6
 478              		.cfi_restore 5
 479              		.cfi_restore 4
 480              		.cfi_def_cfa_offset 0
 481 012a 7047     		bx	lr	@
 482              	.L43:
 483              	.LCFI4:
 484              		.cfi_restore_state
 485              	@ inc/user_libs/tm_stm32f4_delay.c:218: 		if (Timer == CustomTimers.Timers[i]) {
 218:inc/user_libs/tm_stm32f4_delay.c **** 		if (Timer == CustomTimers.Timers[i]) {
 486              		.loc 1 218 0
 487 012c 54F8047F 		ldr	r7, [r4, #4]!	@ MEM[base: _39, offset: 0B], MEM[base: _39, offset: 0B]
 488 0130 8742     		cmp	r7, r0	@ MEM[base: _39, offset: 0B], Timer
 489 0132 01F10106 		add	r6, r1, #1	@ ivtmp.50, ivtmp.50,
 490 0136 0FD1     		bne	.L48	@,
 491              	.L45:
 492              	@ inc/user_libs/tm_stm32f4_delay.c:229: 	tmp = CustomTimers.Timers[i];
ARM GAS  /tmp/ccFmD5nI.s 			page 37


 229:inc/user_libs/tm_stm32f4_delay.c **** 	
 493              		.loc 1 229 0
 494 0138 03EB8101 		add	r1, r3, r1, lsl #2	@ tmp174, tmp189, ivtmp.50,
 495 013c C868     		ldr	r0, [r1, #12]	@ tmp, CustomTimers.Timers
 496              	.LVL22:
 497              	.LBB20:
 498              	.LBB21:
 499              	@ ./inc/CMSIS/core_cmFunc.h:461:   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 500              		.file 3 "./inc/CMSIS/core_cmFunc.h"
   1:./inc/CMSIS/core_cmFunc.h **** /**************************************************************************//**
   2:./inc/CMSIS/core_cmFunc.h ****  * @file     core_cmFunc.h
   3:./inc/CMSIS/core_cmFunc.h ****  * @brief    CMSIS Cortex-M Core Function Access Header File
   4:./inc/CMSIS/core_cmFunc.h ****  * @version  V2.10
   5:./inc/CMSIS/core_cmFunc.h ****  * @date     26. July 2011
   6:./inc/CMSIS/core_cmFunc.h ****  *
   7:./inc/CMSIS/core_cmFunc.h ****  * @note
   8:./inc/CMSIS/core_cmFunc.h ****  * Copyright (C) 2009-2011 ARM Limited. All rights reserved.
   9:./inc/CMSIS/core_cmFunc.h ****  *
  10:./inc/CMSIS/core_cmFunc.h ****  * @par
  11:./inc/CMSIS/core_cmFunc.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M 
  12:./inc/CMSIS/core_cmFunc.h ****  * processor based microcontrollers.  This file can be freely distributed 
  13:./inc/CMSIS/core_cmFunc.h ****  * within development tools that are supporting such ARM based processors. 
  14:./inc/CMSIS/core_cmFunc.h ****  *
  15:./inc/CMSIS/core_cmFunc.h ****  * @par
  16:./inc/CMSIS/core_cmFunc.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:./inc/CMSIS/core_cmFunc.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:./inc/CMSIS/core_cmFunc.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:./inc/CMSIS/core_cmFunc.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:./inc/CMSIS/core_cmFunc.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:./inc/CMSIS/core_cmFunc.h ****  *
  22:./inc/CMSIS/core_cmFunc.h ****  ******************************************************************************/
  23:./inc/CMSIS/core_cmFunc.h **** 
  24:./inc/CMSIS/core_cmFunc.h **** #ifndef __CORE_CMFUNC_H
  25:./inc/CMSIS/core_cmFunc.h **** #define __CORE_CMFUNC_H
  26:./inc/CMSIS/core_cmFunc.h **** 
  27:./inc/CMSIS/core_cmFunc.h **** 
  28:./inc/CMSIS/core_cmFunc.h **** /* ###########################  Core Function Access  ########################### */
  29:./inc/CMSIS/core_cmFunc.h **** /** \ingroup  CMSIS_Core_FunctionInterface   
  30:./inc/CMSIS/core_cmFunc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  31:./inc/CMSIS/core_cmFunc.h ****   @{
  32:./inc/CMSIS/core_cmFunc.h ****  */
  33:./inc/CMSIS/core_cmFunc.h **** 
  34:./inc/CMSIS/core_cmFunc.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  35:./inc/CMSIS/core_cmFunc.h **** /* ARM armcc specific functions */
  36:./inc/CMSIS/core_cmFunc.h **** 
  37:./inc/CMSIS/core_cmFunc.h **** #if (__ARMCC_VERSION < 400677)
  38:./inc/CMSIS/core_cmFunc.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  39:./inc/CMSIS/core_cmFunc.h **** #endif
  40:./inc/CMSIS/core_cmFunc.h **** 
  41:./inc/CMSIS/core_cmFunc.h **** /* intrinsic void __enable_irq();     */
  42:./inc/CMSIS/core_cmFunc.h **** /* intrinsic void __disable_irq();    */
  43:./inc/CMSIS/core_cmFunc.h **** 
  44:./inc/CMSIS/core_cmFunc.h **** /** \brief  Get Control Register
  45:./inc/CMSIS/core_cmFunc.h **** 
  46:./inc/CMSIS/core_cmFunc.h ****     This function returns the content of the Control Register.
  47:./inc/CMSIS/core_cmFunc.h **** 
  48:./inc/CMSIS/core_cmFunc.h ****     \return               Control Register value
ARM GAS  /tmp/ccFmD5nI.s 			page 38


  49:./inc/CMSIS/core_cmFunc.h ****  */
  50:./inc/CMSIS/core_cmFunc.h **** static __INLINE uint32_t __get_CONTROL(void)
  51:./inc/CMSIS/core_cmFunc.h **** {
  52:./inc/CMSIS/core_cmFunc.h ****   register uint32_t __regControl         __ASM("control");
  53:./inc/CMSIS/core_cmFunc.h ****   return(__regControl);
  54:./inc/CMSIS/core_cmFunc.h **** }
  55:./inc/CMSIS/core_cmFunc.h **** 
  56:./inc/CMSIS/core_cmFunc.h **** 
  57:./inc/CMSIS/core_cmFunc.h **** /** \brief  Set Control Register
  58:./inc/CMSIS/core_cmFunc.h **** 
  59:./inc/CMSIS/core_cmFunc.h ****     This function writes the given value to the Control Register.
  60:./inc/CMSIS/core_cmFunc.h **** 
  61:./inc/CMSIS/core_cmFunc.h ****     \param [in]    control  Control Register value to set
  62:./inc/CMSIS/core_cmFunc.h ****  */
  63:./inc/CMSIS/core_cmFunc.h **** static __INLINE void __set_CONTROL(uint32_t control)
  64:./inc/CMSIS/core_cmFunc.h **** {
  65:./inc/CMSIS/core_cmFunc.h ****   register uint32_t __regControl         __ASM("control");
  66:./inc/CMSIS/core_cmFunc.h ****   __regControl = control;
  67:./inc/CMSIS/core_cmFunc.h **** }
  68:./inc/CMSIS/core_cmFunc.h **** 
  69:./inc/CMSIS/core_cmFunc.h **** 
  70:./inc/CMSIS/core_cmFunc.h **** /** \brief  Get ISPR Register
  71:./inc/CMSIS/core_cmFunc.h **** 
  72:./inc/CMSIS/core_cmFunc.h ****     This function returns the content of the ISPR Register.
  73:./inc/CMSIS/core_cmFunc.h **** 
  74:./inc/CMSIS/core_cmFunc.h ****     \return               ISPR Register value
  75:./inc/CMSIS/core_cmFunc.h ****  */
  76:./inc/CMSIS/core_cmFunc.h **** static __INLINE uint32_t __get_IPSR(void)
  77:./inc/CMSIS/core_cmFunc.h **** {
  78:./inc/CMSIS/core_cmFunc.h ****   register uint32_t __regIPSR          __ASM("ipsr");
  79:./inc/CMSIS/core_cmFunc.h ****   return(__regIPSR);
  80:./inc/CMSIS/core_cmFunc.h **** }
  81:./inc/CMSIS/core_cmFunc.h **** 
  82:./inc/CMSIS/core_cmFunc.h **** 
  83:./inc/CMSIS/core_cmFunc.h **** /** \brief  Get APSR Register
  84:./inc/CMSIS/core_cmFunc.h **** 
  85:./inc/CMSIS/core_cmFunc.h ****     This function returns the content of the APSR Register.
  86:./inc/CMSIS/core_cmFunc.h **** 
  87:./inc/CMSIS/core_cmFunc.h ****     \return               APSR Register value
  88:./inc/CMSIS/core_cmFunc.h ****  */
  89:./inc/CMSIS/core_cmFunc.h **** static __INLINE uint32_t __get_APSR(void)
  90:./inc/CMSIS/core_cmFunc.h **** {
  91:./inc/CMSIS/core_cmFunc.h ****   register uint32_t __regAPSR          __ASM("apsr");
  92:./inc/CMSIS/core_cmFunc.h ****   return(__regAPSR);
  93:./inc/CMSIS/core_cmFunc.h **** }
  94:./inc/CMSIS/core_cmFunc.h **** 
  95:./inc/CMSIS/core_cmFunc.h **** 
  96:./inc/CMSIS/core_cmFunc.h **** /** \brief  Get xPSR Register
  97:./inc/CMSIS/core_cmFunc.h **** 
  98:./inc/CMSIS/core_cmFunc.h ****     This function returns the content of the xPSR Register.
  99:./inc/CMSIS/core_cmFunc.h **** 
 100:./inc/CMSIS/core_cmFunc.h ****     \return               xPSR Register value
 101:./inc/CMSIS/core_cmFunc.h ****  */
 102:./inc/CMSIS/core_cmFunc.h **** static __INLINE uint32_t __get_xPSR(void)
 103:./inc/CMSIS/core_cmFunc.h **** {
 104:./inc/CMSIS/core_cmFunc.h ****   register uint32_t __regXPSR          __ASM("xpsr");
 105:./inc/CMSIS/core_cmFunc.h ****   return(__regXPSR);
ARM GAS  /tmp/ccFmD5nI.s 			page 39


 106:./inc/CMSIS/core_cmFunc.h **** }
 107:./inc/CMSIS/core_cmFunc.h **** 
 108:./inc/CMSIS/core_cmFunc.h **** 
 109:./inc/CMSIS/core_cmFunc.h **** /** \brief  Get Process Stack Pointer
 110:./inc/CMSIS/core_cmFunc.h **** 
 111:./inc/CMSIS/core_cmFunc.h ****     This function returns the current value of the Process Stack Pointer (PSP).
 112:./inc/CMSIS/core_cmFunc.h **** 
 113:./inc/CMSIS/core_cmFunc.h ****     \return               PSP Register value
 114:./inc/CMSIS/core_cmFunc.h ****  */
 115:./inc/CMSIS/core_cmFunc.h **** static __INLINE uint32_t __get_PSP(void)
 116:./inc/CMSIS/core_cmFunc.h **** {
 117:./inc/CMSIS/core_cmFunc.h ****   register uint32_t __regProcessStackPointer  __ASM("psp");
 118:./inc/CMSIS/core_cmFunc.h ****   return(__regProcessStackPointer);
 119:./inc/CMSIS/core_cmFunc.h **** }
 120:./inc/CMSIS/core_cmFunc.h **** 
 121:./inc/CMSIS/core_cmFunc.h **** 
 122:./inc/CMSIS/core_cmFunc.h **** /** \brief  Set Process Stack Pointer
 123:./inc/CMSIS/core_cmFunc.h **** 
 124:./inc/CMSIS/core_cmFunc.h ****     This function assigns the given value to the Process Stack Pointer (PSP).
 125:./inc/CMSIS/core_cmFunc.h **** 
 126:./inc/CMSIS/core_cmFunc.h ****     \param [in]    topOfProcStack  Process Stack Pointer value to set
 127:./inc/CMSIS/core_cmFunc.h ****  */
 128:./inc/CMSIS/core_cmFunc.h **** static __INLINE void __set_PSP(uint32_t topOfProcStack)
 129:./inc/CMSIS/core_cmFunc.h **** {
 130:./inc/CMSIS/core_cmFunc.h ****   register uint32_t __regProcessStackPointer  __ASM("psp");
 131:./inc/CMSIS/core_cmFunc.h ****   __regProcessStackPointer = topOfProcStack;
 132:./inc/CMSIS/core_cmFunc.h **** }
 133:./inc/CMSIS/core_cmFunc.h **** 
 134:./inc/CMSIS/core_cmFunc.h **** 
 135:./inc/CMSIS/core_cmFunc.h **** /** \brief  Get Main Stack Pointer
 136:./inc/CMSIS/core_cmFunc.h **** 
 137:./inc/CMSIS/core_cmFunc.h ****     This function returns the current value of the Main Stack Pointer (MSP).
 138:./inc/CMSIS/core_cmFunc.h **** 
 139:./inc/CMSIS/core_cmFunc.h ****     \return               MSP Register value
 140:./inc/CMSIS/core_cmFunc.h ****  */
 141:./inc/CMSIS/core_cmFunc.h **** static __INLINE uint32_t __get_MSP(void)
 142:./inc/CMSIS/core_cmFunc.h **** {
 143:./inc/CMSIS/core_cmFunc.h ****   register uint32_t __regMainStackPointer     __ASM("msp");
 144:./inc/CMSIS/core_cmFunc.h ****   return(__regMainStackPointer);
 145:./inc/CMSIS/core_cmFunc.h **** }
 146:./inc/CMSIS/core_cmFunc.h **** 
 147:./inc/CMSIS/core_cmFunc.h **** 
 148:./inc/CMSIS/core_cmFunc.h **** /** \brief  Set Main Stack Pointer
 149:./inc/CMSIS/core_cmFunc.h **** 
 150:./inc/CMSIS/core_cmFunc.h ****     This function assigns the given value to the Main Stack Pointer (MSP).
 151:./inc/CMSIS/core_cmFunc.h **** 
 152:./inc/CMSIS/core_cmFunc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 153:./inc/CMSIS/core_cmFunc.h ****  */
 154:./inc/CMSIS/core_cmFunc.h **** static __INLINE void __set_MSP(uint32_t topOfMainStack)
 155:./inc/CMSIS/core_cmFunc.h **** {
 156:./inc/CMSIS/core_cmFunc.h ****   register uint32_t __regMainStackPointer     __ASM("msp");
 157:./inc/CMSIS/core_cmFunc.h ****   __regMainStackPointer = topOfMainStack;
 158:./inc/CMSIS/core_cmFunc.h **** }
 159:./inc/CMSIS/core_cmFunc.h **** 
 160:./inc/CMSIS/core_cmFunc.h **** 
 161:./inc/CMSIS/core_cmFunc.h **** /** \brief  Get Priority Mask
 162:./inc/CMSIS/core_cmFunc.h **** 
ARM GAS  /tmp/ccFmD5nI.s 			page 40


 163:./inc/CMSIS/core_cmFunc.h ****     This function returns the current state of the priority mask bit from the Priority Mask Registe
 164:./inc/CMSIS/core_cmFunc.h **** 
 165:./inc/CMSIS/core_cmFunc.h ****     \return               Priority Mask value
 166:./inc/CMSIS/core_cmFunc.h ****  */
 167:./inc/CMSIS/core_cmFunc.h **** static __INLINE uint32_t __get_PRIMASK(void)
 168:./inc/CMSIS/core_cmFunc.h **** {
 169:./inc/CMSIS/core_cmFunc.h ****   register uint32_t __regPriMask         __ASM("primask");
 170:./inc/CMSIS/core_cmFunc.h ****   return(__regPriMask);
 171:./inc/CMSIS/core_cmFunc.h **** }
 172:./inc/CMSIS/core_cmFunc.h **** 
 173:./inc/CMSIS/core_cmFunc.h **** 
 174:./inc/CMSIS/core_cmFunc.h **** /** \brief  Set Priority Mask
 175:./inc/CMSIS/core_cmFunc.h **** 
 176:./inc/CMSIS/core_cmFunc.h ****     This function assigns the given value to the Priority Mask Register.
 177:./inc/CMSIS/core_cmFunc.h **** 
 178:./inc/CMSIS/core_cmFunc.h ****     \param [in]    priMask  Priority Mask
 179:./inc/CMSIS/core_cmFunc.h ****  */
 180:./inc/CMSIS/core_cmFunc.h **** static __INLINE void __set_PRIMASK(uint32_t priMask)
 181:./inc/CMSIS/core_cmFunc.h **** {
 182:./inc/CMSIS/core_cmFunc.h ****   register uint32_t __regPriMask         __ASM("primask");
 183:./inc/CMSIS/core_cmFunc.h ****   __regPriMask = (priMask);
 184:./inc/CMSIS/core_cmFunc.h **** }
 185:./inc/CMSIS/core_cmFunc.h ****  
 186:./inc/CMSIS/core_cmFunc.h **** 
 187:./inc/CMSIS/core_cmFunc.h **** #if       (__CORTEX_M >= 0x03)
 188:./inc/CMSIS/core_cmFunc.h **** 
 189:./inc/CMSIS/core_cmFunc.h **** /** \brief  Enable FIQ
 190:./inc/CMSIS/core_cmFunc.h **** 
 191:./inc/CMSIS/core_cmFunc.h ****     This function enables FIQ interrupts by clearing the F-bit in the CPSR.
 192:./inc/CMSIS/core_cmFunc.h ****     Can only be executed in Privileged modes.
 193:./inc/CMSIS/core_cmFunc.h ****  */
 194:./inc/CMSIS/core_cmFunc.h **** #define __enable_fault_irq                __enable_fiq
 195:./inc/CMSIS/core_cmFunc.h **** 
 196:./inc/CMSIS/core_cmFunc.h **** 
 197:./inc/CMSIS/core_cmFunc.h **** /** \brief  Disable FIQ
 198:./inc/CMSIS/core_cmFunc.h **** 
 199:./inc/CMSIS/core_cmFunc.h ****     This function disables FIQ interrupts by setting the F-bit in the CPSR.
 200:./inc/CMSIS/core_cmFunc.h ****     Can only be executed in Privileged modes.
 201:./inc/CMSIS/core_cmFunc.h ****  */
 202:./inc/CMSIS/core_cmFunc.h **** #define __disable_fault_irq               __disable_fiq
 203:./inc/CMSIS/core_cmFunc.h **** 
 204:./inc/CMSIS/core_cmFunc.h **** 
 205:./inc/CMSIS/core_cmFunc.h **** /** \brief  Get Base Priority
 206:./inc/CMSIS/core_cmFunc.h **** 
 207:./inc/CMSIS/core_cmFunc.h ****     This function returns the current value of the Base Priority register.
 208:./inc/CMSIS/core_cmFunc.h **** 
 209:./inc/CMSIS/core_cmFunc.h ****     \return               Base Priority register value
 210:./inc/CMSIS/core_cmFunc.h ****  */
 211:./inc/CMSIS/core_cmFunc.h **** static __INLINE uint32_t  __get_BASEPRI(void)
 212:./inc/CMSIS/core_cmFunc.h **** {
 213:./inc/CMSIS/core_cmFunc.h ****   register uint32_t __regBasePri         __ASM("basepri");
 214:./inc/CMSIS/core_cmFunc.h ****   return(__regBasePri);
 215:./inc/CMSIS/core_cmFunc.h **** }
 216:./inc/CMSIS/core_cmFunc.h **** 
 217:./inc/CMSIS/core_cmFunc.h **** 
 218:./inc/CMSIS/core_cmFunc.h **** /** \brief  Set Base Priority
 219:./inc/CMSIS/core_cmFunc.h **** 
ARM GAS  /tmp/ccFmD5nI.s 			page 41


 220:./inc/CMSIS/core_cmFunc.h ****     This function assigns the given value to the Base Priority register.
 221:./inc/CMSIS/core_cmFunc.h **** 
 222:./inc/CMSIS/core_cmFunc.h ****     \param [in]    basePri  Base Priority value to set
 223:./inc/CMSIS/core_cmFunc.h ****  */
 224:./inc/CMSIS/core_cmFunc.h **** static __INLINE void __set_BASEPRI(uint32_t basePri)
 225:./inc/CMSIS/core_cmFunc.h **** {
 226:./inc/CMSIS/core_cmFunc.h ****   register uint32_t __regBasePri         __ASM("basepri");
 227:./inc/CMSIS/core_cmFunc.h ****   __regBasePri = (basePri & 0xff);
 228:./inc/CMSIS/core_cmFunc.h **** }
 229:./inc/CMSIS/core_cmFunc.h ****  
 230:./inc/CMSIS/core_cmFunc.h **** 
 231:./inc/CMSIS/core_cmFunc.h **** /** \brief  Get Fault Mask
 232:./inc/CMSIS/core_cmFunc.h **** 
 233:./inc/CMSIS/core_cmFunc.h ****     This function returns the current value of the Fault Mask register.
 234:./inc/CMSIS/core_cmFunc.h **** 
 235:./inc/CMSIS/core_cmFunc.h ****     \return               Fault Mask register value
 236:./inc/CMSIS/core_cmFunc.h ****  */
 237:./inc/CMSIS/core_cmFunc.h **** static __INLINE uint32_t __get_FAULTMASK(void)
 238:./inc/CMSIS/core_cmFunc.h **** {
 239:./inc/CMSIS/core_cmFunc.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
 240:./inc/CMSIS/core_cmFunc.h ****   return(__regFaultMask);
 241:./inc/CMSIS/core_cmFunc.h **** }
 242:./inc/CMSIS/core_cmFunc.h **** 
 243:./inc/CMSIS/core_cmFunc.h **** 
 244:./inc/CMSIS/core_cmFunc.h **** /** \brief  Set Fault Mask
 245:./inc/CMSIS/core_cmFunc.h **** 
 246:./inc/CMSIS/core_cmFunc.h ****     This function assigns the given value to the Fault Mask register.
 247:./inc/CMSIS/core_cmFunc.h **** 
 248:./inc/CMSIS/core_cmFunc.h ****     \param [in]    faultMask  Fault Mask value to set
 249:./inc/CMSIS/core_cmFunc.h ****  */
 250:./inc/CMSIS/core_cmFunc.h **** static __INLINE void __set_FAULTMASK(uint32_t faultMask)
 251:./inc/CMSIS/core_cmFunc.h **** {
 252:./inc/CMSIS/core_cmFunc.h ****   register uint32_t __regFaultMask       __ASM("faultmask");
 253:./inc/CMSIS/core_cmFunc.h ****   __regFaultMask = (faultMask & (uint32_t)1);
 254:./inc/CMSIS/core_cmFunc.h **** }
 255:./inc/CMSIS/core_cmFunc.h **** 
 256:./inc/CMSIS/core_cmFunc.h **** #endif /* (__CORTEX_M >= 0x03) */
 257:./inc/CMSIS/core_cmFunc.h **** 
 258:./inc/CMSIS/core_cmFunc.h **** 
 259:./inc/CMSIS/core_cmFunc.h **** #if       (__CORTEX_M == 0x04)
 260:./inc/CMSIS/core_cmFunc.h **** 
 261:./inc/CMSIS/core_cmFunc.h **** /** \brief  Get FPSCR
 262:./inc/CMSIS/core_cmFunc.h **** 
 263:./inc/CMSIS/core_cmFunc.h ****     This function returns the current value of the Floating Point Status/Control register.
 264:./inc/CMSIS/core_cmFunc.h **** 
 265:./inc/CMSIS/core_cmFunc.h ****     \return               Floating Point Status/Control register value
 266:./inc/CMSIS/core_cmFunc.h ****  */
 267:./inc/CMSIS/core_cmFunc.h **** static __INLINE uint32_t __get_FPSCR(void)
 268:./inc/CMSIS/core_cmFunc.h **** {
 269:./inc/CMSIS/core_cmFunc.h **** #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 270:./inc/CMSIS/core_cmFunc.h ****   register uint32_t __regfpscr         __ASM("fpscr");
 271:./inc/CMSIS/core_cmFunc.h ****   return(__regfpscr);
 272:./inc/CMSIS/core_cmFunc.h **** #else
 273:./inc/CMSIS/core_cmFunc.h ****    return(0);
 274:./inc/CMSIS/core_cmFunc.h **** #endif
 275:./inc/CMSIS/core_cmFunc.h **** }
 276:./inc/CMSIS/core_cmFunc.h **** 
ARM GAS  /tmp/ccFmD5nI.s 			page 42


 277:./inc/CMSIS/core_cmFunc.h **** 
 278:./inc/CMSIS/core_cmFunc.h **** /** \brief  Set FPSCR
 279:./inc/CMSIS/core_cmFunc.h **** 
 280:./inc/CMSIS/core_cmFunc.h ****     This function assigns the given value to the Floating Point Status/Control register.
 281:./inc/CMSIS/core_cmFunc.h **** 
 282:./inc/CMSIS/core_cmFunc.h ****     \param [in]    fpscr  Floating Point Status/Control value to set
 283:./inc/CMSIS/core_cmFunc.h ****  */
 284:./inc/CMSIS/core_cmFunc.h **** static __INLINE void __set_FPSCR(uint32_t fpscr)
 285:./inc/CMSIS/core_cmFunc.h **** {
 286:./inc/CMSIS/core_cmFunc.h **** #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 287:./inc/CMSIS/core_cmFunc.h ****   register uint32_t __regfpscr         __ASM("fpscr");
 288:./inc/CMSIS/core_cmFunc.h ****   __regfpscr = (fpscr);
 289:./inc/CMSIS/core_cmFunc.h **** #endif
 290:./inc/CMSIS/core_cmFunc.h **** }
 291:./inc/CMSIS/core_cmFunc.h **** 
 292:./inc/CMSIS/core_cmFunc.h **** #endif /* (__CORTEX_M == 0x04) */
 293:./inc/CMSIS/core_cmFunc.h **** 
 294:./inc/CMSIS/core_cmFunc.h **** 
 295:./inc/CMSIS/core_cmFunc.h **** #elif defined ( __ICCARM__ ) /*------------------ ICC Compiler -------------------*/
 296:./inc/CMSIS/core_cmFunc.h **** /* IAR iccarm specific functions */
 297:./inc/CMSIS/core_cmFunc.h **** 
 298:./inc/CMSIS/core_cmFunc.h **** #include <cmsis_iar.h>
 299:./inc/CMSIS/core_cmFunc.h **** 
 300:./inc/CMSIS/core_cmFunc.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 301:./inc/CMSIS/core_cmFunc.h **** /* GNU gcc specific functions */
 302:./inc/CMSIS/core_cmFunc.h **** 
 303:./inc/CMSIS/core_cmFunc.h **** /** \brief  Enable IRQ Interrupts
 304:./inc/CMSIS/core_cmFunc.h **** 
 305:./inc/CMSIS/core_cmFunc.h ****   This function enables IRQ interrupts by clearing the I-bit in the CPSR.
 306:./inc/CMSIS/core_cmFunc.h ****   Can only be executed in Privileged modes.
 307:./inc/CMSIS/core_cmFunc.h ****  */
 308:./inc/CMSIS/core_cmFunc.h **** __attribute__( ( always_inline ) ) static __INLINE void __enable_irq(void)
 309:./inc/CMSIS/core_cmFunc.h **** {
 310:./inc/CMSIS/core_cmFunc.h ****   __ASM volatile ("cpsie i");
 311:./inc/CMSIS/core_cmFunc.h **** }
 312:./inc/CMSIS/core_cmFunc.h **** 
 313:./inc/CMSIS/core_cmFunc.h **** 
 314:./inc/CMSIS/core_cmFunc.h **** /** \brief  Disable IRQ Interrupts
 315:./inc/CMSIS/core_cmFunc.h **** 
 316:./inc/CMSIS/core_cmFunc.h ****   This function disables IRQ interrupts by setting the I-bit in the CPSR.
 317:./inc/CMSIS/core_cmFunc.h ****   Can only be executed in Privileged modes.
 318:./inc/CMSIS/core_cmFunc.h ****  */
 319:./inc/CMSIS/core_cmFunc.h **** __attribute__( ( always_inline ) ) static __INLINE void __disable_irq(void)
 320:./inc/CMSIS/core_cmFunc.h **** {
 321:./inc/CMSIS/core_cmFunc.h ****   __ASM volatile ("cpsid i");
 322:./inc/CMSIS/core_cmFunc.h **** }
 323:./inc/CMSIS/core_cmFunc.h **** 
 324:./inc/CMSIS/core_cmFunc.h **** 
 325:./inc/CMSIS/core_cmFunc.h **** /** \brief  Get Control Register
 326:./inc/CMSIS/core_cmFunc.h **** 
 327:./inc/CMSIS/core_cmFunc.h ****     This function returns the content of the Control Register.
 328:./inc/CMSIS/core_cmFunc.h **** 
 329:./inc/CMSIS/core_cmFunc.h ****     \return               Control Register value
 330:./inc/CMSIS/core_cmFunc.h ****  */
 331:./inc/CMSIS/core_cmFunc.h **** __attribute__( ( always_inline ) ) static __INLINE uint32_t __get_CONTROL(void)
 332:./inc/CMSIS/core_cmFunc.h **** {
 333:./inc/CMSIS/core_cmFunc.h ****   uint32_t result;
ARM GAS  /tmp/ccFmD5nI.s 			page 43


 334:./inc/CMSIS/core_cmFunc.h **** 
 335:./inc/CMSIS/core_cmFunc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 336:./inc/CMSIS/core_cmFunc.h ****   return(result);
 337:./inc/CMSIS/core_cmFunc.h **** }
 338:./inc/CMSIS/core_cmFunc.h **** 
 339:./inc/CMSIS/core_cmFunc.h **** 
 340:./inc/CMSIS/core_cmFunc.h **** /** \brief  Set Control Register
 341:./inc/CMSIS/core_cmFunc.h **** 
 342:./inc/CMSIS/core_cmFunc.h ****     This function writes the given value to the Control Register.
 343:./inc/CMSIS/core_cmFunc.h **** 
 344:./inc/CMSIS/core_cmFunc.h ****     \param [in]    control  Control Register value to set
 345:./inc/CMSIS/core_cmFunc.h ****  */
 346:./inc/CMSIS/core_cmFunc.h **** __attribute__( ( always_inline ) ) static __INLINE void __set_CONTROL(uint32_t control)
 347:./inc/CMSIS/core_cmFunc.h **** {
 348:./inc/CMSIS/core_cmFunc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) );
 349:./inc/CMSIS/core_cmFunc.h **** }
 350:./inc/CMSIS/core_cmFunc.h **** 
 351:./inc/CMSIS/core_cmFunc.h **** 
 352:./inc/CMSIS/core_cmFunc.h **** /** \brief  Get ISPR Register
 353:./inc/CMSIS/core_cmFunc.h **** 
 354:./inc/CMSIS/core_cmFunc.h ****     This function returns the content of the ISPR Register.
 355:./inc/CMSIS/core_cmFunc.h **** 
 356:./inc/CMSIS/core_cmFunc.h ****     \return               ISPR Register value
 357:./inc/CMSIS/core_cmFunc.h ****  */
 358:./inc/CMSIS/core_cmFunc.h **** __attribute__( ( always_inline ) ) static __INLINE uint32_t __get_IPSR(void)
 359:./inc/CMSIS/core_cmFunc.h **** {
 360:./inc/CMSIS/core_cmFunc.h ****   uint32_t result;
 361:./inc/CMSIS/core_cmFunc.h **** 
 362:./inc/CMSIS/core_cmFunc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 363:./inc/CMSIS/core_cmFunc.h ****   return(result);
 364:./inc/CMSIS/core_cmFunc.h **** }
 365:./inc/CMSIS/core_cmFunc.h **** 
 366:./inc/CMSIS/core_cmFunc.h **** 
 367:./inc/CMSIS/core_cmFunc.h **** /** \brief  Get APSR Register
 368:./inc/CMSIS/core_cmFunc.h **** 
 369:./inc/CMSIS/core_cmFunc.h ****     This function returns the content of the APSR Register.
 370:./inc/CMSIS/core_cmFunc.h **** 
 371:./inc/CMSIS/core_cmFunc.h ****     \return               APSR Register value
 372:./inc/CMSIS/core_cmFunc.h ****  */
 373:./inc/CMSIS/core_cmFunc.h **** __attribute__( ( always_inline ) ) static __INLINE uint32_t __get_APSR(void)
 374:./inc/CMSIS/core_cmFunc.h **** {
 375:./inc/CMSIS/core_cmFunc.h ****   uint32_t result;
 376:./inc/CMSIS/core_cmFunc.h **** 
 377:./inc/CMSIS/core_cmFunc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 378:./inc/CMSIS/core_cmFunc.h ****   return(result);
 379:./inc/CMSIS/core_cmFunc.h **** }
 380:./inc/CMSIS/core_cmFunc.h **** 
 381:./inc/CMSIS/core_cmFunc.h **** 
 382:./inc/CMSIS/core_cmFunc.h **** /** \brief  Get xPSR Register
 383:./inc/CMSIS/core_cmFunc.h **** 
 384:./inc/CMSIS/core_cmFunc.h ****     This function returns the content of the xPSR Register.
 385:./inc/CMSIS/core_cmFunc.h **** 
 386:./inc/CMSIS/core_cmFunc.h ****     \return               xPSR Register value
 387:./inc/CMSIS/core_cmFunc.h ****  */
 388:./inc/CMSIS/core_cmFunc.h **** __attribute__( ( always_inline ) ) static __INLINE uint32_t __get_xPSR(void)
 389:./inc/CMSIS/core_cmFunc.h **** {
 390:./inc/CMSIS/core_cmFunc.h ****   uint32_t result;
ARM GAS  /tmp/ccFmD5nI.s 			page 44


 391:./inc/CMSIS/core_cmFunc.h **** 
 392:./inc/CMSIS/core_cmFunc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 393:./inc/CMSIS/core_cmFunc.h ****   return(result);
 394:./inc/CMSIS/core_cmFunc.h **** }
 395:./inc/CMSIS/core_cmFunc.h **** 
 396:./inc/CMSIS/core_cmFunc.h **** 
 397:./inc/CMSIS/core_cmFunc.h **** /** \brief  Get Process Stack Pointer
 398:./inc/CMSIS/core_cmFunc.h **** 
 399:./inc/CMSIS/core_cmFunc.h ****     This function returns the current value of the Process Stack Pointer (PSP).
 400:./inc/CMSIS/core_cmFunc.h **** 
 401:./inc/CMSIS/core_cmFunc.h ****     \return               PSP Register value
 402:./inc/CMSIS/core_cmFunc.h ****  */
 403:./inc/CMSIS/core_cmFunc.h **** __attribute__( ( always_inline ) ) static __INLINE uint32_t __get_PSP(void)
 404:./inc/CMSIS/core_cmFunc.h **** {
 405:./inc/CMSIS/core_cmFunc.h ****   register uint32_t result;
 406:./inc/CMSIS/core_cmFunc.h **** 
 407:./inc/CMSIS/core_cmFunc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 408:./inc/CMSIS/core_cmFunc.h ****   return(result);
 409:./inc/CMSIS/core_cmFunc.h **** }
 410:./inc/CMSIS/core_cmFunc.h ****  
 411:./inc/CMSIS/core_cmFunc.h **** 
 412:./inc/CMSIS/core_cmFunc.h **** /** \brief  Set Process Stack Pointer
 413:./inc/CMSIS/core_cmFunc.h **** 
 414:./inc/CMSIS/core_cmFunc.h ****     This function assigns the given value to the Process Stack Pointer (PSP).
 415:./inc/CMSIS/core_cmFunc.h **** 
 416:./inc/CMSIS/core_cmFunc.h ****     \param [in]    topOfProcStack  Process Stack Pointer value to set
 417:./inc/CMSIS/core_cmFunc.h ****  */
 418:./inc/CMSIS/core_cmFunc.h **** __attribute__( ( always_inline ) ) static __INLINE void __set_PSP(uint32_t topOfProcStack)
 419:./inc/CMSIS/core_cmFunc.h **** {
 420:./inc/CMSIS/core_cmFunc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) );
 421:./inc/CMSIS/core_cmFunc.h **** }
 422:./inc/CMSIS/core_cmFunc.h **** 
 423:./inc/CMSIS/core_cmFunc.h **** 
 424:./inc/CMSIS/core_cmFunc.h **** /** \brief  Get Main Stack Pointer
 425:./inc/CMSIS/core_cmFunc.h **** 
 426:./inc/CMSIS/core_cmFunc.h ****     This function returns the current value of the Main Stack Pointer (MSP).
 427:./inc/CMSIS/core_cmFunc.h **** 
 428:./inc/CMSIS/core_cmFunc.h ****     \return               MSP Register value
 429:./inc/CMSIS/core_cmFunc.h ****  */
 430:./inc/CMSIS/core_cmFunc.h **** __attribute__( ( always_inline ) ) static __INLINE uint32_t __get_MSP(void)
 431:./inc/CMSIS/core_cmFunc.h **** {
 432:./inc/CMSIS/core_cmFunc.h ****   register uint32_t result;
 433:./inc/CMSIS/core_cmFunc.h **** 
 434:./inc/CMSIS/core_cmFunc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 435:./inc/CMSIS/core_cmFunc.h ****   return(result);
 436:./inc/CMSIS/core_cmFunc.h **** }
 437:./inc/CMSIS/core_cmFunc.h ****  
 438:./inc/CMSIS/core_cmFunc.h **** 
 439:./inc/CMSIS/core_cmFunc.h **** /** \brief  Set Main Stack Pointer
 440:./inc/CMSIS/core_cmFunc.h **** 
 441:./inc/CMSIS/core_cmFunc.h ****     This function assigns the given value to the Main Stack Pointer (MSP).
 442:./inc/CMSIS/core_cmFunc.h **** 
 443:./inc/CMSIS/core_cmFunc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 444:./inc/CMSIS/core_cmFunc.h ****  */
 445:./inc/CMSIS/core_cmFunc.h **** __attribute__( ( always_inline ) ) static __INLINE void __set_MSP(uint32_t topOfMainStack)
 446:./inc/CMSIS/core_cmFunc.h **** {
 447:./inc/CMSIS/core_cmFunc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) );
ARM GAS  /tmp/ccFmD5nI.s 			page 45


 448:./inc/CMSIS/core_cmFunc.h **** }
 449:./inc/CMSIS/core_cmFunc.h **** 
 450:./inc/CMSIS/core_cmFunc.h **** 
 451:./inc/CMSIS/core_cmFunc.h **** /** \brief  Get Priority Mask
 452:./inc/CMSIS/core_cmFunc.h **** 
 453:./inc/CMSIS/core_cmFunc.h ****     This function returns the current state of the priority mask bit from the Priority Mask Registe
 454:./inc/CMSIS/core_cmFunc.h **** 
 455:./inc/CMSIS/core_cmFunc.h ****     \return               Priority Mask value
 456:./inc/CMSIS/core_cmFunc.h ****  */
 457:./inc/CMSIS/core_cmFunc.h **** __attribute__( ( always_inline ) ) static __INLINE uint32_t __get_PRIMASK(void)
 458:./inc/CMSIS/core_cmFunc.h **** {
 459:./inc/CMSIS/core_cmFunc.h ****   uint32_t result;
 460:./inc/CMSIS/core_cmFunc.h **** 
 461:./inc/CMSIS/core_cmFunc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 501              		.loc 3 461 0
 502              		.syntax unified
 503              	@ 461 "./inc/CMSIS/core_cmFunc.h" 1
 504 013e EFF31085 		MRS r5, primask	@ result
 505              	@ 0 "" 2
 506              		.thumb
 507              		.syntax unified
 508              	.LBE21:
 509              	.LBE20:
 510              	.LBB22:
 511              	.LBB23:
 512              	@ ./inc/CMSIS/core_cmFunc.h:321:   __ASM volatile ("cpsid i");
 321:./inc/CMSIS/core_cmFunc.h **** }
 513              		.loc 3 321 0
 514              		.syntax unified
 515              	@ 321 "./inc/CMSIS/core_cmFunc.h" 1
 516 0142 72B6     		cpsid i
 517              	@ 0 "" 2
 518              		.thumb
 519              		.syntax unified
 520              	.LBE23:
 521              	.LBE22:
 522              	@ inc/user_libs/tm_stm32f4_delay.c:238: 	for (; i < (CustomTimers.Count - 1); i++) {
 238:inc/user_libs/tm_stm32f4_delay.c **** 		/* Shift data to the left */
 523              		.loc 1 238 0
 524 0144 197A     		ldrb	r1, [r3, #8]	@ zero_extendqisi2	@ _10, CustomTimers.Count
 525 0146 0139     		subs	r1, r1, #1	@ _12, _10,
 526              	.L42:
 527              	@ inc/user_libs/tm_stm32f4_delay.c:238: 	for (; i < (CustomTimers.Count - 1); i++) {
 238:inc/user_libs/tm_stm32f4_delay.c **** 		/* Shift data to the left */
 528              		.loc 1 238 0 is_stmt 0 discriminator 1
 529 0148 8A42     		cmp	r2, r1	@ i, _12
 530 014a 07DB     		blt	.L46	@,
 531              	@ inc/user_libs/tm_stm32f4_delay.c:244: 	CustomTimers.Count--;
 244:inc/user_libs/tm_stm32f4_delay.c **** 	
 532              		.loc 1 244 0 is_stmt 1
 533 014c 1972     		strb	r1, [r3, #8]	@ _12, CustomTimers.Count
 534              	@ inc/user_libs/tm_stm32f4_delay.c:247: 	if (!irq) {
 247:inc/user_libs/tm_stm32f4_delay.c **** 		__enable_irq();
 535              		.loc 1 247 0
 536 014e 05B9     		cbnz	r5, .L47	@ result,
 537              	.LBB24:
 538              	.LBB25:
ARM GAS  /tmp/ccFmD5nI.s 			page 46


 539              	@ ./inc/CMSIS/core_cmFunc.h:310:   __ASM volatile ("cpsie i");
 310:./inc/CMSIS/core_cmFunc.h **** }
 540              		.loc 3 310 0
 541              		.syntax unified
 542              	@ 310 "./inc/CMSIS/core_cmFunc.h" 1
 543 0150 62B6     		cpsie i
 544              	@ 0 "" 2
 545              		.thumb
 546              		.syntax unified
 547              	.L47:
 548              	.LBE25:
 549              	.LBE24:
 550              	@ inc/user_libs/tm_stm32f4_delay.c:253: }
 551              		.loc 1 253 0
 552 0152 F0BC     		pop	{r4, r5, r6, r7}	@
 553              	.LCFI5:
 554              		.cfi_remember_state
 555              		.cfi_restore 7
 556              		.cfi_restore 6
 557              		.cfi_restore 5
 558              		.cfi_restore 4
 559              		.cfi_def_cfa_offset 0
 560              	@ inc/user_libs/tm_stm32f4_delay.c:252: 	LIB_FREE_FUNC(tmp);
 252:inc/user_libs/tm_stm32f4_delay.c **** }
 561              		.loc 1 252 0
 562 0154 FFF7FEBF 		b	free	@
 563              	.LVL23:
 564              	.L48:
 565              	.LCFI6:
 566              		.cfi_restore_state
 567 0158 3146     		mov	r1, r6	@ ivtmp.50, ivtmp.50
 568 015a E1E7     		b	.L41	@
 569              	.LVL24:
 570              	.L46:
 571              	@ inc/user_libs/tm_stm32f4_delay.c:240: 		CustomTimers.Timers[i] = CustomTimers.Timers[i + 1];
 240:inc/user_libs/tm_stm32f4_delay.c **** 	}
 572              		.loc 1 240 0 discriminator 2
 573 015c 541C     		adds	r4, r2, #1	@ tmp179, i,
 574 015e 03EB8406 		add	r6, r3, r4, lsl #2	@ tmp180, tmp189, tmp179,
 575 0162 03EB8202 		add	r2, r3, r2, lsl #2	@ tmp183, tmp189, i,
 576              	.LVL25:
 577 0166 F668     		ldr	r6, [r6, #12]	@ _8, CustomTimers.Timers
 578 0168 D660     		str	r6, [r2, #12]	@ _8, CustomTimers.Timers
 579              	@ inc/user_libs/tm_stm32f4_delay.c:238: 	for (; i < (CustomTimers.Count - 1); i++) {
 238:inc/user_libs/tm_stm32f4_delay.c **** 		/* Shift data to the left */
 580              		.loc 1 238 0 discriminator 2
 581 016a E2B2     		uxtb	r2, r4	@ i, tmp179
 582              	.LVL26:
 583 016c ECE7     		b	.L42	@
 584              	.L50:
 585 016e 00BF     		.align	2
 586              	.L49:
 587 0170 00000000 		.word	.LANCHOR0
 588              		.cfi_endproc
 589              	.LFE117:
 590              		.size	TM_DELAY_TimerDelete, .-TM_DELAY_TimerDelete
 591              		.align	1
ARM GAS  /tmp/ccFmD5nI.s 			page 47


 592              		.global	TM_DELAY_TimerStop
 593              		.syntax unified
 594              		.thumb
 595              		.thumb_func
 596              		.fpu softvfp
 597              		.type	TM_DELAY_TimerStop, %function
 598              	TM_DELAY_TimerStop:
 599              	.LFB118:
 254:inc/user_libs/tm_stm32f4_delay.c **** 
 255:inc/user_libs/tm_stm32f4_delay.c **** TM_DELAY_Timer_t* TM_DELAY_TimerStop(TM_DELAY_Timer_t* Timer) {
 600              		.loc 1 255 0
 601              		.cfi_startproc
 602              		@ args = 0, pretend = 0, frame = 0
 603              		@ frame_needed = 0, uses_anonymous_args = 0
 604              		@ link register save eliminated.
 605              	.LVL27:
 606              	@ inc/user_libs/tm_stm32f4_delay.c:257: 	Timer->Enabled = 0;
 256:inc/user_libs/tm_stm32f4_delay.c **** 	/* Disable timer */
 257:inc/user_libs/tm_stm32f4_delay.c **** 	Timer->Enabled = 0;
 607              		.loc 1 257 0
 608 0174 0022     		movs	r2, #0	@ tmp112,
 609 0176 0273     		strb	r2, [r0, #12]	@ tmp112, Timer_2(D)->Enabled
 610              	@ inc/user_libs/tm_stm32f4_delay.c:261: }
 258:inc/user_libs/tm_stm32f4_delay.c **** 	
 259:inc/user_libs/tm_stm32f4_delay.c **** 	/* Return pointer */
 260:inc/user_libs/tm_stm32f4_delay.c **** 	return Timer;
 261:inc/user_libs/tm_stm32f4_delay.c **** }
 611              		.loc 1 261 0
 612 0178 7047     		bx	lr	@
 613              		.cfi_endproc
 614              	.LFE118:
 615              		.size	TM_DELAY_TimerStop, .-TM_DELAY_TimerStop
 616              		.align	1
 617              		.global	TM_DELAY_TimerStart
 618              		.syntax unified
 619              		.thumb
 620              		.thumb_func
 621              		.fpu softvfp
 622              		.type	TM_DELAY_TimerStart, %function
 623              	TM_DELAY_TimerStart:
 624              	.LFB119:
 262:inc/user_libs/tm_stm32f4_delay.c **** 
 263:inc/user_libs/tm_stm32f4_delay.c **** TM_DELAY_Timer_t* TM_DELAY_TimerStart(TM_DELAY_Timer_t* Timer) {
 625              		.loc 1 263 0
 626              		.cfi_startproc
 627              		@ args = 0, pretend = 0, frame = 0
 628              		@ frame_needed = 0, uses_anonymous_args = 0
 629              		@ link register save eliminated.
 630              	.LVL28:
 631              	@ inc/user_libs/tm_stm32f4_delay.c:265: 	Timer->Enabled = 1;
 264:inc/user_libs/tm_stm32f4_delay.c **** 	/* Enable timer */
 265:inc/user_libs/tm_stm32f4_delay.c **** 	Timer->Enabled = 1;
 632              		.loc 1 265 0
 633 017a 0123     		movs	r3, #1	@ tmp112,
 634 017c 0373     		strb	r3, [r0, #12]	@ tmp112, Timer_2(D)->Enabled
 635              	@ inc/user_libs/tm_stm32f4_delay.c:269: }
 266:inc/user_libs/tm_stm32f4_delay.c **** 	
ARM GAS  /tmp/ccFmD5nI.s 			page 48


 267:inc/user_libs/tm_stm32f4_delay.c **** 	/* Return pointer */
 268:inc/user_libs/tm_stm32f4_delay.c **** 	return Timer;
 269:inc/user_libs/tm_stm32f4_delay.c **** }
 636              		.loc 1 269 0
 637 017e 7047     		bx	lr	@
 638              		.cfi_endproc
 639              	.LFE119:
 640              		.size	TM_DELAY_TimerStart, .-TM_DELAY_TimerStart
 641              		.align	1
 642              		.global	TM_DELAY_TimerReset
 643              		.syntax unified
 644              		.thumb
 645              		.thumb_func
 646              		.fpu softvfp
 647              		.type	TM_DELAY_TimerReset, %function
 648              	TM_DELAY_TimerReset:
 649              	.LFB120:
 270:inc/user_libs/tm_stm32f4_delay.c **** 
 271:inc/user_libs/tm_stm32f4_delay.c **** TM_DELAY_Timer_t* TM_DELAY_TimerReset(TM_DELAY_Timer_t* Timer) {
 650              		.loc 1 271 0
 651              		.cfi_startproc
 652              		@ args = 0, pretend = 0, frame = 0
 653              		@ frame_needed = 0, uses_anonymous_args = 0
 654              		@ link register save eliminated.
 655              	.LVL29:
 656              	@ inc/user_libs/tm_stm32f4_delay.c:273: 	Timer->CNT = Timer->ARR;
 272:inc/user_libs/tm_stm32f4_delay.c **** 	/* Reset timer */
 273:inc/user_libs/tm_stm32f4_delay.c **** 	Timer->CNT = Timer->ARR;
 657              		.loc 1 273 0
 658 0180 0268     		ldr	r2, [r0]	@ Timer_3(D)->ARR, Timer_3(D)->ARR
 659 0182 8260     		str	r2, [r0, #8]	@ Timer_3(D)->ARR, Timer_3(D)->CNT
 660              	@ inc/user_libs/tm_stm32f4_delay.c:277: }
 274:inc/user_libs/tm_stm32f4_delay.c **** 	
 275:inc/user_libs/tm_stm32f4_delay.c **** 	/* Return pointer */
 276:inc/user_libs/tm_stm32f4_delay.c **** 	return Timer;
 277:inc/user_libs/tm_stm32f4_delay.c **** }
 661              		.loc 1 277 0
 662 0184 7047     		bx	lr	@
 663              		.cfi_endproc
 664              	.LFE120:
 665              		.size	TM_DELAY_TimerReset, .-TM_DELAY_TimerReset
 666              		.align	1
 667              		.global	TM_DELAY_TimerAutoReload
 668              		.syntax unified
 669              		.thumb
 670              		.thumb_func
 671              		.fpu softvfp
 672              		.type	TM_DELAY_TimerAutoReload, %function
 673              	TM_DELAY_TimerAutoReload:
 674              	.LFB121:
 278:inc/user_libs/tm_stm32f4_delay.c **** 
 279:inc/user_libs/tm_stm32f4_delay.c **** TM_DELAY_Timer_t* TM_DELAY_TimerAutoReload(TM_DELAY_Timer_t* Timer, uint8_t AutoReload) {
 675              		.loc 1 279 0
 676              		.cfi_startproc
 677              		@ args = 0, pretend = 0, frame = 0
 678              		@ frame_needed = 0, uses_anonymous_args = 0
 679              		@ link register save eliminated.
ARM GAS  /tmp/ccFmD5nI.s 			page 49


 680              	.LVL30:
 681              	@ inc/user_libs/tm_stm32f4_delay.c:281: 	Timer->AutoReload = AutoReload;
 280:inc/user_libs/tm_stm32f4_delay.c **** 	/* Reset timer */
 281:inc/user_libs/tm_stm32f4_delay.c **** 	Timer->AutoReload = AutoReload;
 682              		.loc 1 281 0
 683 0186 4160     		str	r1, [r0, #4]	@ AutoReload, Timer_4(D)->AutoReload
 684              	@ inc/user_libs/tm_stm32f4_delay.c:285: }
 282:inc/user_libs/tm_stm32f4_delay.c **** 	
 283:inc/user_libs/tm_stm32f4_delay.c **** 	/* Return pointer */
 284:inc/user_libs/tm_stm32f4_delay.c **** 	return Timer;
 285:inc/user_libs/tm_stm32f4_delay.c **** }
 685              		.loc 1 285 0
 686 0188 7047     		bx	lr	@
 687              		.cfi_endproc
 688              	.LFE121:
 689              		.size	TM_DELAY_TimerAutoReload, .-TM_DELAY_TimerAutoReload
 690              		.align	1
 691              		.global	TM_DELAY_TimerAutoReloadValue
 692              		.syntax unified
 693              		.thumb
 694              		.thumb_func
 695              		.fpu softvfp
 696              		.type	TM_DELAY_TimerAutoReloadValue, %function
 697              	TM_DELAY_TimerAutoReloadValue:
 698              	.LFB122:
 286:inc/user_libs/tm_stm32f4_delay.c **** 
 287:inc/user_libs/tm_stm32f4_delay.c **** TM_DELAY_Timer_t* TM_DELAY_TimerAutoReloadValue(TM_DELAY_Timer_t* Timer, uint32_t AutoReloadValue) 
 699              		.loc 1 287 0
 700              		.cfi_startproc
 701              		@ args = 0, pretend = 0, frame = 0
 702              		@ frame_needed = 0, uses_anonymous_args = 0
 703              		@ link register save eliminated.
 704              	.LVL31:
 705              	@ inc/user_libs/tm_stm32f4_delay.c:289: 	Timer->ARR = AutoReloadValue;
 288:inc/user_libs/tm_stm32f4_delay.c **** 	/* Reset timer */
 289:inc/user_libs/tm_stm32f4_delay.c **** 	Timer->ARR = AutoReloadValue;
 706              		.loc 1 289 0
 707 018a 0160     		str	r1, [r0]	@ AutoReloadValue, Timer_2(D)->ARR
 708              	@ inc/user_libs/tm_stm32f4_delay.c:293: }
 290:inc/user_libs/tm_stm32f4_delay.c **** 	
 291:inc/user_libs/tm_stm32f4_delay.c **** 	/* Return pointer */
 292:inc/user_libs/tm_stm32f4_delay.c **** 	return Timer;
 293:inc/user_libs/tm_stm32f4_delay.c **** }
 709              		.loc 1 293 0
 710 018c 7047     		bx	lr	@
 711              		.cfi_endproc
 712              	.LFE122:
 713              		.size	TM_DELAY_TimerAutoReloadValue, .-TM_DELAY_TimerAutoReloadValue
 714              		.global	TM_DELAY_Initialized
 715              		.comm	mult,4,4
 716              		.global	TM_Time2
 717              		.global	TM_Time
 718              		.global	TM_TimingDelay
 719              		.bss
 720              		.align	2
 721              		.set	.LANCHOR0,. + 0
 722              		.type	TM_Time, %object
ARM GAS  /tmp/ccFmD5nI.s 			page 50


 723              		.size	TM_Time, 4
 724              	TM_Time:
 725 0000 00000000 		.space	4
 726              		.type	TM_Time2, %object
 727              		.size	TM_Time2, 4
 728              	TM_Time2:
 729 0004 00000000 		.space	4
 730              		.type	CustomTimers, %object
 731              		.size	CustomTimers, 24
 732              	CustomTimers:
 733 0008 00000000 		.space	24
 733      00000000 
 733      00000000 
 733      00000000 
 733      00000000 
 734              		.type	TM_DELAY_Initialized, %object
 735              		.size	TM_DELAY_Initialized, 1
 736              	TM_DELAY_Initialized:
 737 0020 00       		.space	1
 738 0021 000000   		.space	3
 739              		.type	TM_TimingDelay, %object
 740              		.size	TM_TimingDelay, 4
 741              	TM_TimingDelay:
 742 0024 00000000 		.space	4
 743              		.weak	TM_DELAY_1msHandler
 744              		.text
 745              	.Letext0:
 746              		.file 4 "./inc/stm32f4xx.h"
 747              		.file 5 "/home/sticky/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/machine/_default
 748              		.file 6 "/home/sticky/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_stdint.h"
 749              		.file 7 "./inc/system_stm32f4xx.h"
 750              		.file 8 "/home/sticky/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/lock.h"
 751              		.file 9 "/home/sticky/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_types.h"
 752              		.file 10 "/home/sticky/opt/gcc-arm-none-eabi-7-2017-q4-major/lib/gcc/arm-none-eabi/7.2.1/include/s
 753              		.file 11 "/home/sticky/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/reent.h"
 754              		.file 12 "/home/sticky/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/stdlib.h"
 755              		.file 13 "inc/user_libs/tm_stm32f4_delay.h"
 756 018e 00BF     		.section	.debug_info,"",%progbits
 757              	.Ldebug_info0:
 758 0000 35140000 		.4byte	0x1435
 759 0004 0200     		.2byte	0x2
 760 0006 00000000 		.4byte	.Ldebug_abbrev0
 761 000a 04       		.byte	0x4
 762 000b 01       		.uleb128 0x1
 763 000c EB0C0000 		.4byte	.LASF294
 764 0010 0C       		.byte	0xc
 765 0011 C7050000 		.4byte	.LASF295
 766 0015 FF000000 		.4byte	.LASF296
 767 0019 00000000 		.4byte	.Ltext0
 768 001d 8E010000 		.4byte	.Letext0
 769 0021 00000000 		.4byte	.Ldebug_line0
 770 0025 02       		.uleb128 0x2
 771 0026 04       		.byte	0x4
 772 0027 07       		.byte	0x7
 773 0028 CB070000 		.4byte	.LASF90
 774 002c 03       		.uleb128 0x3
 775 002d 42020000 		.4byte	.LASF284
ARM GAS  /tmp/ccFmD5nI.s 			page 51


 776 0031 05       		.byte	0x5
 777 0032 01       		.byte	0x1
 778 0033 5A020000 		.4byte	0x25a
 779 0037 04       		.byte	0x4
 780 0038 BF       		.byte	0xbf
 781 0039 5A020000 		.4byte	0x25a
 782 003d 04       		.uleb128 0x4
 783 003e 0F050000 		.4byte	.LASF0
 784 0042 72       		.sleb128 -14
 785 0043 04       		.uleb128 0x4
 786 0044 43050000 		.4byte	.LASF1
 787 0048 74       		.sleb128 -12
 788 0049 04       		.uleb128 0x4
 789 004a 5C060000 		.4byte	.LASF2
 790 004e 75       		.sleb128 -11
 791 004f 04       		.uleb128 0x4
 792 0050 B7030000 		.4byte	.LASF3
 793 0054 76       		.sleb128 -10
 794 0055 04       		.uleb128 0x4
 795 0056 15070000 		.4byte	.LASF4
 796 005a 7B       		.sleb128 -5
 797 005b 04       		.uleb128 0x4
 798 005c B40A0000 		.4byte	.LASF5
 799 0060 7C       		.sleb128 -4
 800 0061 04       		.uleb128 0x4
 801 0062 BB0C0000 		.4byte	.LASF6
 802 0066 7E       		.sleb128 -2
 803 0067 04       		.uleb128 0x4
 804 0068 96020000 		.4byte	.LASF7
 805 006c 7F       		.sleb128 -1
 806 006d 05       		.uleb128 0x5
 807 006e 23050000 		.4byte	.LASF8
 808 0072 00       		.byte	0
 809 0073 05       		.uleb128 0x5
 810 0074 370A0000 		.4byte	.LASF9
 811 0078 01       		.byte	0x1
 812 0079 05       		.uleb128 0x5
 813 007a 84050000 		.4byte	.LASF10
 814 007e 02       		.byte	0x2
 815 007f 05       		.uleb128 0x5
 816 0080 09000000 		.4byte	.LASF11
 817 0084 03       		.byte	0x3
 818 0085 05       		.uleb128 0x5
 819 0086 EA000000 		.4byte	.LASF12
 820 008a 04       		.byte	0x4
 821 008b 05       		.uleb128 0x5
 822 008c 240B0000 		.4byte	.LASF13
 823 0090 05       		.byte	0x5
 824 0091 05       		.uleb128 0x5
 825 0092 680A0000 		.4byte	.LASF14
 826 0096 06       		.byte	0x6
 827 0097 05       		.uleb128 0x5
 828 0098 AF040000 		.4byte	.LASF15
 829 009c 07       		.byte	0x7
 830 009d 05       		.uleb128 0x5
 831 009e 17000000 		.4byte	.LASF16
 832 00a2 08       		.byte	0x8
ARM GAS  /tmp/ccFmD5nI.s 			page 52


 833 00a3 05       		.uleb128 0x5
 834 00a4 B00C0000 		.4byte	.LASF17
 835 00a8 09       		.byte	0x9
 836 00a9 05       		.uleb128 0x5
 837 00aa 97070000 		.4byte	.LASF18
 838 00ae 0A       		.byte	0xa
 839 00af 05       		.uleb128 0x5
 840 00b0 CF080000 		.4byte	.LASF19
 841 00b4 0B       		.byte	0xb
 842 00b5 05       		.uleb128 0x5
 843 00b6 55080000 		.4byte	.LASF20
 844 00ba 0C       		.byte	0xc
 845 00bb 05       		.uleb128 0x5
 846 00bc EE020000 		.4byte	.LASF21
 847 00c0 0D       		.byte	0xd
 848 00c1 05       		.uleb128 0x5
 849 00c2 6B0B0000 		.4byte	.LASF22
 850 00c6 0E       		.byte	0xe
 851 00c7 05       		.uleb128 0x5
 852 00c8 780A0000 		.4byte	.LASF23
 853 00cc 0F       		.byte	0xf
 854 00cd 05       		.uleb128 0x5
 855 00ce C7040000 		.4byte	.LASF24
 856 00d2 10       		.byte	0x10
 857 00d3 05       		.uleb128 0x5
 858 00d4 2B000000 		.4byte	.LASF25
 859 00d8 11       		.byte	0x11
 860 00d9 05       		.uleb128 0x5
 861 00da EB090000 		.4byte	.LASF26
 862 00de 12       		.byte	0x12
 863 00df 05       		.uleb128 0x5
 864 00e0 BA040000 		.4byte	.LASF27
 865 00e4 13       		.byte	0x13
 866 00e5 05       		.uleb128 0x5
 867 00e6 E6030000 		.4byte	.LASF28
 868 00ea 14       		.byte	0x14
 869 00eb 05       		.uleb128 0x5
 870 00ec 2F0C0000 		.4byte	.LASF29
 871 00f0 15       		.byte	0x15
 872 00f1 05       		.uleb128 0x5
 873 00f2 94050000 		.4byte	.LASF30
 874 00f6 16       		.byte	0x16
 875 00f7 05       		.uleb128 0x5
 876 00f8 4D0C0000 		.4byte	.LASF31
 877 00fc 17       		.byte	0x17
 878 00fd 05       		.uleb128 0x5
 879 00fe 84060000 		.4byte	.LASF32
 880 0102 18       		.byte	0x18
 881 0103 05       		.uleb128 0x5
 882 0104 940B0000 		.4byte	.LASF33
 883 0108 19       		.byte	0x19
 884 0109 05       		.uleb128 0x5
 885 010a 47020000 		.4byte	.LASF34
 886 010e 1A       		.byte	0x1a
 887 010f 05       		.uleb128 0x5
 888 0110 94040000 		.4byte	.LASF35
 889 0114 1B       		.byte	0x1b
ARM GAS  /tmp/ccFmD5nI.s 			page 53


 890 0115 05       		.uleb128 0x5
 891 0116 33010000 		.4byte	.LASF36
 892 011a 1C       		.byte	0x1c
 893 011b 05       		.uleb128 0x5
 894 011c 7B090000 		.4byte	.LASF37
 895 0120 1D       		.byte	0x1d
 896 0121 05       		.uleb128 0x5
 897 0122 19040000 		.4byte	.LASF38
 898 0126 1E       		.byte	0x1e
 899 0127 05       		.uleb128 0x5
 900 0128 4E040000 		.4byte	.LASF39
 901 012c 1F       		.byte	0x1f
 902 012d 05       		.uleb128 0x5
 903 012e 5C030000 		.4byte	.LASF40
 904 0132 20       		.byte	0x20
 905 0133 05       		.uleb128 0x5
 906 0134 BE070000 		.4byte	.LASF41
 907 0138 21       		.byte	0x21
 908 0139 05       		.uleb128 0x5
 909 013a 27060000 		.4byte	.LASF42
 910 013e 22       		.byte	0x22
 911 013f 05       		.uleb128 0x5
 912 0140 FA060000 		.4byte	.LASF43
 913 0144 23       		.byte	0x23
 914 0145 05       		.uleb128 0x5
 915 0146 6C010000 		.4byte	.LASF44
 916 014a 24       		.byte	0x24
 917 014b 05       		.uleb128 0x5
 918 014c 8D090000 		.4byte	.LASF45
 919 0150 25       		.byte	0x25
 920 0151 05       		.uleb128 0x5
 921 0152 23040000 		.4byte	.LASF46
 922 0156 26       		.byte	0x26
 923 0157 05       		.uleb128 0x5
 924 0158 A3020000 		.4byte	.LASF47
 925 015c 27       		.byte	0x27
 926 015d 05       		.uleb128 0x5
 927 015e 20090000 		.4byte	.LASF48
 928 0162 28       		.byte	0x28
 929 0163 05       		.uleb128 0x5
 930 0164 F0080000 		.4byte	.LASF49
 931 0168 29       		.byte	0x29
 932 0169 05       		.uleb128 0x5
 933 016a 86070000 		.4byte	.LASF50
 934 016e 2A       		.byte	0x2a
 935 016f 05       		.uleb128 0x5
 936 0170 76010000 		.4byte	.LASF51
 937 0174 2B       		.byte	0x2b
 938 0175 05       		.uleb128 0x5
 939 0176 3D000000 		.4byte	.LASF52
 940 017a 2C       		.byte	0x2c
 941 017b 05       		.uleb128 0x5
 942 017c D9040000 		.4byte	.LASF53
 943 0180 2D       		.byte	0x2d
 944 0181 05       		.uleb128 0x5
 945 0182 8E0C0000 		.4byte	.LASF54
 946 0186 2E       		.byte	0x2e
ARM GAS  /tmp/ccFmD5nI.s 			page 54


 947 0187 05       		.uleb128 0x5
 948 0188 720D0000 		.4byte	.LASF55
 949 018c 2F       		.byte	0x2f
 950 018d 05       		.uleb128 0x5
 951 018e 5E0A0000 		.4byte	.LASF56
 952 0192 30       		.byte	0x30
 953 0193 05       		.uleb128 0x5
 954 0194 9B0C0000 		.4byte	.LASF57
 955 0198 31       		.byte	0x31
 956 0199 05       		.uleb128 0x5
 957 019a AD030000 		.4byte	.LASF58
 958 019e 32       		.byte	0x32
 959 019f 05       		.uleb128 0x5
 960 01a0 E0000000 		.4byte	.LASF59
 961 01a4 33       		.byte	0x33
 962 01a5 05       		.uleb128 0x5
 963 01a6 69070000 		.4byte	.LASF60
 964 01aa 34       		.byte	0x34
 965 01ab 05       		.uleb128 0x5
 966 01ac 79060000 		.4byte	.LASF61
 967 01b0 35       		.byte	0x35
 968 01b1 05       		.uleb128 0x5
 969 01b2 A7070000 		.4byte	.LASF62
 970 01b6 36       		.byte	0x36
 971 01b7 05       		.uleb128 0x5
 972 01b8 BB060000 		.4byte	.LASF63
 973 01bc 37       		.byte	0x37
 974 01bd 05       		.uleb128 0x5
 975 01be E8050000 		.4byte	.LASF64
 976 01c2 38       		.byte	0x38
 977 01c3 05       		.uleb128 0x5
 978 01c4 BF000000 		.4byte	.LASF65
 979 01c8 39       		.byte	0x39
 980 01c9 05       		.uleb128 0x5
 981 01ca C80D0000 		.4byte	.LASF66
 982 01ce 3A       		.byte	0x3a
 983 01cf 05       		.uleb128 0x5
 984 01d0 6F080000 		.4byte	.LASF67
 985 01d4 3B       		.byte	0x3b
 986 01d5 05       		.uleb128 0x5
 987 01d6 18030000 		.4byte	.LASF68
 988 01da 3C       		.byte	0x3c
 989 01db 05       		.uleb128 0x5
 990 01dc F90A0000 		.4byte	.LASF69
 991 01e0 3D       		.byte	0x3d
 992 01e1 05       		.uleb128 0x5
 993 01e2 D3060000 		.4byte	.LASF70
 994 01e6 3E       		.byte	0x3e
 995 01e7 05       		.uleb128 0x5
 996 01e8 81080000 		.4byte	.LASF71
 997 01ec 3F       		.byte	0x3f
 998 01ed 05       		.uleb128 0x5
 999 01ee 42010000 		.4byte	.LASF72
 1000 01f2 40       		.byte	0x40
 1001 01f3 05       		.uleb128 0x5
 1002 01f4 D0090000 		.4byte	.LASF73
 1003 01f8 41       		.byte	0x41
ARM GAS  /tmp/ccFmD5nI.s 			page 55


 1004 01f9 05       		.uleb128 0x5
 1005 01fa 8B030000 		.4byte	.LASF74
 1006 01fe 42       		.byte	0x42
 1007 01ff 05       		.uleb128 0x5
 1008 0200 03050000 		.4byte	.LASF75
 1009 0204 43       		.byte	0x43
 1010 0205 05       		.uleb128 0x5
 1011 0206 30020000 		.4byte	.LASF76
 1012 020a 44       		.byte	0x44
 1013 020b 05       		.uleb128 0x5
 1014 020c 8A0A0000 		.4byte	.LASF77
 1015 0210 45       		.byte	0x45
 1016 0211 05       		.uleb128 0x5
 1017 0212 F1040000 		.4byte	.LASF78
 1018 0216 46       		.byte	0x46
 1019 0217 05       		.uleb128 0x5
 1020 0218 50010000 		.4byte	.LASF79
 1021 021c 47       		.byte	0x47
 1022 021d 05       		.uleb128 0x5
 1023 021e C60A0000 		.4byte	.LASF80
 1024 0222 48       		.byte	0x48
 1025 0223 05       		.uleb128 0x5
 1026 0224 09090000 		.4byte	.LASF81
 1027 0228 49       		.byte	0x49
 1028 0229 05       		.uleb128 0x5
 1029 022a E50B0000 		.4byte	.LASF82
 1030 022e 4A       		.byte	0x4a
 1031 022f 05       		.uleb128 0x5
 1032 0230 D80C0000 		.4byte	.LASF83
 1033 0234 4B       		.byte	0x4b
 1034 0235 05       		.uleb128 0x5
 1035 0236 32050000 		.4byte	.LASF84
 1036 023a 4C       		.byte	0x4c
 1037 023b 05       		.uleb128 0x5
 1038 023c E1060000 		.4byte	.LASF85
 1039 0240 4D       		.byte	0x4d
 1040 0241 05       		.uleb128 0x5
 1041 0242 F5000000 		.4byte	.LASF86
 1042 0246 4E       		.byte	0x4e
 1043 0247 05       		.uleb128 0x5
 1044 0248 16090000 		.4byte	.LASF87
 1045 024c 4F       		.byte	0x4f
 1046 024d 05       		.uleb128 0x5
 1047 024e A1040000 		.4byte	.LASF88
 1048 0252 50       		.byte	0x50
 1049 0253 05       		.uleb128 0x5
 1050 0254 46070000 		.4byte	.LASF89
 1051 0258 51       		.byte	0x51
 1052 0259 00       		.byte	0
 1053 025a 02       		.uleb128 0x2
 1054 025b 01       		.byte	0x1
 1055 025c 06       		.byte	0x6
 1056 025d C1020000 		.4byte	.LASF91
 1057 0261 06       		.uleb128 0x6
 1058 0262 A2050000 		.4byte	.LASF92
 1059 0266 04       		.byte	0x4
 1060 0267 D802     		.2byte	0x2d8
ARM GAS  /tmp/ccFmD5nI.s 			page 56


 1061 0269 2C000000 		.4byte	0x2c
 1062 026d 07       		.uleb128 0x7
 1063 026e 62010000 		.4byte	.LASF93
 1064 0272 05       		.byte	0x5
 1065 0273 2B       		.byte	0x2b
 1066 0274 78020000 		.4byte	0x278
 1067 0278 02       		.uleb128 0x2
 1068 0279 01       		.byte	0x1
 1069 027a 08       		.byte	0x8
 1070 027b 0A030000 		.4byte	.LASF94
 1071 027f 02       		.uleb128 0x2
 1072 0280 02       		.byte	0x2
 1073 0281 05       		.byte	0x5
 1074 0282 1A0B0000 		.4byte	.LASF95
 1075 0286 02       		.uleb128 0x2
 1076 0287 02       		.byte	0x2
 1077 0288 07       		.byte	0x7
 1078 0289 6B0C0000 		.4byte	.LASF96
 1079 028d 07       		.uleb128 0x7
 1080 028e 840D0000 		.4byte	.LASF97
 1081 0292 05       		.byte	0x5
 1082 0293 4D       		.byte	0x4d
 1083 0294 98020000 		.4byte	0x298
 1084 0298 02       		.uleb128 0x2
 1085 0299 04       		.byte	0x4
 1086 029a 05       		.byte	0x5
 1087 029b D7010000 		.4byte	.LASF98
 1088 029f 07       		.uleb128 0x7
 1089 02a0 97060000 		.4byte	.LASF99
 1090 02a4 05       		.byte	0x5
 1091 02a5 4F       		.byte	0x4f
 1092 02a6 AA020000 		.4byte	0x2aa
 1093 02aa 02       		.uleb128 0x2
 1094 02ab 04       		.byte	0x4
 1095 02ac 07       		.byte	0x7
 1096 02ad 52090000 		.4byte	.LASF100
 1097 02b1 02       		.uleb128 0x2
 1098 02b2 08       		.byte	0x8
 1099 02b3 05       		.byte	0x5
 1100 02b4 C5060000 		.4byte	.LASF101
 1101 02b8 02       		.uleb128 0x2
 1102 02b9 08       		.byte	0x8
 1103 02ba 07       		.byte	0x7
 1104 02bb 2F090000 		.4byte	.LASF102
 1105 02bf 08       		.uleb128 0x8
 1106 02c0 04       		.byte	0x4
 1107 02c1 05       		.byte	0x5
 1108 02c2 696E7400 		.ascii	"int\000"
 1109 02c6 07       		.uleb128 0x7
 1110 02c7 CD020000 		.4byte	.LASF103
 1111 02cb 06       		.byte	0x6
 1112 02cc 18       		.byte	0x18
 1113 02cd 6D020000 		.4byte	0x26d
 1114 02d1 09       		.uleb128 0x9
 1115 02d2 C6020000 		.4byte	0x2c6
 1116 02d6 07       		.uleb128 0x7
 1117 02d7 75000000 		.4byte	.LASF104
ARM GAS  /tmp/ccFmD5nI.s 			page 57


 1118 02db 06       		.byte	0x6
 1119 02dc 2C       		.byte	0x2c
 1120 02dd 8D020000 		.4byte	0x28d
 1121 02e1 09       		.uleb128 0x9
 1122 02e2 D6020000 		.4byte	0x2d6
 1123 02e6 07       		.uleb128 0x7
 1124 02e7 1E0C0000 		.4byte	.LASF105
 1125 02eb 06       		.byte	0x6
 1126 02ec 30       		.byte	0x30
 1127 02ed 9F020000 		.4byte	0x29f
 1128 02f1 09       		.uleb128 0x9
 1129 02f2 E6020000 		.4byte	0x2e6
 1130 02f6 0A       		.uleb128 0xa
 1131 02f7 F1020000 		.4byte	0x2f1
 1132 02fb 0B       		.uleb128 0xb
 1133 02fc 040E     		.2byte	0xe04
 1134 02fe 02       		.byte	0x2
 1135 02ff 2F01     		.2byte	0x12f
 1136 0301 D3030000 		.4byte	0x3d3
 1137 0305 0C       		.uleb128 0xc
 1138 0306 8E0D0000 		.4byte	.LASF106
 1139 030a 02       		.byte	0x2
 1140 030b 3101     		.2byte	0x131
 1141 030d E3030000 		.4byte	0x3e3
 1142 0311 02       		.byte	0x2
 1143 0312 23       		.byte	0x23
 1144 0313 00       		.uleb128 0
 1145 0314 0C       		.uleb128 0xc
 1146 0315 00030000 		.4byte	.LASF107
 1147 0319 02       		.byte	0x2
 1148 031a 3201     		.2byte	0x132
 1149 031c E8030000 		.4byte	0x3e8
 1150 0320 02       		.byte	0x2
 1151 0321 23       		.byte	0x23
 1152 0322 20       		.uleb128 0x20
 1153 0323 0C       		.uleb128 0xc
 1154 0324 030A0000 		.4byte	.LASF108
 1155 0328 02       		.byte	0x2
 1156 0329 3301     		.2byte	0x133
 1157 032b E3030000 		.4byte	0x3e3
 1158 032f 03       		.byte	0x3
 1159 0330 23       		.byte	0x23
 1160 0331 8001     		.uleb128 0x80
 1161 0333 0C       		.uleb128 0xc
 1162 0334 00000000 		.4byte	.LASF109
 1163 0338 02       		.byte	0x2
 1164 0339 3401     		.2byte	0x134
 1165 033b E8030000 		.4byte	0x3e8
 1166 033f 03       		.byte	0x3
 1167 0340 23       		.byte	0x23
 1168 0341 A001     		.uleb128 0xa0
 1169 0343 0C       		.uleb128 0xc
 1170 0344 AB0C0000 		.4byte	.LASF110
 1171 0348 02       		.byte	0x2
 1172 0349 3501     		.2byte	0x135
 1173 034b E3030000 		.4byte	0x3e3
 1174 034f 03       		.byte	0x3
ARM GAS  /tmp/ccFmD5nI.s 			page 58


 1175 0350 23       		.byte	0x23
 1176 0351 8002     		.uleb128 0x100
 1177 0353 0C       		.uleb128 0xc
 1178 0354 99030000 		.4byte	.LASF111
 1179 0358 02       		.byte	0x2
 1180 0359 3601     		.2byte	0x136
 1181 035b E8030000 		.4byte	0x3e8
 1182 035f 03       		.byte	0x3
 1183 0360 23       		.byte	0x23
 1184 0361 A002     		.uleb128 0x120
 1185 0363 0C       		.uleb128 0xc
 1186 0364 3D010000 		.4byte	.LASF112
 1187 0368 02       		.byte	0x2
 1188 0369 3701     		.2byte	0x137
 1189 036b E3030000 		.4byte	0x3e3
 1190 036f 03       		.byte	0x3
 1191 0370 23       		.byte	0x23
 1192 0371 8003     		.uleb128 0x180
 1193 0373 0C       		.uleb128 0xc
 1194 0374 A3030000 		.4byte	.LASF113
 1195 0378 02       		.byte	0x2
 1196 0379 3801     		.2byte	0x138
 1197 037b E8030000 		.4byte	0x3e8
 1198 037f 03       		.byte	0x3
 1199 0380 23       		.byte	0x23
 1200 0381 A003     		.uleb128 0x1a0
 1201 0383 0C       		.uleb128 0xc
 1202 0384 3E030000 		.4byte	.LASF114
 1203 0388 02       		.byte	0x2
 1204 0389 3901     		.2byte	0x139
 1205 038b E3030000 		.4byte	0x3e3
 1206 038f 03       		.byte	0x3
 1207 0390 23       		.byte	0x23
 1208 0391 8004     		.uleb128 0x200
 1209 0393 0C       		.uleb128 0xc
 1210 0394 2A030000 		.4byte	.LASF115
 1211 0398 02       		.byte	0x2
 1212 0399 3A01     		.2byte	0x13a
 1213 039b F8030000 		.4byte	0x3f8
 1214 039f 03       		.byte	0x3
 1215 03a0 23       		.byte	0x23
 1216 03a1 A004     		.uleb128 0x220
 1217 03a3 0D       		.uleb128 0xd
 1218 03a4 495000   		.ascii	"IP\000"
 1219 03a7 02       		.byte	0x2
 1220 03a8 3B01     		.2byte	0x13b
 1221 03aa 18040000 		.4byte	0x418
 1222 03ae 03       		.byte	0x3
 1223 03af 23       		.byte	0x23
 1224 03b0 8006     		.uleb128 0x300
 1225 03b2 0C       		.uleb128 0xc
 1226 03b3 34030000 		.4byte	.LASF116
 1227 03b7 02       		.byte	0x2
 1228 03b8 3C01     		.2byte	0x13c
 1229 03ba 1D040000 		.4byte	0x41d
 1230 03be 03       		.byte	0x3
 1231 03bf 23       		.byte	0x23
ARM GAS  /tmp/ccFmD5nI.s 			page 59


 1232 03c0 F007     		.uleb128 0x3f0
 1233 03c2 0C       		.uleb128 0xc
 1234 03c3 49040000 		.4byte	.LASF117
 1235 03c7 02       		.byte	0x2
 1236 03c8 3D01     		.2byte	0x13d
 1237 03ca F1020000 		.4byte	0x2f1
 1238 03ce 03       		.byte	0x3
 1239 03cf 23       		.byte	0x23
 1240 03d0 801C     		.uleb128 0xe00
 1241 03d2 00       		.byte	0
 1242 03d3 0E       		.uleb128 0xe
 1243 03d4 F1020000 		.4byte	0x2f1
 1244 03d8 E3030000 		.4byte	0x3e3
 1245 03dc 0F       		.uleb128 0xf
 1246 03dd 25000000 		.4byte	0x25
 1247 03e1 07       		.byte	0x7
 1248 03e2 00       		.byte	0
 1249 03e3 09       		.uleb128 0x9
 1250 03e4 D3030000 		.4byte	0x3d3
 1251 03e8 0E       		.uleb128 0xe
 1252 03e9 E6020000 		.4byte	0x2e6
 1253 03ed F8030000 		.4byte	0x3f8
 1254 03f1 0F       		.uleb128 0xf
 1255 03f2 25000000 		.4byte	0x25
 1256 03f6 17       		.byte	0x17
 1257 03f7 00       		.byte	0
 1258 03f8 0E       		.uleb128 0xe
 1259 03f9 E6020000 		.4byte	0x2e6
 1260 03fd 08040000 		.4byte	0x408
 1261 0401 0F       		.uleb128 0xf
 1262 0402 25000000 		.4byte	0x25
 1263 0406 37       		.byte	0x37
 1264 0407 00       		.byte	0
 1265 0408 0E       		.uleb128 0xe
 1266 0409 D1020000 		.4byte	0x2d1
 1267 040d 18040000 		.4byte	0x418
 1268 0411 0F       		.uleb128 0xf
 1269 0412 25000000 		.4byte	0x25
 1270 0416 EF       		.byte	0xef
 1271 0417 00       		.byte	0
 1272 0418 09       		.uleb128 0x9
 1273 0419 08040000 		.4byte	0x408
 1274 041d 0E       		.uleb128 0xe
 1275 041e E6020000 		.4byte	0x2e6
 1276 0422 2E040000 		.4byte	0x42e
 1277 0426 10       		.uleb128 0x10
 1278 0427 25000000 		.4byte	0x25
 1279 042b 8302     		.2byte	0x283
 1280 042d 00       		.byte	0
 1281 042e 06       		.uleb128 0x6
 1282 042f FF080000 		.4byte	.LASF118
 1283 0433 02       		.byte	0x2
 1284 0434 3E01     		.2byte	0x13e
 1285 0436 FB020000 		.4byte	0x2fb
 1286 043a 11       		.uleb128 0x11
 1287 043b 8C       		.byte	0x8c
 1288 043c 02       		.byte	0x2
ARM GAS  /tmp/ccFmD5nI.s 			page 60


 1289 043d 4F01     		.2byte	0x14f
 1290 043f 80050000 		.4byte	0x580
 1291 0443 0C       		.uleb128 0xc
 1292 0444 FC010000 		.4byte	.LASF119
 1293 0448 02       		.byte	0x2
 1294 0449 5101     		.2byte	0x151
 1295 044b F6020000 		.4byte	0x2f6
 1296 044f 02       		.byte	0x2
 1297 0450 23       		.byte	0x23
 1298 0451 00       		.uleb128 0
 1299 0452 0C       		.uleb128 0xc
 1300 0453 AF020000 		.4byte	.LASF120
 1301 0457 02       		.byte	0x2
 1302 0458 5201     		.2byte	0x152
 1303 045a F1020000 		.4byte	0x2f1
 1304 045e 02       		.byte	0x2
 1305 045f 23       		.byte	0x23
 1306 0460 04       		.uleb128 0x4
 1307 0461 0C       		.uleb128 0xc
 1308 0462 DB000000 		.4byte	.LASF121
 1309 0466 02       		.byte	0x2
 1310 0467 5301     		.2byte	0x153
 1311 0469 F1020000 		.4byte	0x2f1
 1312 046d 02       		.byte	0x2
 1313 046e 23       		.byte	0x23
 1314 046f 08       		.uleb128 0x8
 1315 0470 0C       		.uleb128 0xc
 1316 0471 A5010000 		.4byte	.LASF122
 1317 0475 02       		.byte	0x2
 1318 0476 5401     		.2byte	0x154
 1319 0478 F1020000 		.4byte	0x2f1
 1320 047c 02       		.byte	0x2
 1321 047d 23       		.byte	0x23
 1322 047e 0C       		.uleb128 0xc
 1323 047f 0D       		.uleb128 0xd
 1324 0480 53435200 		.ascii	"SCR\000"
 1325 0484 02       		.byte	0x2
 1326 0485 5501     		.2byte	0x155
 1327 0487 F1020000 		.4byte	0x2f1
 1328 048b 02       		.byte	0x2
 1329 048c 23       		.byte	0x23
 1330 048d 10       		.uleb128 0x10
 1331 048e 0D       		.uleb128 0xd
 1332 048f 43435200 		.ascii	"CCR\000"
 1333 0493 02       		.byte	0x2
 1334 0494 5601     		.2byte	0x156
 1335 0496 F1020000 		.4byte	0x2f1
 1336 049a 02       		.byte	0x2
 1337 049b 23       		.byte	0x23
 1338 049c 14       		.uleb128 0x14
 1339 049d 0D       		.uleb128 0xd
 1340 049e 53485000 		.ascii	"SHP\000"
 1341 04a2 02       		.byte	0x2
 1342 04a3 5701     		.2byte	0x157
 1343 04a5 90050000 		.4byte	0x590
 1344 04a9 02       		.byte	0x2
 1345 04aa 23       		.byte	0x23
ARM GAS  /tmp/ccFmD5nI.s 			page 61


 1346 04ab 18       		.uleb128 0x18
 1347 04ac 0C       		.uleb128 0xc
 1348 04ad 3C040000 		.4byte	.LASF123
 1349 04b1 02       		.byte	0x2
 1350 04b2 5801     		.2byte	0x158
 1351 04b4 F1020000 		.4byte	0x2f1
 1352 04b8 02       		.byte	0x2
 1353 04b9 23       		.byte	0x23
 1354 04ba 24       		.uleb128 0x24
 1355 04bb 0C       		.uleb128 0xc
 1356 04bc 730A0000 		.4byte	.LASF124
 1357 04c0 02       		.byte	0x2
 1358 04c1 5901     		.2byte	0x159
 1359 04c3 F1020000 		.4byte	0x2f1
 1360 04c7 02       		.byte	0x2
 1361 04c8 23       		.byte	0x23
 1362 04c9 28       		.uleb128 0x28
 1363 04ca 0C       		.uleb128 0xc
 1364 04cb FB030000 		.4byte	.LASF125
 1365 04cf 02       		.byte	0x2
 1366 04d0 5A01     		.2byte	0x15a
 1367 04d2 F1020000 		.4byte	0x2f1
 1368 04d6 02       		.byte	0x2
 1369 04d7 23       		.byte	0x23
 1370 04d8 2C       		.uleb128 0x2c
 1371 04d9 0C       		.uleb128 0xc
 1372 04da E1030000 		.4byte	.LASF126
 1373 04de 02       		.byte	0x2
 1374 04df 5B01     		.2byte	0x15b
 1375 04e1 F1020000 		.4byte	0x2f1
 1376 04e5 02       		.byte	0x2
 1377 04e6 23       		.byte	0x23
 1378 04e7 30       		.uleb128 0x30
 1379 04e8 0C       		.uleb128 0xc
 1380 04e9 070B0000 		.4byte	.LASF127
 1381 04ed 02       		.byte	0x2
 1382 04ee 5C01     		.2byte	0x15c
 1383 04f0 F1020000 		.4byte	0x2f1
 1384 04f4 02       		.byte	0x2
 1385 04f5 23       		.byte	0x23
 1386 04f6 34       		.uleb128 0x34
 1387 04f7 0C       		.uleb128 0xc
 1388 04f8 30080000 		.4byte	.LASF128
 1389 04fc 02       		.byte	0x2
 1390 04fd 5D01     		.2byte	0x15d
 1391 04ff F1020000 		.4byte	0x2f1
 1392 0503 02       		.byte	0x2
 1393 0504 23       		.byte	0x23
 1394 0505 38       		.uleb128 0x38
 1395 0506 0C       		.uleb128 0xc
 1396 0507 470A0000 		.4byte	.LASF129
 1397 050b 02       		.byte	0x2
 1398 050c 5E01     		.2byte	0x15e
 1399 050e F1020000 		.4byte	0x2f1
 1400 0512 02       		.byte	0x2
 1401 0513 23       		.byte	0x23
 1402 0514 3C       		.uleb128 0x3c
ARM GAS  /tmp/ccFmD5nI.s 			page 62


 1403 0515 0D       		.uleb128 0xd
 1404 0516 50465200 		.ascii	"PFR\000"
 1405 051a 02       		.byte	0x2
 1406 051b 5F01     		.2byte	0x15f
 1407 051d AA050000 		.4byte	0x5aa
 1408 0521 02       		.byte	0x2
 1409 0522 23       		.byte	0x23
 1410 0523 40       		.uleb128 0x40
 1411 0524 0D       		.uleb128 0xd
 1412 0525 44465200 		.ascii	"DFR\000"
 1413 0529 02       		.byte	0x2
 1414 052a 6001     		.2byte	0x160
 1415 052c F6020000 		.4byte	0x2f6
 1416 0530 02       		.byte	0x2
 1417 0531 23       		.byte	0x23
 1418 0532 48       		.uleb128 0x48
 1419 0533 0D       		.uleb128 0xd
 1420 0534 41445200 		.ascii	"ADR\000"
 1421 0538 02       		.byte	0x2
 1422 0539 6101     		.2byte	0x161
 1423 053b F6020000 		.4byte	0x2f6
 1424 053f 02       		.byte	0x2
 1425 0540 23       		.byte	0x23
 1426 0541 4C       		.uleb128 0x4c
 1427 0542 0C       		.uleb128 0xc
 1428 0543 020B0000 		.4byte	.LASF130
 1429 0547 02       		.byte	0x2
 1430 0548 6201     		.2byte	0x162
 1431 054a C4050000 		.4byte	0x5c4
 1432 054e 02       		.byte	0x2
 1433 054f 23       		.byte	0x23
 1434 0550 50       		.uleb128 0x50
 1435 0551 0C       		.uleb128 0xc
 1436 0552 530B0000 		.4byte	.LASF131
 1437 0556 02       		.byte	0x2
 1438 0557 6301     		.2byte	0x163
 1439 0559 DE050000 		.4byte	0x5de
 1440 055d 02       		.byte	0x2
 1441 055e 23       		.byte	0x23
 1442 055f 60       		.uleb128 0x60
 1443 0560 0C       		.uleb128 0xc
 1444 0561 00030000 		.4byte	.LASF107
 1445 0565 02       		.byte	0x2
 1446 0566 6401     		.2byte	0x164
 1447 0568 E3050000 		.4byte	0x5e3
 1448 056c 02       		.byte	0x2
 1449 056d 23       		.byte	0x23
 1450 056e 74       		.uleb128 0x74
 1451 056f 0C       		.uleb128 0xc
 1452 0570 A50C0000 		.4byte	.LASF132
 1453 0574 02       		.byte	0x2
 1454 0575 6501     		.2byte	0x165
 1455 0577 F1020000 		.4byte	0x2f1
 1456 057b 03       		.byte	0x3
 1457 057c 23       		.byte	0x23
 1458 057d 8801     		.uleb128 0x88
 1459 057f 00       		.byte	0
ARM GAS  /tmp/ccFmD5nI.s 			page 63


 1460 0580 0E       		.uleb128 0xe
 1461 0581 D1020000 		.4byte	0x2d1
 1462 0585 90050000 		.4byte	0x590
 1463 0589 0F       		.uleb128 0xf
 1464 058a 25000000 		.4byte	0x25
 1465 058e 0B       		.byte	0xb
 1466 058f 00       		.byte	0
 1467 0590 09       		.uleb128 0x9
 1468 0591 80050000 		.4byte	0x580
 1469 0595 0E       		.uleb128 0xe
 1470 0596 F6020000 		.4byte	0x2f6
 1471 059a A5050000 		.4byte	0x5a5
 1472 059e 0F       		.uleb128 0xf
 1473 059f 25000000 		.4byte	0x25
 1474 05a3 01       		.byte	0x1
 1475 05a4 00       		.byte	0
 1476 05a5 0A       		.uleb128 0xa
 1477 05a6 95050000 		.4byte	0x595
 1478 05aa 09       		.uleb128 0x9
 1479 05ab A5050000 		.4byte	0x5a5
 1480 05af 0E       		.uleb128 0xe
 1481 05b0 F6020000 		.4byte	0x2f6
 1482 05b4 BF050000 		.4byte	0x5bf
 1483 05b8 0F       		.uleb128 0xf
 1484 05b9 25000000 		.4byte	0x25
 1485 05bd 03       		.byte	0x3
 1486 05be 00       		.byte	0
 1487 05bf 0A       		.uleb128 0xa
 1488 05c0 AF050000 		.4byte	0x5af
 1489 05c4 09       		.uleb128 0x9
 1490 05c5 BF050000 		.4byte	0x5bf
 1491 05c9 0E       		.uleb128 0xe
 1492 05ca F6020000 		.4byte	0x2f6
 1493 05ce D9050000 		.4byte	0x5d9
 1494 05d2 0F       		.uleb128 0xf
 1495 05d3 25000000 		.4byte	0x25
 1496 05d7 04       		.byte	0x4
 1497 05d8 00       		.byte	0
 1498 05d9 0A       		.uleb128 0xa
 1499 05da C9050000 		.4byte	0x5c9
 1500 05de 09       		.uleb128 0x9
 1501 05df D9050000 		.4byte	0x5d9
 1502 05e3 0E       		.uleb128 0xe
 1503 05e4 E6020000 		.4byte	0x2e6
 1504 05e8 F3050000 		.4byte	0x5f3
 1505 05ec 0F       		.uleb128 0xf
 1506 05ed 25000000 		.4byte	0x25
 1507 05f1 04       		.byte	0x4
 1508 05f2 00       		.byte	0
 1509 05f3 06       		.uleb128 0x6
 1510 05f4 D1030000 		.4byte	.LASF133
 1511 05f8 02       		.byte	0x2
 1512 05f9 6601     		.2byte	0x166
 1513 05fb 3A040000 		.4byte	0x43a
 1514 05ff 11       		.uleb128 0x11
 1515 0600 10       		.byte	0x10
 1516 0601 02       		.byte	0x2
ARM GAS  /tmp/ccFmD5nI.s 			page 64


 1517 0602 4E02     		.2byte	0x24e
 1518 0604 45060000 		.4byte	0x645
 1519 0608 0C       		.uleb128 0xc
 1520 0609 A2070000 		.4byte	.LASF134
 1521 060d 02       		.byte	0x2
 1522 060e 5002     		.2byte	0x250
 1523 0610 F1020000 		.4byte	0x2f1
 1524 0614 02       		.byte	0x2
 1525 0615 23       		.byte	0x23
 1526 0616 00       		.uleb128 0
 1527 0617 0C       		.uleb128 0xc
 1528 0618 AF0A0000 		.4byte	.LASF135
 1529 061c 02       		.byte	0x2
 1530 061d 5102     		.2byte	0x251
 1531 061f F1020000 		.4byte	0x2f1
 1532 0623 02       		.byte	0x2
 1533 0624 23       		.byte	0x23
 1534 0625 04       		.uleb128 0x4
 1535 0626 0D       		.uleb128 0xd
 1536 0627 56414C00 		.ascii	"VAL\000"
 1537 062b 02       		.byte	0x2
 1538 062c 5202     		.2byte	0x252
 1539 062e F1020000 		.4byte	0x2f1
 1540 0632 02       		.byte	0x2
 1541 0633 23       		.byte	0x23
 1542 0634 08       		.uleb128 0x8
 1543 0635 0C       		.uleb128 0xc
 1544 0636 4C0A0000 		.4byte	.LASF136
 1545 063a 02       		.byte	0x2
 1546 063b 5302     		.2byte	0x253
 1547 063d F6020000 		.4byte	0x2f6
 1548 0641 02       		.byte	0x2
 1549 0642 23       		.byte	0x23
 1550 0643 0C       		.uleb128 0xc
 1551 0644 00       		.byte	0
 1552 0645 06       		.uleb128 0x6
 1553 0646 96080000 		.4byte	.LASF137
 1554 064a 02       		.byte	0x2
 1555 064b 5402     		.2byte	0x254
 1556 064d FF050000 		.4byte	0x5ff
 1557 0651 12       		.uleb128 0x12
 1558 0652 A70B0000 		.4byte	.LASF138
 1559 0656 02       		.byte	0x2
 1560 0657 1A05     		.2byte	0x51a
 1561 0659 E1020000 		.4byte	0x2e1
 1562 065d 01       		.byte	0x1
 1563 065e 01       		.byte	0x1
 1564 065f 13       		.uleb128 0x13
 1565 0660 74050000 		.4byte	.LASF139
 1566 0664 07       		.byte	0x7
 1567 0665 3B       		.byte	0x3b
 1568 0666 E6020000 		.4byte	0x2e6
 1569 066a 01       		.byte	0x1
 1570 066b 01       		.byte	0x1
 1571 066c 02       		.uleb128 0x2
 1572 066d 08       		.byte	0x8
 1573 066e 04       		.byte	0x4
ARM GAS  /tmp/ccFmD5nI.s 			page 65


 1574 066f AD080000 		.4byte	.LASF140
 1575 0673 07       		.uleb128 0x7
 1576 0674 D60B0000 		.4byte	.LASF141
 1577 0678 08       		.byte	0x8
 1578 0679 22       		.byte	0x22
 1579 067a 7E060000 		.4byte	0x67e
 1580 067e 14       		.uleb128 0x14
 1581 067f 04       		.byte	0x4
 1582 0680 84060000 		.4byte	0x684
 1583 0684 15       		.uleb128 0x15
 1584 0685 73040000 		.4byte	.LASF248
 1585 0689 01       		.byte	0x1
 1586 068a 07       		.uleb128 0x7
 1587 068b 5A0C0000 		.4byte	.LASF142
 1588 068f 09       		.byte	0x9
 1589 0690 2C       		.byte	0x2c
 1590 0691 98020000 		.4byte	0x298
 1591 0695 07       		.uleb128 0x7
 1592 0696 E1080000 		.4byte	.LASF143
 1593 069a 09       		.byte	0x9
 1594 069b 72       		.byte	0x72
 1595 069c 98020000 		.4byte	0x298
 1596 06a0 06       		.uleb128 0x6
 1597 06a1 400A0000 		.4byte	.LASF144
 1598 06a5 0A       		.byte	0xa
 1599 06a6 6501     		.2byte	0x165
 1600 06a8 25000000 		.4byte	0x25
 1601 06ac 16       		.uleb128 0x16
 1602 06ad 04       		.byte	0x4
 1603 06ae 09       		.byte	0x9
 1604 06af A6       		.byte	0xa6
 1605 06b0 CB060000 		.4byte	0x6cb
 1606 06b4 17       		.uleb128 0x17
 1607 06b5 5C010000 		.4byte	.LASF145
 1608 06b9 09       		.byte	0x9
 1609 06ba A8       		.byte	0xa8
 1610 06bb A0060000 		.4byte	0x6a0
 1611 06bf 17       		.uleb128 0x17
 1612 06c0 E9080000 		.4byte	.LASF146
 1613 06c4 09       		.byte	0x9
 1614 06c5 A9       		.byte	0xa9
 1615 06c6 CB060000 		.4byte	0x6cb
 1616 06ca 00       		.byte	0
 1617 06cb 0E       		.uleb128 0xe
 1618 06cc 78020000 		.4byte	0x278
 1619 06d0 DB060000 		.4byte	0x6db
 1620 06d4 0F       		.uleb128 0xf
 1621 06d5 25000000 		.4byte	0x25
 1622 06d9 03       		.byte	0x3
 1623 06da 00       		.byte	0
 1624 06db 18       		.uleb128 0x18
 1625 06dc 08       		.byte	0x8
 1626 06dd 09       		.byte	0x9
 1627 06de A3       		.byte	0xa3
 1628 06df 00070000 		.4byte	0x700
 1629 06e3 19       		.uleb128 0x19
 1630 06e4 8E080000 		.4byte	.LASF147
ARM GAS  /tmp/ccFmD5nI.s 			page 66


 1631 06e8 09       		.byte	0x9
 1632 06e9 A5       		.byte	0xa5
 1633 06ea BF020000 		.4byte	0x2bf
 1634 06ee 02       		.byte	0x2
 1635 06ef 23       		.byte	0x23
 1636 06f0 00       		.uleb128 0
 1637 06f1 19       		.uleb128 0x19
 1638 06f2 5B000000 		.4byte	.LASF148
 1639 06f6 09       		.byte	0x9
 1640 06f7 AA       		.byte	0xaa
 1641 06f8 AC060000 		.4byte	0x6ac
 1642 06fc 02       		.byte	0x2
 1643 06fd 23       		.byte	0x23
 1644 06fe 04       		.uleb128 0x4
 1645 06ff 00       		.byte	0
 1646 0700 07       		.uleb128 0x7
 1647 0701 180A0000 		.4byte	.LASF149
 1648 0705 09       		.byte	0x9
 1649 0706 AB       		.byte	0xab
 1650 0707 DB060000 		.4byte	0x6db
 1651 070b 07       		.uleb128 0x7
 1652 070c 080A0000 		.4byte	.LASF150
 1653 0710 09       		.byte	0x9
 1654 0711 AF       		.byte	0xaf
 1655 0712 73060000 		.4byte	0x673
 1656 0716 1A       		.uleb128 0x1a
 1657 0717 04       		.byte	0x4
 1658 0718 14       		.uleb128 0x14
 1659 0719 04       		.byte	0x4
 1660 071a 1E070000 		.4byte	0x71e
 1661 071e 02       		.uleb128 0x2
 1662 071f 01       		.byte	0x1
 1663 0720 08       		.byte	0x8
 1664 0721 C7030000 		.4byte	.LASF151
 1665 0725 0A       		.uleb128 0xa
 1666 0726 1E070000 		.4byte	0x71e
 1667 072a 07       		.uleb128 0x7
 1668 072b 010C0000 		.4byte	.LASF152
 1669 072f 0B       		.byte	0xb
 1670 0730 16       		.byte	0x16
 1671 0731 AA020000 		.4byte	0x2aa
 1672 0735 1B       		.uleb128 0x1b
 1673 0736 34060000 		.4byte	.LASF157
 1674 073a 18       		.byte	0x18
 1675 073b 0B       		.byte	0xb
 1676 073c 2F       		.byte	0x2f
 1677 073d 94070000 		.4byte	0x794
 1678 0741 19       		.uleb128 0x19
 1679 0742 520A0000 		.4byte	.LASF153
 1680 0746 0B       		.byte	0xb
 1681 0747 31       		.byte	0x31
 1682 0748 94070000 		.4byte	0x794
 1683 074c 02       		.byte	0x2
 1684 074d 23       		.byte	0x23
 1685 074e 00       		.uleb128 0
 1686 074f 1C       		.uleb128 0x1c
 1687 0750 5F6B00   		.ascii	"_k\000"
ARM GAS  /tmp/ccFmD5nI.s 			page 67


 1688 0753 0B       		.byte	0xb
 1689 0754 32       		.byte	0x32
 1690 0755 BF020000 		.4byte	0x2bf
 1691 0759 02       		.byte	0x2
 1692 075a 23       		.byte	0x23
 1693 075b 04       		.uleb128 0x4
 1694 075c 19       		.uleb128 0x19
 1695 075d 3C060000 		.4byte	.LASF154
 1696 0761 0B       		.byte	0xb
 1697 0762 32       		.byte	0x32
 1698 0763 BF020000 		.4byte	0x2bf
 1699 0767 02       		.byte	0x2
 1700 0768 23       		.byte	0x23
 1701 0769 08       		.uleb128 0x8
 1702 076a 19       		.uleb128 0x19
 1703 076b 4F070000 		.4byte	.LASF155
 1704 076f 0B       		.byte	0xb
 1705 0770 32       		.byte	0x32
 1706 0771 BF020000 		.4byte	0x2bf
 1707 0775 02       		.byte	0x2
 1708 0776 23       		.byte	0x23
 1709 0777 0C       		.uleb128 0xc
 1710 0778 19       		.uleb128 0x19
 1711 0779 6E040000 		.4byte	.LASF156
 1712 077d 0B       		.byte	0xb
 1713 077e 32       		.byte	0x32
 1714 077f BF020000 		.4byte	0x2bf
 1715 0783 02       		.byte	0x2
 1716 0784 23       		.byte	0x23
 1717 0785 10       		.uleb128 0x10
 1718 0786 1C       		.uleb128 0x1c
 1719 0787 5F7800   		.ascii	"_x\000"
 1720 078a 0B       		.byte	0xb
 1721 078b 33       		.byte	0x33
 1722 078c 9A070000 		.4byte	0x79a
 1723 0790 02       		.byte	0x2
 1724 0791 23       		.byte	0x23
 1725 0792 14       		.uleb128 0x14
 1726 0793 00       		.byte	0
 1727 0794 14       		.uleb128 0x14
 1728 0795 04       		.byte	0x4
 1729 0796 35070000 		.4byte	0x735
 1730 079a 0E       		.uleb128 0xe
 1731 079b 2A070000 		.4byte	0x72a
 1732 079f AA070000 		.4byte	0x7aa
 1733 07a3 0F       		.uleb128 0xf
 1734 07a4 25000000 		.4byte	0x25
 1735 07a8 00       		.byte	0
 1736 07a9 00       		.byte	0
 1737 07aa 1B       		.uleb128 0x1b
 1738 07ab 9A000000 		.4byte	.LASF158
 1739 07af 24       		.byte	0x24
 1740 07b0 0B       		.byte	0xb
 1741 07b1 37       		.byte	0x37
 1742 07b2 35080000 		.4byte	0x835
 1743 07b6 19       		.uleb128 0x19
 1744 07b7 B6000000 		.4byte	.LASF159
ARM GAS  /tmp/ccFmD5nI.s 			page 68


 1745 07bb 0B       		.byte	0xb
 1746 07bc 39       		.byte	0x39
 1747 07bd BF020000 		.4byte	0x2bf
 1748 07c1 02       		.byte	0x2
 1749 07c2 23       		.byte	0x23
 1750 07c3 00       		.uleb128 0
 1751 07c4 19       		.uleb128 0x19
 1752 07c5 B20D0000 		.4byte	.LASF160
 1753 07c9 0B       		.byte	0xb
 1754 07ca 3A       		.byte	0x3a
 1755 07cb BF020000 		.4byte	0x2bf
 1756 07cf 02       		.byte	0x2
 1757 07d0 23       		.byte	0x23
 1758 07d1 04       		.uleb128 0x4
 1759 07d2 19       		.uleb128 0x19
 1760 07d3 7E0C0000 		.4byte	.LASF161
 1761 07d7 0B       		.byte	0xb
 1762 07d8 3B       		.byte	0x3b
 1763 07d9 BF020000 		.4byte	0x2bf
 1764 07dd 02       		.byte	0x2
 1765 07de 23       		.byte	0x23
 1766 07df 08       		.uleb128 0x8
 1767 07e0 19       		.uleb128 0x19
 1768 07e1 E7070000 		.4byte	.LASF162
 1769 07e5 0B       		.byte	0xb
 1770 07e6 3C       		.byte	0x3c
 1771 07e7 BF020000 		.4byte	0x2bf
 1772 07eb 02       		.byte	0x2
 1773 07ec 23       		.byte	0x23
 1774 07ed 0C       		.uleb128 0xc
 1775 07ee 19       		.uleb128 0x19
 1776 07ef 5F020000 		.4byte	.LASF163
 1777 07f3 0B       		.byte	0xb
 1778 07f4 3D       		.byte	0x3d
 1779 07f5 BF020000 		.4byte	0x2bf
 1780 07f9 02       		.byte	0x2
 1781 07fa 23       		.byte	0x23
 1782 07fb 10       		.uleb128 0x10
 1783 07fc 19       		.uleb128 0x19
 1784 07fd 7D0B0000 		.4byte	.LASF164
 1785 0801 0B       		.byte	0xb
 1786 0802 3E       		.byte	0x3e
 1787 0803 BF020000 		.4byte	0x2bf
 1788 0807 02       		.byte	0x2
 1789 0808 23       		.byte	0x23
 1790 0809 14       		.uleb128 0x14
 1791 080a 19       		.uleb128 0x19
 1792 080b A3080000 		.4byte	.LASF165
 1793 080f 0B       		.byte	0xb
 1794 0810 3F       		.byte	0x3f
 1795 0811 BF020000 		.4byte	0x2bf
 1796 0815 02       		.byte	0x2
 1797 0816 23       		.byte	0x23
 1798 0817 18       		.uleb128 0x18
 1799 0818 19       		.uleb128 0x19
 1800 0819 B9080000 		.4byte	.LASF166
 1801 081d 0B       		.byte	0xb
ARM GAS  /tmp/ccFmD5nI.s 			page 69


 1802 081e 40       		.byte	0x40
 1803 081f BF020000 		.4byte	0x2bf
 1804 0823 02       		.byte	0x2
 1805 0824 23       		.byte	0x23
 1806 0825 1C       		.uleb128 0x1c
 1807 0826 19       		.uleb128 0x19
 1808 0827 9B0D0000 		.4byte	.LASF167
 1809 082b 0B       		.byte	0xb
 1810 082c 41       		.byte	0x41
 1811 082d BF020000 		.4byte	0x2bf
 1812 0831 02       		.byte	0x2
 1813 0832 23       		.byte	0x23
 1814 0833 20       		.uleb128 0x20
 1815 0834 00       		.byte	0
 1816 0835 1D       		.uleb128 0x1d
 1817 0836 97010000 		.4byte	.LASF168
 1818 083a 0801     		.2byte	0x108
 1819 083c 0B       		.byte	0xb
 1820 083d 4A       		.byte	0x4a
 1821 083e 7E080000 		.4byte	0x87e
 1822 0842 19       		.uleb128 0x19
 1823 0843 930D0000 		.4byte	.LASF169
 1824 0847 0B       		.byte	0xb
 1825 0848 4B       		.byte	0x4b
 1826 0849 7E080000 		.4byte	0x87e
 1827 084d 02       		.byte	0x2
 1828 084e 23       		.byte	0x23
 1829 084f 00       		.uleb128 0
 1830 0850 19       		.uleb128 0x19
 1831 0851 46090000 		.4byte	.LASF170
 1832 0855 0B       		.byte	0xb
 1833 0856 4C       		.byte	0x4c
 1834 0857 7E080000 		.4byte	0x87e
 1835 085b 03       		.byte	0x3
 1836 085c 23       		.byte	0x23
 1837 085d 8001     		.uleb128 0x80
 1838 085f 19       		.uleb128 0x19
 1839 0860 620B0000 		.4byte	.LASF171
 1840 0864 0B       		.byte	0xb
 1841 0865 4E       		.byte	0x4e
 1842 0866 2A070000 		.4byte	0x72a
 1843 086a 03       		.byte	0x3
 1844 086b 23       		.byte	0x23
 1845 086c 8002     		.uleb128 0x100
 1846 086e 19       		.uleb128 0x19
 1847 086f CE0B0000 		.4byte	.LASF172
 1848 0873 0B       		.byte	0xb
 1849 0874 51       		.byte	0x51
 1850 0875 2A070000 		.4byte	0x72a
 1851 0879 03       		.byte	0x3
 1852 087a 23       		.byte	0x23
 1853 087b 8402     		.uleb128 0x104
 1854 087d 00       		.byte	0
 1855 087e 0E       		.uleb128 0xe
 1856 087f 16070000 		.4byte	0x716
 1857 0883 8E080000 		.4byte	0x88e
 1858 0887 0F       		.uleb128 0xf
ARM GAS  /tmp/ccFmD5nI.s 			page 70


 1859 0888 25000000 		.4byte	0x25
 1860 088c 1F       		.byte	0x1f
 1861 088d 00       		.byte	0
 1862 088e 1D       		.uleb128 0x1d
 1863 088f 67080000 		.4byte	.LASF173
 1864 0893 9001     		.2byte	0x190
 1865 0895 0B       		.byte	0xb
 1866 0896 5D       		.byte	0x5d
 1867 0897 D5080000 		.4byte	0x8d5
 1868 089b 19       		.uleb128 0x19
 1869 089c 520A0000 		.4byte	.LASF153
 1870 08a0 0B       		.byte	0xb
 1871 08a1 5E       		.byte	0x5e
 1872 08a2 D5080000 		.4byte	0x8d5
 1873 08a6 02       		.byte	0x2
 1874 08a7 23       		.byte	0x23
 1875 08a8 00       		.uleb128 0
 1876 08a9 19       		.uleb128 0x19
 1877 08aa C20B0000 		.4byte	.LASF174
 1878 08ae 0B       		.byte	0xb
 1879 08af 5F       		.byte	0x5f
 1880 08b0 BF020000 		.4byte	0x2bf
 1881 08b4 02       		.byte	0x2
 1882 08b5 23       		.byte	0x23
 1883 08b6 04       		.uleb128 0x4
 1884 08b7 19       		.uleb128 0x19
 1885 08b8 CC030000 		.4byte	.LASF175
 1886 08bc 0B       		.byte	0xb
 1887 08bd 61       		.byte	0x61
 1888 08be DB080000 		.4byte	0x8db
 1889 08c2 02       		.byte	0x2
 1890 08c3 23       		.byte	0x23
 1891 08c4 08       		.uleb128 0x8
 1892 08c5 19       		.uleb128 0x19
 1893 08c6 97010000 		.4byte	.LASF168
 1894 08ca 0B       		.byte	0xb
 1895 08cb 62       		.byte	0x62
 1896 08cc 35080000 		.4byte	0x835
 1897 08d0 03       		.byte	0x3
 1898 08d1 23       		.byte	0x23
 1899 08d2 8801     		.uleb128 0x88
 1900 08d4 00       		.byte	0
 1901 08d5 14       		.uleb128 0x14
 1902 08d6 04       		.byte	0x4
 1903 08d7 8E080000 		.4byte	0x88e
 1904 08db 0E       		.uleb128 0xe
 1905 08dc EB080000 		.4byte	0x8eb
 1906 08e0 EB080000 		.4byte	0x8eb
 1907 08e4 0F       		.uleb128 0xf
 1908 08e5 25000000 		.4byte	0x25
 1909 08e9 1F       		.byte	0x1f
 1910 08ea 00       		.byte	0
 1911 08eb 14       		.uleb128 0x14
 1912 08ec 04       		.byte	0x4
 1913 08ed F1080000 		.4byte	0x8f1
 1914 08f1 1E       		.uleb128 0x1e
 1915 08f2 01       		.byte	0x1
ARM GAS  /tmp/ccFmD5nI.s 			page 71


 1916 08f3 1B       		.uleb128 0x1b
 1917 08f4 C70B0000 		.4byte	.LASF176
 1918 08f8 08       		.byte	0x8
 1919 08f9 0B       		.byte	0xb
 1920 08fa 75       		.byte	0x75
 1921 08fb 1C090000 		.4byte	0x91c
 1922 08ff 19       		.uleb128 0x19
 1923 0900 BC090000 		.4byte	.LASF177
 1924 0904 0B       		.byte	0xb
 1925 0905 76       		.byte	0x76
 1926 0906 1C090000 		.4byte	0x91c
 1927 090a 02       		.byte	0x2
 1928 090b 23       		.byte	0x23
 1929 090c 00       		.uleb128 0
 1930 090d 19       		.uleb128 0x19
 1931 090e F6010000 		.4byte	.LASF178
 1932 0912 0B       		.byte	0xb
 1933 0913 77       		.byte	0x77
 1934 0914 BF020000 		.4byte	0x2bf
 1935 0918 02       		.byte	0x2
 1936 0919 23       		.byte	0x23
 1937 091a 04       		.uleb128 0x4
 1938 091b 00       		.byte	0
 1939 091c 14       		.uleb128 0x14
 1940 091d 04       		.byte	0x4
 1941 091e 78020000 		.4byte	0x278
 1942 0922 1B       		.uleb128 0x1b
 1943 0923 59050000 		.4byte	.LASF179
 1944 0927 68       		.byte	0x68
 1945 0928 0B       		.byte	0xb
 1946 0929 B5       		.byte	0xb5
 1947 092a 7C0A0000 		.4byte	0xa7c
 1948 092e 1C       		.uleb128 0x1c
 1949 092f 5F7000   		.ascii	"_p\000"
 1950 0932 0B       		.byte	0xb
 1951 0933 B6       		.byte	0xb6
 1952 0934 1C090000 		.4byte	0x91c
 1953 0938 02       		.byte	0x2
 1954 0939 23       		.byte	0x23
 1955 093a 00       		.uleb128 0
 1956 093b 1C       		.uleb128 0x1c
 1957 093c 5F7200   		.ascii	"_r\000"
 1958 093f 0B       		.byte	0xb
 1959 0940 B7       		.byte	0xb7
 1960 0941 BF020000 		.4byte	0x2bf
 1961 0945 02       		.byte	0x2
 1962 0946 23       		.byte	0x23
 1963 0947 04       		.uleb128 0x4
 1964 0948 1C       		.uleb128 0x1c
 1965 0949 5F7700   		.ascii	"_w\000"
 1966 094c 0B       		.byte	0xb
 1967 094d B8       		.byte	0xb8
 1968 094e BF020000 		.4byte	0x2bf
 1969 0952 02       		.byte	0x2
 1970 0953 23       		.byte	0x23
 1971 0954 08       		.uleb128 0x8
 1972 0955 19       		.uleb128 0x19
ARM GAS  /tmp/ccFmD5nI.s 			page 72


 1973 0956 4E080000 		.4byte	.LASF180
 1974 095a 0B       		.byte	0xb
 1975 095b B9       		.byte	0xb9
 1976 095c 7F020000 		.4byte	0x27f
 1977 0960 02       		.byte	0x2
 1978 0961 23       		.byte	0x23
 1979 0962 0C       		.uleb128 0xc
 1980 0963 19       		.uleb128 0x19
 1981 0964 8A010000 		.4byte	.LASF181
 1982 0968 0B       		.byte	0xb
 1983 0969 BA       		.byte	0xba
 1984 096a 7F020000 		.4byte	0x27f
 1985 096e 02       		.byte	0x2
 1986 096f 23       		.byte	0x23
 1987 0970 0E       		.uleb128 0xe
 1988 0971 1C       		.uleb128 0x1c
 1989 0972 5F626600 		.ascii	"_bf\000"
 1990 0976 0B       		.byte	0xb
 1991 0977 BB       		.byte	0xbb
 1992 0978 F3080000 		.4byte	0x8f3
 1993 097c 02       		.byte	0x2
 1994 097d 23       		.byte	0x23
 1995 097e 10       		.uleb128 0x10
 1996 097f 19       		.uleb128 0x19
 1997 0980 B40B0000 		.4byte	.LASF182
 1998 0984 0B       		.byte	0xb
 1999 0985 BC       		.byte	0xbc
 2000 0986 BF020000 		.4byte	0x2bf
 2001 098a 02       		.byte	0x2
 2002 098b 23       		.byte	0x23
 2003 098c 18       		.uleb128 0x18
 2004 098d 19       		.uleb128 0x19
 2005 098e 5B040000 		.4byte	.LASF183
 2006 0992 0B       		.byte	0xb
 2007 0993 C3       		.byte	0xc3
 2008 0994 16070000 		.4byte	0x716
 2009 0998 02       		.byte	0x2
 2010 0999 23       		.byte	0x23
 2011 099a 1C       		.uleb128 0x1c
 2012 099b 19       		.uleb128 0x19
 2013 099c 68000000 		.4byte	.LASF184
 2014 09a0 0B       		.byte	0xb
 2015 09a1 C5       		.byte	0xc5
 2016 09a2 040C0000 		.4byte	0xc04
 2017 09a6 02       		.byte	0x2
 2018 09a7 23       		.byte	0x23
 2019 09a8 20       		.uleb128 0x20
 2020 09a9 19       		.uleb128 0x19
 2021 09aa 6E000000 		.4byte	.LASF185
 2022 09ae 0B       		.byte	0xb
 2023 09af C7       		.byte	0xc7
 2024 09b0 2F0C0000 		.4byte	0xc2f
 2025 09b4 02       		.byte	0x2
 2026 09b5 23       		.byte	0x23
 2027 09b6 24       		.uleb128 0x24
 2028 09b7 19       		.uleb128 0x19
 2029 09b8 C9080000 		.4byte	.LASF186
ARM GAS  /tmp/ccFmD5nI.s 			page 73


 2030 09bc 0B       		.byte	0xb
 2031 09bd CA       		.byte	0xca
 2032 09be 540C0000 		.4byte	0xc54
 2033 09c2 02       		.byte	0x2
 2034 09c3 23       		.byte	0x23
 2035 09c4 28       		.uleb128 0x28
 2036 09c5 19       		.uleb128 0x19
 2037 09c6 DA030000 		.4byte	.LASF187
 2038 09ca 0B       		.byte	0xb
 2039 09cb CB       		.byte	0xcb
 2040 09cc 6F0C0000 		.4byte	0xc6f
 2041 09d0 02       		.byte	0x2
 2042 09d1 23       		.byte	0x23
 2043 09d2 2C       		.uleb128 0x2c
 2044 09d3 1C       		.uleb128 0x1c
 2045 09d4 5F756200 		.ascii	"_ub\000"
 2046 09d8 0B       		.byte	0xb
 2047 09d9 CE       		.byte	0xce
 2048 09da F3080000 		.4byte	0x8f3
 2049 09de 02       		.byte	0x2
 2050 09df 23       		.byte	0x23
 2051 09e0 30       		.uleb128 0x30
 2052 09e1 1C       		.uleb128 0x1c
 2053 09e2 5F757000 		.ascii	"_up\000"
 2054 09e6 0B       		.byte	0xb
 2055 09e7 CF       		.byte	0xcf
 2056 09e8 1C090000 		.4byte	0x91c
 2057 09ec 02       		.byte	0x2
 2058 09ed 23       		.byte	0x23
 2059 09ee 38       		.uleb128 0x38
 2060 09ef 1C       		.uleb128 0x1c
 2061 09f0 5F757200 		.ascii	"_ur\000"
 2062 09f4 0B       		.byte	0xb
 2063 09f5 D0       		.byte	0xd0
 2064 09f6 BF020000 		.4byte	0x2bf
 2065 09fa 02       		.byte	0x2
 2066 09fb 23       		.byte	0x23
 2067 09fc 3C       		.uleb128 0x3c
 2068 09fd 19       		.uleb128 0x19
 2069 09fe 0B080000 		.4byte	.LASF188
 2070 0a02 0B       		.byte	0xb
 2071 0a03 D3       		.byte	0xd3
 2072 0a04 750C0000 		.4byte	0xc75
 2073 0a08 02       		.byte	0x2
 2074 0a09 23       		.byte	0x23
 2075 0a0a 40       		.uleb128 0x40
 2076 0a0b 19       		.uleb128 0x19
 2077 0a0c B0000000 		.4byte	.LASF189
 2078 0a10 0B       		.byte	0xb
 2079 0a11 D4       		.byte	0xd4
 2080 0a12 850C0000 		.4byte	0xc85
 2081 0a16 02       		.byte	0x2
 2082 0a17 23       		.byte	0x23
 2083 0a18 43       		.uleb128 0x43
 2084 0a19 1C       		.uleb128 0x1c
 2085 0a1a 5F6C6200 		.ascii	"_lb\000"
 2086 0a1e 0B       		.byte	0xb
ARM GAS  /tmp/ccFmD5nI.s 			page 74


 2087 0a1f D7       		.byte	0xd7
 2088 0a20 F3080000 		.4byte	0x8f3
 2089 0a24 02       		.byte	0x2
 2090 0a25 23       		.byte	0x23
 2091 0a26 44       		.uleb128 0x44
 2092 0a27 19       		.uleb128 0x19
 2093 0a28 B3090000 		.4byte	.LASF190
 2094 0a2c 0B       		.byte	0xb
 2095 0a2d DA       		.byte	0xda
 2096 0a2e BF020000 		.4byte	0x2bf
 2097 0a32 02       		.byte	0x2
 2098 0a33 23       		.byte	0x23
 2099 0a34 4C       		.uleb128 0x4c
 2100 0a35 19       		.uleb128 0x19
 2101 0a36 84040000 		.4byte	.LASF191
 2102 0a3a 0B       		.byte	0xb
 2103 0a3b DB       		.byte	0xdb
 2104 0a3c 8A060000 		.4byte	0x68a
 2105 0a40 02       		.byte	0x2
 2106 0a41 23       		.byte	0x23
 2107 0a42 50       		.uleb128 0x50
 2108 0a43 19       		.uleb128 0x19
 2109 0a44 580A0000 		.4byte	.LASF192
 2110 0a48 0B       		.byte	0xb
 2111 0a49 DE       		.byte	0xde
 2112 0a4a 9B0A0000 		.4byte	0xa9b
 2113 0a4e 02       		.byte	0x2
 2114 0a4f 23       		.byte	0x23
 2115 0a50 54       		.uleb128 0x54
 2116 0a51 19       		.uleb128 0x19
 2117 0a52 27010000 		.4byte	.LASF193
 2118 0a56 0B       		.byte	0xb
 2119 0a57 E2       		.byte	0xe2
 2120 0a58 0B070000 		.4byte	0x70b
 2121 0a5c 02       		.byte	0x2
 2122 0a5d 23       		.byte	0x23
 2123 0a5e 58       		.uleb128 0x58
 2124 0a5f 19       		.uleb128 0x19
 2125 0a60 27080000 		.4byte	.LASF194
 2126 0a64 0B       		.byte	0xb
 2127 0a65 E4       		.byte	0xe4
 2128 0a66 00070000 		.4byte	0x700
 2129 0a6a 02       		.byte	0x2
 2130 0a6b 23       		.byte	0x23
 2131 0a6c 5C       		.uleb128 0x5c
 2132 0a6d 19       		.uleb128 0x19
 2133 0a6e 6C050000 		.4byte	.LASF195
 2134 0a72 0B       		.byte	0xb
 2135 0a73 E5       		.byte	0xe5
 2136 0a74 BF020000 		.4byte	0x2bf
 2137 0a78 02       		.byte	0x2
 2138 0a79 23       		.byte	0x23
 2139 0a7a 64       		.uleb128 0x64
 2140 0a7b 00       		.byte	0
 2141 0a7c 1F       		.uleb128 0x1f
 2142 0a7d 01       		.byte	0x1
 2143 0a7e BF020000 		.4byte	0x2bf
ARM GAS  /tmp/ccFmD5nI.s 			page 75


 2144 0a82 9B0A0000 		.4byte	0xa9b
 2145 0a86 20       		.uleb128 0x20
 2146 0a87 9B0A0000 		.4byte	0xa9b
 2147 0a8b 20       		.uleb128 0x20
 2148 0a8c 16070000 		.4byte	0x716
 2149 0a90 20       		.uleb128 0x20
 2150 0a91 18070000 		.4byte	0x718
 2151 0a95 20       		.uleb128 0x20
 2152 0a96 BF020000 		.4byte	0x2bf
 2153 0a9a 00       		.byte	0
 2154 0a9b 14       		.uleb128 0x14
 2155 0a9c 04       		.byte	0x4
 2156 0a9d A60A0000 		.4byte	0xaa6
 2157 0aa1 0A       		.uleb128 0xa
 2158 0aa2 9B0A0000 		.4byte	0xa9b
 2159 0aa6 21       		.uleb128 0x21
 2160 0aa7 69030000 		.4byte	.LASF196
 2161 0aab 2804     		.2byte	0x428
 2162 0aad 0B       		.byte	0xb
 2163 0aae 3902     		.2byte	0x239
 2164 0ab0 040C0000 		.4byte	0xc04
 2165 0ab4 0C       		.uleb128 0xc
 2166 0ab5 FA050000 		.4byte	.LASF197
 2167 0ab9 0B       		.byte	0xb
 2168 0aba 3B02     		.2byte	0x23b
 2169 0abc BF020000 		.4byte	0x2bf
 2170 0ac0 02       		.byte	0x2
 2171 0ac1 23       		.byte	0x23
 2172 0ac2 00       		.uleb128 0
 2173 0ac3 0C       		.uleb128 0xc
 2174 0ac4 F4030000 		.4byte	.LASF198
 2175 0ac8 0B       		.byte	0xb
 2176 0ac9 4002     		.2byte	0x240
 2177 0acb E20C0000 		.4byte	0xce2
 2178 0acf 02       		.byte	0x2
 2179 0ad0 23       		.byte	0x23
 2180 0ad1 04       		.uleb128 0x4
 2181 0ad2 0C       		.uleb128 0xc
 2182 0ad3 85090000 		.4byte	.LASF199
 2183 0ad7 0B       		.byte	0xb
 2184 0ad8 4002     		.2byte	0x240
 2185 0ada E20C0000 		.4byte	0xce2
 2186 0ade 02       		.byte	0x2
 2187 0adf 23       		.byte	0x23
 2188 0ae0 08       		.uleb128 0x8
 2189 0ae1 0C       		.uleb128 0xc
 2190 0ae2 11080000 		.4byte	.LASF200
 2191 0ae6 0B       		.byte	0xb
 2192 0ae7 4002     		.2byte	0x240
 2193 0ae9 E20C0000 		.4byte	0xce2
 2194 0aed 02       		.byte	0x2
 2195 0aee 23       		.byte	0x23
 2196 0aef 0C       		.uleb128 0xc
 2197 0af0 0C       		.uleb128 0xc
 2198 0af1 BD0B0000 		.4byte	.LASF201
 2199 0af5 0B       		.byte	0xb
 2200 0af6 4202     		.2byte	0x242
ARM GAS  /tmp/ccFmD5nI.s 			page 76


 2201 0af8 BF020000 		.4byte	0x2bf
 2202 0afc 02       		.byte	0x2
 2203 0afd 23       		.byte	0x23
 2204 0afe 10       		.uleb128 0x10
 2205 0aff 0C       		.uleb128 0xc
 2206 0b00 A2060000 		.4byte	.LASF202
 2207 0b04 0B       		.byte	0xb
 2208 0b05 4302     		.2byte	0x243
 2209 0b07 FD0E0000 		.4byte	0xefd
 2210 0b0b 02       		.byte	0x2
 2211 0b0c 23       		.byte	0x23
 2212 0b0d 14       		.uleb128 0x14
 2213 0b0e 0C       		.uleb128 0xc
 2214 0b0f 43030000 		.4byte	.LASF203
 2215 0b13 0B       		.byte	0xb
 2216 0b14 4602     		.2byte	0x246
 2217 0b16 BF020000 		.4byte	0x2bf
 2218 0b1a 02       		.byte	0x2
 2219 0b1b 23       		.byte	0x23
 2220 0b1c 30       		.uleb128 0x30
 2221 0b1d 0C       		.uleb128 0xc
 2222 0b1e F90B0000 		.4byte	.LASF204
 2223 0b22 0B       		.byte	0xb
 2224 0b23 4702     		.2byte	0x247
 2225 0b25 130F0000 		.4byte	0xf13
 2226 0b29 02       		.byte	0x2
 2227 0b2a 23       		.byte	0x23
 2228 0b2b 34       		.uleb128 0x34
 2229 0b2c 0C       		.uleb128 0xc
 2230 0b2d 61050000 		.4byte	.LASF205
 2231 0b31 0B       		.byte	0xb
 2232 0b32 4902     		.2byte	0x249
 2233 0b34 BF020000 		.4byte	0x2bf
 2234 0b38 02       		.byte	0x2
 2235 0b39 23       		.byte	0x23
 2236 0b3a 38       		.uleb128 0x38
 2237 0b3b 0C       		.uleb128 0xc
 2238 0b3c 52060000 		.4byte	.LASF206
 2239 0b40 0B       		.byte	0xb
 2240 0b41 4B02     		.2byte	0x24b
 2241 0b43 250F0000 		.4byte	0xf25
 2242 0b47 02       		.byte	0x2
 2243 0b48 23       		.byte	0x23
 2244 0b49 3C       		.uleb128 0x3c
 2245 0b4a 0C       		.uleb128 0xc
 2246 0b4b 270C0000 		.4byte	.LASF207
 2247 0b4f 0B       		.byte	0xb
 2248 0b50 4E02     		.2byte	0x24e
 2249 0b52 94070000 		.4byte	0x794
 2250 0b56 02       		.byte	0x2
 2251 0b57 23       		.byte	0x23
 2252 0b58 40       		.uleb128 0x40
 2253 0b59 0C       		.uleb128 0xc
 2254 0b5a EC010000 		.4byte	.LASF208
 2255 0b5e 0B       		.byte	0xb
 2256 0b5f 4F02     		.2byte	0x24f
 2257 0b61 BF020000 		.4byte	0x2bf
ARM GAS  /tmp/ccFmD5nI.s 			page 77


 2258 0b65 02       		.byte	0x2
 2259 0b66 23       		.byte	0x23
 2260 0b67 44       		.uleb128 0x44
 2261 0b68 0C       		.uleb128 0xc
 2262 0b69 2D050000 		.4byte	.LASF209
 2263 0b6d 0B       		.byte	0xb
 2264 0b6e 5002     		.2byte	0x250
 2265 0b70 94070000 		.4byte	0x794
 2266 0b74 02       		.byte	0x2
 2267 0b75 23       		.byte	0x23
 2268 0b76 48       		.uleb128 0x48
 2269 0b77 0C       		.uleb128 0xc
 2270 0b78 30070000 		.4byte	.LASF210
 2271 0b7c 0B       		.byte	0xb
 2272 0b7d 5102     		.2byte	0x251
 2273 0b7f 2B0F0000 		.4byte	0xf2b
 2274 0b83 02       		.byte	0x2
 2275 0b84 23       		.byte	0x23
 2276 0b85 4C       		.uleb128 0x4c
 2277 0b86 0C       		.uleb128 0xc
 2278 0b87 8A000000 		.4byte	.LASF211
 2279 0b8b 0B       		.byte	0xb
 2280 0b8c 5402     		.2byte	0x254
 2281 0b8e BF020000 		.4byte	0x2bf
 2282 0b92 02       		.byte	0x2
 2283 0b93 23       		.byte	0x23
 2284 0b94 50       		.uleb128 0x50
 2285 0b95 0C       		.uleb128 0xc
 2286 0b96 8C040000 		.4byte	.LASF212
 2287 0b9a 0B       		.byte	0xb
 2288 0b9b 5502     		.2byte	0x255
 2289 0b9d 18070000 		.4byte	0x718
 2290 0ba1 02       		.byte	0x2
 2291 0ba2 23       		.byte	0x23
 2292 0ba3 54       		.uleb128 0x54
 2293 0ba4 0C       		.uleb128 0xc
 2294 0ba5 06080000 		.4byte	.LASF213
 2295 0ba9 0B       		.byte	0xb
 2296 0baa 7802     		.2byte	0x278
 2297 0bac DB0E0000 		.4byte	0xedb
 2298 0bb0 02       		.byte	0x2
 2299 0bb1 23       		.byte	0x23
 2300 0bb2 58       		.uleb128 0x58
 2301 0bb3 0C       		.uleb128 0xc
 2302 0bb4 67080000 		.4byte	.LASF173
 2303 0bb8 0B       		.byte	0xb
 2304 0bb9 7C02     		.2byte	0x27c
 2305 0bbb D5080000 		.4byte	0x8d5
 2306 0bbf 03       		.byte	0x3
 2307 0bc0 23       		.byte	0x23
 2308 0bc1 C802     		.uleb128 0x148
 2309 0bc3 0C       		.uleb128 0xc
 2310 0bc4 70060000 		.4byte	.LASF214
 2311 0bc8 0B       		.byte	0xb
 2312 0bc9 7D02     		.2byte	0x27d
 2313 0bcb 8E080000 		.4byte	0x88e
 2314 0bcf 03       		.byte	0x3
ARM GAS  /tmp/ccFmD5nI.s 			page 78


 2315 0bd0 23       		.byte	0x23
 2316 0bd1 CC02     		.uleb128 0x14c
 2317 0bd3 0C       		.uleb128 0xc
 2318 0bd4 7A040000 		.4byte	.LASF215
 2319 0bd8 0B       		.byte	0xb
 2320 0bd9 8102     		.2byte	0x281
 2321 0bdb 3D0F0000 		.4byte	0xf3d
 2322 0bdf 03       		.byte	0x3
 2323 0be0 23       		.byte	0x23
 2324 0be1 DC05     		.uleb128 0x2dc
 2325 0be3 0C       		.uleb128 0xc
 2326 0be4 04070000 		.4byte	.LASF216
 2327 0be8 0B       		.byte	0xb
 2328 0be9 8602     		.2byte	0x286
 2329 0beb A10C0000 		.4byte	0xca1
 2330 0bef 03       		.byte	0x3
 2331 0bf0 23       		.byte	0x23
 2332 0bf1 E005     		.uleb128 0x2e0
 2333 0bf3 0C       		.uleb128 0xc
 2334 0bf4 63000000 		.4byte	.LASF217
 2335 0bf8 0B       		.byte	0xb
 2336 0bf9 8802     		.2byte	0x288
 2337 0bfb 490F0000 		.4byte	0xf49
 2338 0bff 03       		.byte	0x3
 2339 0c00 23       		.byte	0x23
 2340 0c01 EC05     		.uleb128 0x2ec
 2341 0c03 00       		.byte	0
 2342 0c04 14       		.uleb128 0x14
 2343 0c05 04       		.byte	0x4
 2344 0c06 7C0A0000 		.4byte	0xa7c
 2345 0c0a 1F       		.uleb128 0x1f
 2346 0c0b 01       		.byte	0x1
 2347 0c0c BF020000 		.4byte	0x2bf
 2348 0c10 290C0000 		.4byte	0xc29
 2349 0c14 20       		.uleb128 0x20
 2350 0c15 9B0A0000 		.4byte	0xa9b
 2351 0c19 20       		.uleb128 0x20
 2352 0c1a 16070000 		.4byte	0x716
 2353 0c1e 20       		.uleb128 0x20
 2354 0c1f 290C0000 		.4byte	0xc29
 2355 0c23 20       		.uleb128 0x20
 2356 0c24 BF020000 		.4byte	0x2bf
 2357 0c28 00       		.byte	0
 2358 0c29 14       		.uleb128 0x14
 2359 0c2a 04       		.byte	0x4
 2360 0c2b 25070000 		.4byte	0x725
 2361 0c2f 14       		.uleb128 0x14
 2362 0c30 04       		.byte	0x4
 2363 0c31 0A0C0000 		.4byte	0xc0a
 2364 0c35 1F       		.uleb128 0x1f
 2365 0c36 01       		.byte	0x1
 2366 0c37 95060000 		.4byte	0x695
 2367 0c3b 540C0000 		.4byte	0xc54
 2368 0c3f 20       		.uleb128 0x20
 2369 0c40 9B0A0000 		.4byte	0xa9b
 2370 0c44 20       		.uleb128 0x20
 2371 0c45 16070000 		.4byte	0x716
ARM GAS  /tmp/ccFmD5nI.s 			page 79


 2372 0c49 20       		.uleb128 0x20
 2373 0c4a 95060000 		.4byte	0x695
 2374 0c4e 20       		.uleb128 0x20
 2375 0c4f BF020000 		.4byte	0x2bf
 2376 0c53 00       		.byte	0
 2377 0c54 14       		.uleb128 0x14
 2378 0c55 04       		.byte	0x4
 2379 0c56 350C0000 		.4byte	0xc35
 2380 0c5a 1F       		.uleb128 0x1f
 2381 0c5b 01       		.byte	0x1
 2382 0c5c BF020000 		.4byte	0x2bf
 2383 0c60 6F0C0000 		.4byte	0xc6f
 2384 0c64 20       		.uleb128 0x20
 2385 0c65 9B0A0000 		.4byte	0xa9b
 2386 0c69 20       		.uleb128 0x20
 2387 0c6a 16070000 		.4byte	0x716
 2388 0c6e 00       		.byte	0
 2389 0c6f 14       		.uleb128 0x14
 2390 0c70 04       		.byte	0x4
 2391 0c71 5A0C0000 		.4byte	0xc5a
 2392 0c75 0E       		.uleb128 0xe
 2393 0c76 78020000 		.4byte	0x278
 2394 0c7a 850C0000 		.4byte	0xc85
 2395 0c7e 0F       		.uleb128 0xf
 2396 0c7f 25000000 		.4byte	0x25
 2397 0c83 02       		.byte	0x2
 2398 0c84 00       		.byte	0
 2399 0c85 0E       		.uleb128 0xe
 2400 0c86 78020000 		.4byte	0x278
 2401 0c8a 950C0000 		.4byte	0xc95
 2402 0c8e 0F       		.uleb128 0xf
 2403 0c8f 25000000 		.4byte	0x25
 2404 0c93 00       		.byte	0
 2405 0c94 00       		.byte	0
 2406 0c95 06       		.uleb128 0x6
 2407 0c96 110A0000 		.4byte	.LASF218
 2408 0c9a 0B       		.byte	0xb
 2409 0c9b 1F01     		.2byte	0x11f
 2410 0c9d 22090000 		.4byte	0x922
 2411 0ca1 22       		.uleb128 0x22
 2412 0ca2 40070000 		.4byte	.LASF219
 2413 0ca6 0C       		.byte	0xc
 2414 0ca7 0B       		.byte	0xb
 2415 0ca8 2301     		.2byte	0x123
 2416 0caa DC0C0000 		.4byte	0xcdc
 2417 0cae 0C       		.uleb128 0xc
 2418 0caf 520A0000 		.4byte	.LASF153
 2419 0cb3 0B       		.byte	0xb
 2420 0cb4 2501     		.2byte	0x125
 2421 0cb6 DC0C0000 		.4byte	0xcdc
 2422 0cba 02       		.byte	0x2
 2423 0cbb 23       		.byte	0x23
 2424 0cbc 00       		.uleb128 0
 2425 0cbd 0C       		.uleb128 0xc
 2426 0cbe ED060000 		.4byte	.LASF220
 2427 0cc2 0B       		.byte	0xb
 2428 0cc3 2601     		.2byte	0x126
ARM GAS  /tmp/ccFmD5nI.s 			page 80


 2429 0cc5 BF020000 		.4byte	0x2bf
 2430 0cc9 02       		.byte	0x2
 2431 0cca 23       		.byte	0x23
 2432 0ccb 04       		.uleb128 0x4
 2433 0ccc 0C       		.uleb128 0xc
 2434 0ccd 3A070000 		.4byte	.LASF221
 2435 0cd1 0B       		.byte	0xb
 2436 0cd2 2701     		.2byte	0x127
 2437 0cd4 E20C0000 		.4byte	0xce2
 2438 0cd8 02       		.byte	0x2
 2439 0cd9 23       		.byte	0x23
 2440 0cda 08       		.uleb128 0x8
 2441 0cdb 00       		.byte	0
 2442 0cdc 14       		.uleb128 0x14
 2443 0cdd 04       		.byte	0x4
 2444 0cde A10C0000 		.4byte	0xca1
 2445 0ce2 14       		.uleb128 0x14
 2446 0ce3 04       		.byte	0x4
 2447 0ce4 950C0000 		.4byte	0xc95
 2448 0ce8 22       		.uleb128 0x22
 2449 0ce9 64090000 		.4byte	.LASF222
 2450 0ced 0E       		.byte	0xe
 2451 0cee 0B       		.byte	0xb
 2452 0cef 3F01     		.2byte	0x13f
 2453 0cf1 230D0000 		.4byte	0xd23
 2454 0cf5 0C       		.uleb128 0xc
 2455 0cf6 C3080000 		.4byte	.LASF223
 2456 0cfa 0B       		.byte	0xb
 2457 0cfb 4001     		.2byte	0x140
 2458 0cfd 230D0000 		.4byte	0xd23
 2459 0d01 02       		.byte	0x2
 2460 0d02 23       		.byte	0x23
 2461 0d03 00       		.uleb128 0
 2462 0d04 0C       		.uleb128 0xc
 2463 0d05 2D010000 		.4byte	.LASF224
 2464 0d09 0B       		.byte	0xb
 2465 0d0a 4101     		.2byte	0x141
 2466 0d0c 230D0000 		.4byte	0xd23
 2467 0d10 02       		.byte	0x2
 2468 0d11 23       		.byte	0x23
 2469 0d12 06       		.uleb128 0x6
 2470 0d13 0C       		.uleb128 0xc
 2471 0d14 660C0000 		.4byte	.LASF225
 2472 0d18 0B       		.byte	0xb
 2473 0d19 4201     		.2byte	0x142
 2474 0d1b 86020000 		.4byte	0x286
 2475 0d1f 02       		.byte	0x2
 2476 0d20 23       		.byte	0x23
 2477 0d21 0C       		.uleb128 0xc
 2478 0d22 00       		.byte	0
 2479 0d23 0E       		.uleb128 0xe
 2480 0d24 86020000 		.4byte	0x286
 2481 0d28 330D0000 		.4byte	0xd33
 2482 0d2c 0F       		.uleb128 0xf
 2483 0d2d 25000000 		.4byte	0x25
 2484 0d31 02       		.byte	0x2
 2485 0d32 00       		.byte	0
ARM GAS  /tmp/ccFmD5nI.s 			page 81


 2486 0d33 11       		.uleb128 0x11
 2487 0d34 D0       		.byte	0xd0
 2488 0d35 0B       		.byte	0xb
 2489 0d36 5902     		.2byte	0x259
 2490 0d38 630E0000 		.4byte	0xe63
 2491 0d3c 0C       		.uleb128 0xc
 2492 0d3d B4020000 		.4byte	.LASF226
 2493 0d41 0B       		.byte	0xb
 2494 0d42 5B02     		.2byte	0x25b
 2495 0d44 25000000 		.4byte	0x25
 2496 0d48 02       		.byte	0x2
 2497 0d49 23       		.byte	0x23
 2498 0d4a 00       		.uleb128 0
 2499 0d4b 0C       		.uleb128 0xc
 2500 0d4c DE090000 		.4byte	.LASF227
 2501 0d50 0B       		.byte	0xb
 2502 0d51 5C02     		.2byte	0x25c
 2503 0d53 18070000 		.4byte	0x718
 2504 0d57 02       		.byte	0x2
 2505 0d58 23       		.byte	0x23
 2506 0d59 04       		.uleb128 0x4
 2507 0d5a 0C       		.uleb128 0xc
 2508 0d5b 7D000000 		.4byte	.LASF228
 2509 0d5f 0B       		.byte	0xb
 2510 0d60 5D02     		.2byte	0x25d
 2511 0d62 630E0000 		.4byte	0xe63
 2512 0d66 02       		.byte	0x2
 2513 0d67 23       		.byte	0x23
 2514 0d68 08       		.uleb128 0x8
 2515 0d69 0C       		.uleb128 0xc
 2516 0d6a 21020000 		.4byte	.LASF229
 2517 0d6e 0B       		.byte	0xb
 2518 0d6f 5E02     		.2byte	0x25e
 2519 0d71 AA070000 		.4byte	0x7aa
 2520 0d75 02       		.byte	0x2
 2521 0d76 23       		.byte	0x23
 2522 0d77 24       		.uleb128 0x24
 2523 0d78 0C       		.uleb128 0xc
 2524 0d79 21070000 		.4byte	.LASF230
 2525 0d7d 0B       		.byte	0xb
 2526 0d7e 5F02     		.2byte	0x25f
 2527 0d80 BF020000 		.4byte	0x2bf
 2528 0d84 02       		.byte	0x2
 2529 0d85 23       		.byte	0x23
 2530 0d86 48       		.uleb128 0x48
 2531 0d87 0C       		.uleb128 0xc
 2532 0d88 35080000 		.4byte	.LASF231
 2533 0d8c 0B       		.byte	0xb
 2534 0d8d 6002     		.2byte	0x260
 2535 0d8f B8020000 		.4byte	0x2b8
 2536 0d93 02       		.byte	0x2
 2537 0d94 23       		.byte	0x23
 2538 0d95 50       		.uleb128 0x50
 2539 0d96 0C       		.uleb128 0xc
 2540 0d97 230A0000 		.4byte	.LASF232
 2541 0d9b 0B       		.byte	0xb
 2542 0d9c 6102     		.2byte	0x261
ARM GAS  /tmp/ccFmD5nI.s 			page 82


 2543 0d9e E80C0000 		.4byte	0xce8
 2544 0da2 02       		.byte	0x2
 2545 0da3 23       		.byte	0x23
 2546 0da4 58       		.uleb128 0x58
 2547 0da5 0C       		.uleb128 0xc
 2548 0da6 0D0B0000 		.4byte	.LASF233
 2549 0daa 0B       		.byte	0xb
 2550 0dab 6202     		.2byte	0x262
 2551 0dad 00070000 		.4byte	0x700
 2552 0db1 02       		.byte	0x2
 2553 0db2 23       		.byte	0x23
 2554 0db3 68       		.uleb128 0x68
 2555 0db4 0C       		.uleb128 0xc
 2556 0db5 AD060000 		.4byte	.LASF234
 2557 0db9 0B       		.byte	0xb
 2558 0dba 6302     		.2byte	0x263
 2559 0dbc 00070000 		.4byte	0x700
 2560 0dc0 02       		.byte	0x2
 2561 0dc1 23       		.byte	0x23
 2562 0dc2 70       		.uleb128 0x70
 2563 0dc3 0C       		.uleb128 0xc
 2564 0dc4 19080000 		.4byte	.LASF235
 2565 0dc8 0B       		.byte	0xb
 2566 0dc9 6402     		.2byte	0x264
 2567 0dcb 00070000 		.4byte	0x700
 2568 0dcf 02       		.byte	0x2
 2569 0dd0 23       		.byte	0x23
 2570 0dd1 78       		.uleb128 0x78
 2571 0dd2 0C       		.uleb128 0xc
 2572 0dd3 D1000000 		.4byte	.LASF236
 2573 0dd7 0B       		.byte	0xb
 2574 0dd8 6502     		.2byte	0x265
 2575 0dda 730E0000 		.4byte	0xe73
 2576 0dde 03       		.byte	0x3
 2577 0ddf 23       		.byte	0x23
 2578 0de0 8001     		.uleb128 0x80
 2579 0de2 0C       		.uleb128 0xc
 2580 0de3 01060000 		.4byte	.LASF237
 2581 0de7 0B       		.byte	0xb
 2582 0de8 6602     		.2byte	0x266
 2583 0dea 830E0000 		.4byte	0xe83
 2584 0dee 03       		.byte	0x3
 2585 0def 23       		.byte	0x23
 2586 0df0 8801     		.uleb128 0x88
 2587 0df2 0C       		.uleb128 0xc
 2588 0df3 BB0D0000 		.4byte	.LASF238
 2589 0df7 0B       		.byte	0xb
 2590 0df8 6702     		.2byte	0x267
 2591 0dfa BF020000 		.4byte	0x2bf
 2592 0dfe 03       		.byte	0x3
 2593 0dff 23       		.byte	0x23
 2594 0e00 A001     		.uleb128 0xa0
 2595 0e02 0C       		.uleb128 0xc
 2596 0e03 C9010000 		.4byte	.LASF239
 2597 0e07 0B       		.byte	0xb
 2598 0e08 6802     		.2byte	0x268
 2599 0e0a 00070000 		.4byte	0x700
ARM GAS  /tmp/ccFmD5nI.s 			page 83


 2600 0e0e 03       		.byte	0x3
 2601 0e0f 23       		.byte	0x23
 2602 0e10 A401     		.uleb128 0xa4
 2603 0e12 0C       		.uleb128 0xc
 2604 0e13 F4090000 		.4byte	.LASF240
 2605 0e17 0B       		.byte	0xb
 2606 0e18 6902     		.2byte	0x269
 2607 0e1a 00070000 		.4byte	0x700
 2608 0e1e 03       		.byte	0x3
 2609 0e1f 23       		.byte	0x23
 2610 0e20 AC01     		.uleb128 0xac
 2611 0e22 0C       		.uleb128 0xc
 2612 0e23 C70C0000 		.4byte	.LASF241
 2613 0e27 0B       		.byte	0xb
 2614 0e28 6A02     		.2byte	0x26a
 2615 0e2a 00070000 		.4byte	0x700
 2616 0e2e 03       		.byte	0x3
 2617 0e2f 23       		.byte	0x23
 2618 0e30 B401     		.uleb128 0xb4
 2619 0e32 0C       		.uleb128 0xc
 2620 0e33 D8070000 		.4byte	.LASF242
 2621 0e37 0B       		.byte	0xb
 2622 0e38 6B02     		.2byte	0x26b
 2623 0e3a 00070000 		.4byte	0x700
 2624 0e3e 03       		.byte	0x3
 2625 0e3f 23       		.byte	0x23
 2626 0e40 BC01     		.uleb128 0xbc
 2627 0e42 0C       		.uleb128 0xc
 2628 0e43 9F000000 		.4byte	.LASF243
 2629 0e47 0B       		.byte	0xb
 2630 0e48 6C02     		.2byte	0x26c
 2631 0e4a 00070000 		.4byte	0x700
 2632 0e4e 03       		.byte	0x3
 2633 0e4f 23       		.byte	0x23
 2634 0e50 C401     		.uleb128 0xc4
 2635 0e52 0C       		.uleb128 0xc
 2636 0e53 B5070000 		.4byte	.LASF244
 2637 0e57 0B       		.byte	0xb
 2638 0e58 6D02     		.2byte	0x26d
 2639 0e5a BF020000 		.4byte	0x2bf
 2640 0e5e 03       		.byte	0x3
 2641 0e5f 23       		.byte	0x23
 2642 0e60 CC01     		.uleb128 0xcc
 2643 0e62 00       		.byte	0
 2644 0e63 0E       		.uleb128 0xe
 2645 0e64 1E070000 		.4byte	0x71e
 2646 0e68 730E0000 		.4byte	0xe73
 2647 0e6c 0F       		.uleb128 0xf
 2648 0e6d 25000000 		.4byte	0x25
 2649 0e71 19       		.byte	0x19
 2650 0e72 00       		.byte	0
 2651 0e73 0E       		.uleb128 0xe
 2652 0e74 1E070000 		.4byte	0x71e
 2653 0e78 830E0000 		.4byte	0xe83
 2654 0e7c 0F       		.uleb128 0xf
 2655 0e7d 25000000 		.4byte	0x25
 2656 0e81 07       		.byte	0x7
ARM GAS  /tmp/ccFmD5nI.s 			page 84


 2657 0e82 00       		.byte	0
 2658 0e83 0E       		.uleb128 0xe
 2659 0e84 1E070000 		.4byte	0x71e
 2660 0e88 930E0000 		.4byte	0xe93
 2661 0e8c 0F       		.uleb128 0xf
 2662 0e8d 25000000 		.4byte	0x25
 2663 0e91 17       		.byte	0x17
 2664 0e92 00       		.byte	0
 2665 0e93 11       		.uleb128 0x11
 2666 0e94 F0       		.byte	0xf0
 2667 0e95 0B       		.byte	0xb
 2668 0e96 7202     		.2byte	0x272
 2669 0e98 BB0E0000 		.4byte	0xebb
 2670 0e9c 0C       		.uleb128 0xc
 2671 0e9d DE0B0000 		.4byte	.LASF245
 2672 0ea1 0B       		.byte	0xb
 2673 0ea2 7502     		.2byte	0x275
 2674 0ea4 BB0E0000 		.4byte	0xebb
 2675 0ea8 02       		.byte	0x2
 2676 0ea9 23       		.byte	0x23
 2677 0eaa 00       		.uleb128 0
 2678 0eab 0C       		.uleb128 0xc
 2679 0eac 0C070000 		.4byte	.LASF246
 2680 0eb0 0B       		.byte	0xb
 2681 0eb1 7602     		.2byte	0x276
 2682 0eb3 CB0E0000 		.4byte	0xecb
 2683 0eb7 02       		.byte	0x2
 2684 0eb8 23       		.byte	0x23
 2685 0eb9 78       		.uleb128 0x78
 2686 0eba 00       		.byte	0
 2687 0ebb 0E       		.uleb128 0xe
 2688 0ebc 1C090000 		.4byte	0x91c
 2689 0ec0 CB0E0000 		.4byte	0xecb
 2690 0ec4 0F       		.uleb128 0xf
 2691 0ec5 25000000 		.4byte	0x25
 2692 0ec9 1D       		.byte	0x1d
 2693 0eca 00       		.byte	0
 2694 0ecb 0E       		.uleb128 0xe
 2695 0ecc 25000000 		.4byte	0x25
 2696 0ed0 DB0E0000 		.4byte	0xedb
 2697 0ed4 0F       		.uleb128 0xf
 2698 0ed5 25000000 		.4byte	0x25
 2699 0ed9 1D       		.byte	0x1d
 2700 0eda 00       		.byte	0
 2701 0edb 23       		.uleb128 0x23
 2702 0edc F0       		.byte	0xf0
 2703 0edd 0B       		.byte	0xb
 2704 0ede 5702     		.2byte	0x257
 2705 0ee0 FD0E0000 		.4byte	0xefd
 2706 0ee4 24       		.uleb128 0x24
 2707 0ee5 69030000 		.4byte	.LASF196
 2708 0ee9 0B       		.byte	0xb
 2709 0eea 6E02     		.2byte	0x26e
 2710 0eec 330D0000 		.4byte	0xd33
 2711 0ef0 24       		.uleb128 0x24
 2712 0ef1 92000000 		.4byte	.LASF247
 2713 0ef5 0B       		.byte	0xb
ARM GAS  /tmp/ccFmD5nI.s 			page 85


 2714 0ef6 7702     		.2byte	0x277
 2715 0ef8 930E0000 		.4byte	0xe93
 2716 0efc 00       		.byte	0
 2717 0efd 0E       		.uleb128 0xe
 2718 0efe 1E070000 		.4byte	0x71e
 2719 0f02 0D0F0000 		.4byte	0xf0d
 2720 0f06 0F       		.uleb128 0xf
 2721 0f07 25000000 		.4byte	0x25
 2722 0f0b 18       		.byte	0x18
 2723 0f0c 00       		.byte	0
 2724 0f0d 15       		.uleb128 0x15
 2725 0f0e 50000000 		.4byte	.LASF249
 2726 0f12 01       		.byte	0x1
 2727 0f13 14       		.uleb128 0x14
 2728 0f14 04       		.byte	0x4
 2729 0f15 0D0F0000 		.4byte	0xf0d
 2730 0f19 25       		.uleb128 0x25
 2731 0f1a 01       		.byte	0x1
 2732 0f1b 250F0000 		.4byte	0xf25
 2733 0f1f 20       		.uleb128 0x20
 2734 0f20 9B0A0000 		.4byte	0xa9b
 2735 0f24 00       		.byte	0
 2736 0f25 14       		.uleb128 0x14
 2737 0f26 04       		.byte	0x4
 2738 0f27 190F0000 		.4byte	0xf19
 2739 0f2b 14       		.uleb128 0x14
 2740 0f2c 04       		.byte	0x4
 2741 0f2d 94070000 		.4byte	0x794
 2742 0f31 25       		.uleb128 0x25
 2743 0f32 01       		.byte	0x1
 2744 0f33 3D0F0000 		.4byte	0xf3d
 2745 0f37 20       		.uleb128 0x20
 2746 0f38 BF020000 		.4byte	0x2bf
 2747 0f3c 00       		.byte	0
 2748 0f3d 14       		.uleb128 0x14
 2749 0f3e 04       		.byte	0x4
 2750 0f3f 430F0000 		.4byte	0xf43
 2751 0f43 14       		.uleb128 0x14
 2752 0f44 04       		.byte	0x4
 2753 0f45 310F0000 		.4byte	0xf31
 2754 0f49 0E       		.uleb128 0xe
 2755 0f4a 950C0000 		.4byte	0xc95
 2756 0f4e 590F0000 		.4byte	0xf59
 2757 0f52 0F       		.uleb128 0xf
 2758 0f53 25000000 		.4byte	0x25
 2759 0f57 02       		.byte	0x2
 2760 0f58 00       		.byte	0
 2761 0f59 12       		.uleb128 0x12
 2762 0f5a E0010000 		.4byte	.LASF250
 2763 0f5e 0B       		.byte	0xb
 2764 0f5f 0703     		.2byte	0x307
 2765 0f61 9B0A0000 		.4byte	0xa9b
 2766 0f65 01       		.byte	0x1
 2767 0f66 01       		.byte	0x1
 2768 0f67 12       		.uleb128 0x12
 2769 0f68 70030000 		.4byte	.LASF251
 2770 0f6c 0B       		.byte	0xb
ARM GAS  /tmp/ccFmD5nI.s 			page 86


 2771 0f6d 0803     		.2byte	0x308
 2772 0f6f A10A0000 		.4byte	0xaa1
 2773 0f73 01       		.byte	0x1
 2774 0f74 01       		.byte	0x1
 2775 0f75 13       		.uleb128 0x13
 2776 0f76 580B0000 		.4byte	.LASF252
 2777 0f7a 0C       		.byte	0xc
 2778 0f7b 63       		.byte	0x63
 2779 0f7c 18070000 		.4byte	0x718
 2780 0f80 01       		.byte	0x1
 2781 0f81 01       		.byte	0x1
 2782 0f82 18       		.uleb128 0x18
 2783 0f83 18       		.byte	0x18
 2784 0f84 0D       		.byte	0xd
 2785 0f85 A8       		.byte	0xa8
 2786 0f86 DF0F0000 		.4byte	0xfdf
 2787 0f8a 1C       		.uleb128 0x1c
 2788 0f8b 41525200 		.ascii	"ARR\000"
 2789 0f8f 0D       		.byte	0xd
 2790 0f90 A9       		.byte	0xa9
 2791 0f91 E6020000 		.4byte	0x2e6
 2792 0f95 02       		.byte	0x2
 2793 0f96 23       		.byte	0x23
 2794 0f97 00       		.uleb128 0
 2795 0f98 19       		.uleb128 0x19
 2796 0f99 A8090000 		.4byte	.LASF253
 2797 0f9d 0D       		.byte	0xd
 2798 0f9e AA       		.byte	0xaa
 2799 0f9f E6020000 		.4byte	0x2e6
 2800 0fa3 02       		.byte	0x2
 2801 0fa4 23       		.byte	0x23
 2802 0fa5 04       		.uleb128 0x4
 2803 0fa6 1C       		.uleb128 0x1c
 2804 0fa7 434E5400 		.ascii	"CNT\000"
 2805 0fab 0D       		.byte	0xd
 2806 0fac AB       		.byte	0xab
 2807 0fad E6020000 		.4byte	0x2e6
 2808 0fb1 02       		.byte	0x2
 2809 0fb2 23       		.byte	0x23
 2810 0fb3 08       		.uleb128 0x8
 2811 0fb4 19       		.uleb128 0x19
 2812 0fb5 02020000 		.4byte	.LASF254
 2813 0fb9 0D       		.byte	0xd
 2814 0fba AC       		.byte	0xac
 2815 0fbb C6020000 		.4byte	0x2c6
 2816 0fbf 02       		.byte	0x2
 2817 0fc0 23       		.byte	0x23
 2818 0fc1 0C       		.uleb128 0xc
 2819 0fc2 19       		.uleb128 0x19
 2820 0fc3 0D060000 		.4byte	.LASF255
 2821 0fc7 0D       		.byte	0xd
 2822 0fc8 AD       		.byte	0xad
 2823 0fc9 EB0F0000 		.4byte	0xfeb
 2824 0fcd 02       		.byte	0x2
 2825 0fce 23       		.byte	0x23
 2826 0fcf 10       		.uleb128 0x10
 2827 0fd0 19       		.uleb128 0x19
ARM GAS  /tmp/ccFmD5nI.s 			page 87


 2828 0fd1 6C090000 		.4byte	.LASF256
 2829 0fd5 0D       		.byte	0xd
 2830 0fd6 AE       		.byte	0xae
 2831 0fd7 16070000 		.4byte	0x716
 2832 0fdb 02       		.byte	0x2
 2833 0fdc 23       		.byte	0x23
 2834 0fdd 14       		.uleb128 0x14
 2835 0fde 00       		.byte	0
 2836 0fdf 25       		.uleb128 0x25
 2837 0fe0 01       		.byte	0x1
 2838 0fe1 EB0F0000 		.4byte	0xfeb
 2839 0fe5 20       		.uleb128 0x20
 2840 0fe6 16070000 		.4byte	0x716
 2841 0fea 00       		.byte	0
 2842 0feb 14       		.uleb128 0x14
 2843 0fec 04       		.byte	0x4
 2844 0fed DF0F0000 		.4byte	0xfdf
 2845 0ff1 07       		.uleb128 0x7
 2846 0ff2 E80A0000 		.4byte	.LASF257
 2847 0ff6 0D       		.byte	0xd
 2848 0ff7 AF       		.byte	0xaf
 2849 0ff8 820F0000 		.4byte	0xf82
 2850 0ffc 13       		.uleb128 0x13
 2851 0ffd 83030000 		.4byte	.LASF258
 2852 1001 0D       		.byte	0xd
 2853 1002 DB       		.byte	0xdb
 2854 1003 F1020000 		.4byte	0x2f1
 2855 1007 01       		.byte	0x1
 2856 1008 01       		.byte	0x1
 2857 1009 13       		.uleb128 0x13
 2858 100a 22000000 		.4byte	.LASF259
 2859 100e 0D       		.byte	0xd
 2860 100f DC       		.byte	0xdc
 2861 1010 F1020000 		.4byte	0x2f1
 2862 1014 01       		.byte	0x1
 2863 1015 01       		.byte	0x1
 2864 1016 13       		.uleb128 0x13
 2865 1017 00040000 		.4byte	.LASF260
 2866 101b 0D       		.byte	0xd
 2867 101c DD       		.byte	0xdd
 2868 101d F1020000 		.4byte	0x2f1
 2869 1021 01       		.byte	0x1
 2870 1022 01       		.byte	0x1
 2871 1023 26       		.uleb128 0x26
 2872 1024 99090000 		.4byte	.LASF261
 2873 1028 01       		.byte	0x1
 2874 1029 15       		.byte	0x15
 2875 102a F1020000 		.4byte	0x2f1
 2876 102e 01       		.byte	0x1
 2877 102f 05       		.byte	0x5
 2878 1030 03       		.byte	0x3
 2879 1031 00000000 		.4byte	TM_TimingDelay
 2880 1035 27       		.uleb128 0x27
 2881 1036 FC0F0000 		.4byte	0xffc
 2882 103a 01       		.byte	0x1
 2883 103b 16       		.byte	0x16
 2884 103c 05       		.byte	0x5
ARM GAS  /tmp/ccFmD5nI.s 			page 88


 2885 103d 03       		.byte	0x3
 2886 103e 00000000 		.4byte	TM_Time
 2887 1042 27       		.uleb128 0x27
 2888 1043 09100000 		.4byte	0x1009
 2889 1047 01       		.byte	0x1
 2890 1048 17       		.byte	0x17
 2891 1049 05       		.byte	0x5
 2892 104a 03       		.byte	0x3
 2893 104b 00000000 		.4byte	TM_Time2
 2894 104f 27       		.uleb128 0x27
 2895 1050 16100000 		.4byte	0x1016
 2896 1054 01       		.byte	0x1
 2897 1055 18       		.byte	0x18
 2898 1056 05       		.byte	0x5
 2899 1057 03       		.byte	0x3
 2900 1058 00000000 		.4byte	mult
 2901 105c 26       		.uleb128 0x26
 2902 105d F1070000 		.4byte	.LASF262
 2903 1061 01       		.byte	0x1
 2904 1062 19       		.byte	0x19
 2905 1063 C6020000 		.4byte	0x2c6
 2906 1067 01       		.byte	0x1
 2907 1068 05       		.byte	0x5
 2908 1069 03       		.byte	0x3
 2909 106a 00000000 		.4byte	TM_DELAY_Initialized
 2910 106e 18       		.uleb128 0x18
 2911 106f 18       		.byte	0x18
 2912 1070 01       		.byte	0x1
 2913 1071 1C       		.byte	0x1c
 2914 1072 93100000 		.4byte	0x1093
 2915 1076 19       		.uleb128 0x19
 2916 1077 F4060000 		.4byte	.LASF263
 2917 107b 01       		.byte	0x1
 2918 107c 1D       		.byte	0x1d
 2919 107d C6020000 		.4byte	0x2c6
 2920 1081 02       		.byte	0x2
 2921 1082 23       		.byte	0x23
 2922 1083 00       		.uleb128 0
 2923 1084 19       		.uleb128 0x19
 2924 1085 0A020000 		.4byte	.LASF264
 2925 1089 01       		.byte	0x1
 2926 108a 1E       		.byte	0x1e
 2927 108b 93100000 		.4byte	0x1093
 2928 108f 02       		.byte	0x2
 2929 1090 23       		.byte	0x23
 2930 1091 04       		.uleb128 0x4
 2931 1092 00       		.byte	0
 2932 1093 0E       		.uleb128 0xe
 2933 1094 A3100000 		.4byte	0x10a3
 2934 1098 A3100000 		.4byte	0x10a3
 2935 109c 0F       		.uleb128 0xf
 2936 109d 25000000 		.4byte	0x25
 2937 10a1 04       		.byte	0x4
 2938 10a2 00       		.byte	0
 2939 10a3 14       		.uleb128 0x14
 2940 10a4 04       		.byte	0x4
 2941 10a5 F10F0000 		.4byte	0xff1
ARM GAS  /tmp/ccFmD5nI.s 			page 89


 2942 10a9 07       		.uleb128 0x7
 2943 10aa 74070000 		.4byte	.LASF265
 2944 10ae 01       		.byte	0x1
 2945 10af 1F       		.byte	0x1f
 2946 10b0 6E100000 		.4byte	0x106e
 2947 10b4 28       		.uleb128 0x28
 2948 10b5 870B0000 		.4byte	.LASF273
 2949 10b9 01       		.byte	0x1
 2950 10ba 22       		.byte	0x22
 2951 10bb A9100000 		.4byte	0x10a9
 2952 10bf 05       		.byte	0x5
 2953 10c0 03       		.byte	0x3
 2954 10c1 08000000 		.4byte	CustomTimers
 2955 10c5 29       		.uleb128 0x29
 2956 10c6 01       		.byte	0x1
 2957 10c7 AB010000 		.4byte	.LASF268
 2958 10cb 01       		.byte	0x1
 2959 10cc 1F01     		.2byte	0x11f
 2960 10ce 01       		.byte	0x1
 2961 10cf A3100000 		.4byte	0x10a3
 2962 10d3 8A010000 		.4byte	.LFB122
 2963 10d7 8E010000 		.4byte	.LFE122
 2964 10db 02       		.byte	0x2
 2965 10dc 7D       		.byte	0x7d
 2966 10dd 00       		.sleb128 0
 2967 10de 01       		.byte	0x1
 2968 10df 00110000 		.4byte	0x1100
 2969 10e3 2A       		.uleb128 0x2a
 2970 10e4 880C0000 		.4byte	.LASF266
 2971 10e8 01       		.byte	0x1
 2972 10e9 1F01     		.2byte	0x11f
 2973 10eb A3100000 		.4byte	0x10a3
 2974 10ef 01       		.byte	0x1
 2975 10f0 50       		.byte	0x50
 2976 10f1 2A       		.uleb128 0x2a
 2977 10f2 3D0C0000 		.4byte	.LASF267
 2978 10f6 01       		.byte	0x1
 2979 10f7 1F01     		.2byte	0x11f
 2980 10f9 E6020000 		.4byte	0x2e6
 2981 10fd 01       		.byte	0x1
 2982 10fe 51       		.byte	0x51
 2983 10ff 00       		.byte	0
 2984 1100 29       		.uleb128 0x29
 2985 1101 01       		.byte	0x1
 2986 1102 D5020000 		.4byte	.LASF269
 2987 1106 01       		.byte	0x1
 2988 1107 1701     		.2byte	0x117
 2989 1109 01       		.byte	0x1
 2990 110a A3100000 		.4byte	0x10a3
 2991 110e 86010000 		.4byte	.LFB121
 2992 1112 8A010000 		.4byte	.LFE121
 2993 1116 02       		.byte	0x2
 2994 1117 7D       		.byte	0x7d
 2995 1118 00       		.sleb128 0
 2996 1119 01       		.byte	0x1
 2997 111a 3B110000 		.4byte	0x113b
 2998 111e 2A       		.uleb128 0x2a
ARM GAS  /tmp/ccFmD5nI.s 			page 90


 2999 111f 880C0000 		.4byte	.LASF266
 3000 1123 01       		.byte	0x1
 3001 1124 1701     		.2byte	0x117
 3002 1126 A3100000 		.4byte	0x10a3
 3003 112a 01       		.byte	0x1
 3004 112b 50       		.byte	0x50
 3005 112c 2A       		.uleb128 0x2a
 3006 112d A8090000 		.4byte	.LASF253
 3007 1131 01       		.byte	0x1
 3008 1132 1701     		.2byte	0x117
 3009 1134 C6020000 		.4byte	0x2c6
 3010 1138 01       		.byte	0x1
 3011 1139 51       		.byte	0x51
 3012 113a 00       		.byte	0
 3013 113b 29       		.uleb128 0x29
 3014 113c 01       		.byte	0x1
 3015 113d 05040000 		.4byte	.LASF270
 3016 1141 01       		.byte	0x1
 3017 1142 0F01     		.2byte	0x10f
 3018 1144 01       		.byte	0x1
 3019 1145 A3100000 		.4byte	0x10a3
 3020 1149 80010000 		.4byte	.LFB120
 3021 114d 86010000 		.4byte	.LFE120
 3022 1151 02       		.byte	0x2
 3023 1152 7D       		.byte	0x7d
 3024 1153 00       		.sleb128 0
 3025 1154 01       		.byte	0x1
 3026 1155 68110000 		.4byte	0x1168
 3027 1159 2A       		.uleb128 0x2a
 3028 115a 880C0000 		.4byte	.LASF266
 3029 115e 01       		.byte	0x1
 3030 115f 0F01     		.2byte	0x10f
 3031 1161 A3100000 		.4byte	0x10a3
 3032 1165 01       		.byte	0x1
 3033 1166 50       		.byte	0x50
 3034 1167 00       		.byte	0
 3035 1168 29       		.uleb128 0x29
 3036 1169 01       		.byte	0x1
 3037 116a 55070000 		.4byte	.LASF271
 3038 116e 01       		.byte	0x1
 3039 116f 0701     		.2byte	0x107
 3040 1171 01       		.byte	0x1
 3041 1172 A3100000 		.4byte	0x10a3
 3042 1176 7A010000 		.4byte	.LFB119
 3043 117a 80010000 		.4byte	.LFE119
 3044 117e 02       		.byte	0x2
 3045 117f 7D       		.byte	0x7d
 3046 1180 00       		.sleb128 0
 3047 1181 01       		.byte	0x1
 3048 1182 95110000 		.4byte	0x1195
 3049 1186 2A       		.uleb128 0x2a
 3050 1187 880C0000 		.4byte	.LASF266
 3051 118b 01       		.byte	0x1
 3052 118c 0701     		.2byte	0x107
 3053 118e A3100000 		.4byte	0x10a3
 3054 1192 01       		.byte	0x1
 3055 1193 50       		.byte	0x50
ARM GAS  /tmp/ccFmD5nI.s 			page 91


 3056 1194 00       		.byte	0
 3057 1195 2B       		.uleb128 0x2b
 3058 1196 01       		.byte	0x1
 3059 1197 9C0A0000 		.4byte	.LASF272
 3060 119b 01       		.byte	0x1
 3061 119c FF       		.byte	0xff
 3062 119d 01       		.byte	0x1
 3063 119e A3100000 		.4byte	0x10a3
 3064 11a2 74010000 		.4byte	.LFB118
 3065 11a6 7A010000 		.4byte	.LFE118
 3066 11aa 02       		.byte	0x2
 3067 11ab 7D       		.byte	0x7d
 3068 11ac 00       		.sleb128 0
 3069 11ad 01       		.byte	0x1
 3070 11ae C0110000 		.4byte	0x11c0
 3071 11b2 2C       		.uleb128 0x2c
 3072 11b3 880C0000 		.4byte	.LASF266
 3073 11b7 01       		.byte	0x1
 3074 11b8 FF       		.byte	0xff
 3075 11b9 A3100000 		.4byte	0x10a3
 3076 11bd 01       		.byte	0x1
 3077 11be 50       		.byte	0x50
 3078 11bf 00       		.byte	0
 3079 11c0 2D       		.uleb128 0x2d
 3080 11c1 01       		.byte	0x1
 3081 11c2 D30A0000 		.4byte	.LASF280
 3082 11c6 01       		.byte	0x1
 3083 11c7 D3       		.byte	0xd3
 3084 11c8 01       		.byte	0x1
 3085 11c9 14010000 		.4byte	.LFB117
 3086 11cd 74010000 		.4byte	.LFE117
 3087 11d1 00000000 		.4byte	.LLST12
 3088 11d5 01       		.byte	0x1
 3089 11d6 5E120000 		.4byte	0x125e
 3090 11da 2E       		.uleb128 0x2e
 3091 11db 880C0000 		.4byte	.LASF266
 3092 11df 01       		.byte	0x1
 3093 11e0 D3       		.byte	0xd3
 3094 11e1 A3100000 		.4byte	0x10a3
 3095 11e5 50000000 		.4byte	.LLST13
 3096 11e9 2F       		.uleb128 0x2f
 3097 11ea 6900     		.ascii	"i\000"
 3098 11ec 01       		.byte	0x1
 3099 11ed D4       		.byte	0xd4
 3100 11ee C6020000 		.4byte	0x2c6
 3101 11f2 8A000000 		.4byte	.LLST14
 3102 11f6 30       		.uleb128 0x30
 3103 11f7 69727100 		.ascii	"irq\000"
 3104 11fb 01       		.byte	0x1
 3105 11fc D5       		.byte	0xd5
 3106 11fd E6020000 		.4byte	0x2e6
 3107 1201 2F       		.uleb128 0x2f
 3108 1202 746D7000 		.ascii	"tmp\000"
 3109 1206 01       		.byte	0x1
 3110 1207 D6       		.byte	0xd6
 3111 1208 A3100000 		.4byte	0x10a3
 3112 120c BF000000 		.4byte	.LLST15
ARM GAS  /tmp/ccFmD5nI.s 			page 92


 3113 1210 31       		.uleb128 0x31
 3114 1211 DD130000 		.4byte	0x13dd
 3115 1215 3E010000 		.4byte	.LBB20
 3116 1219 42010000 		.4byte	.LBE20
 3117 121d 01       		.byte	0x1
 3118 121e E8       		.byte	0xe8
 3119 121f 35120000 		.4byte	0x1235
 3120 1223 32       		.uleb128 0x32
 3121 1224 3E010000 		.4byte	.LBB21
 3122 1228 42010000 		.4byte	.LBE21
 3123 122c 33       		.uleb128 0x33
 3124 122d EF130000 		.4byte	0x13ef
 3125 1231 01       		.byte	0x1
 3126 1232 55       		.byte	0x55
 3127 1233 00       		.byte	0
 3128 1234 00       		.byte	0
 3129 1235 34       		.uleb128 0x34
 3130 1236 FC130000 		.4byte	0x13fc
 3131 123a 42010000 		.4byte	.LBB22
 3132 123e 44010000 		.4byte	.LBE22
 3133 1242 01       		.byte	0x1
 3134 1243 EB       		.byte	0xeb
 3135 1244 34       		.uleb128 0x34
 3136 1245 06140000 		.4byte	0x1406
 3137 1249 50010000 		.4byte	.LBB24
 3138 124d 52010000 		.4byte	.LBE24
 3139 1251 01       		.byte	0x1
 3140 1252 F8       		.byte	0xf8
 3141 1253 35       		.uleb128 0x35
 3142 1254 58010000 		.4byte	.LVL23
 3143 1258 01       		.byte	0x1
 3144 1259 10140000 		.4byte	0x1410
 3145 125d 00       		.byte	0
 3146 125e 36       		.uleb128 0x36
 3147 125f 01       		.byte	0x1
 3148 1260 090C0000 		.4byte	.LASF274
 3149 1264 01       		.byte	0x1
 3150 1265 B4       		.byte	0xb4
 3151 1266 01       		.byte	0x1
 3152 1267 A3100000 		.4byte	0x10a3
 3153 126b D0000000 		.4byte	.LFB116
 3154 126f 14010000 		.4byte	.LFE116
 3155 1273 DD000000 		.4byte	.LLST5
 3156 1277 01       		.byte	0x1
 3157 1278 E6120000 		.4byte	0x12e6
 3158 127c 2E       		.uleb128 0x2e
 3159 127d A60D0000 		.4byte	.LASF275
 3160 1281 01       		.byte	0x1
 3161 1282 B4       		.byte	0xb4
 3162 1283 E6020000 		.4byte	0x2e6
 3163 1287 FD000000 		.4byte	.LLST6
 3164 128b 2E       		.uleb128 0x2e
 3165 128c A8090000 		.4byte	.LASF253
 3166 1290 01       		.byte	0x1
 3167 1291 B4       		.byte	0xb4
 3168 1292 C6020000 		.4byte	0x2c6
 3169 1296 31010000 		.4byte	.LLST7
ARM GAS  /tmp/ccFmD5nI.s 			page 93


 3170 129a 2E       		.uleb128 0x2e
 3171 129b 63040000 		.4byte	.LASF276
 3172 129f 01       		.byte	0x1
 3173 12a0 B4       		.byte	0xb4
 3174 12a1 C6020000 		.4byte	0x2c6
 3175 12a5 5D010000 		.4byte	.LLST8
 3176 12a9 2E       		.uleb128 0x2e
 3177 12aa 360B0000 		.4byte	.LASF277
 3178 12ae 01       		.byte	0x1
 3179 12af B4       		.byte	0xb4
 3180 12b0 EB0F0000 		.4byte	0xfeb
 3181 12b4 89010000 		.4byte	.LLST9
 3182 12b8 2E       		.uleb128 0x2e
 3183 12b9 6C090000 		.4byte	.LASF256
 3184 12bd 01       		.byte	0x1
 3185 12be B4       		.byte	0xb4
 3186 12bf 16070000 		.4byte	0x716
 3187 12c3 B2010000 		.4byte	.LLST10
 3188 12c7 2F       		.uleb128 0x2f
 3189 12c8 746D7000 		.ascii	"tmp\000"
 3190 12cc 01       		.byte	0x1
 3191 12cd B5       		.byte	0xb5
 3192 12ce A3100000 		.4byte	0x10a3
 3193 12d2 D2010000 		.4byte	.LLST11
 3194 12d6 37       		.uleb128 0x37
 3195 12d7 EA000000 		.4byte	.LVL15
 3196 12db 1D140000 		.4byte	0x141d
 3197 12df 38       		.uleb128 0x38
 3198 12e0 01       		.byte	0x1
 3199 12e1 50       		.byte	0x50
 3200 12e2 01       		.byte	0x1
 3201 12e3 48       		.byte	0x48
 3202 12e4 00       		.byte	0
 3203 12e5 00       		.byte	0
 3204 12e6 39       		.uleb128 0x39
 3205 12e7 01       		.byte	0x1
 3206 12e8 AC050000 		.4byte	.LASF278
 3207 12ec 01       		.byte	0x1
 3208 12ed 7F       		.byte	0x7f
 3209 12ee 01       		.byte	0x1
 3210 12ef C0000000 		.4byte	.LFB115
 3211 12f3 D0000000 		.4byte	.LFE115
 3212 12f7 02       		.byte	0x2
 3213 12f8 7D       		.byte	0x7d
 3214 12f9 00       		.sleb128 0
 3215 12fa 01       		.byte	0x1
 3216 12fb 39       		.uleb128 0x39
 3217 12fc 01       		.byte	0x1
 3218 12fd 68020000 		.4byte	.LASF279
 3219 1301 01       		.byte	0x1
 3220 1302 70       		.byte	0x70
 3221 1303 01       		.byte	0x1
 3222 1304 A4000000 		.4byte	.LFB114
 3223 1308 C0000000 		.4byte	.LFE114
 3224 130c 02       		.byte	0x2
 3225 130d 7D       		.byte	0x7d
 3226 130e 00       		.sleb128 0
ARM GAS  /tmp/ccFmD5nI.s 			page 94


 3227 130f 01       		.byte	0x1
 3228 1310 3A       		.uleb128 0x3a
 3229 1311 01       		.byte	0x1
 3230 1312 40080000 		.4byte	.LASF281
 3231 1316 01       		.byte	0x1
 3232 1317 59       		.byte	0x59
 3233 1318 01       		.byte	0x1
 3234 1319 54000000 		.4byte	.LFB113
 3235 131d A4000000 		.4byte	.LFE113
 3236 1321 02       		.byte	0x2
 3237 1322 7D       		.byte	0x7d
 3238 1323 00       		.sleb128 0
 3239 1324 01       		.byte	0x1
 3240 1325 66130000 		.4byte	0x1366
 3241 1329 3B       		.uleb128 0x3b
 3242 132a 97130000 		.4byte	0x1397
 3243 132e 56000000 		.4byte	.LBB14
 3244 1332 00000000 		.4byte	.Ldebug_ranges0+0
 3245 1336 01       		.byte	0x1
 3246 1337 5E       		.byte	0x5e
 3247 1338 3C       		.uleb128 0x3c
 3248 1339 A9130000 		.4byte	0x13a9
 3249 133d E5010000 		.4byte	.LLST2
 3250 1341 3D       		.uleb128 0x3d
 3251 1342 B6130000 		.4byte	0x13b6
 3252 1346 66000000 		.4byte	.LBB16
 3253 134a 6E000000 		.4byte	.LBE16
 3254 134e 02       		.byte	0x2
 3255 134f 0605     		.2byte	0x506
 3256 1351 3C       		.uleb128 0x3c
 3257 1352 D0130000 		.4byte	0x13d0
 3258 1356 43020000 		.4byte	.LLST3
 3259 135a 3C       		.uleb128 0x3c
 3260 135b C4130000 		.4byte	0x13c4
 3261 135f 57020000 		.4byte	.LLST4
 3262 1363 00       		.byte	0
 3263 1364 00       		.byte	0
 3264 1365 00       		.byte	0
 3265 1366 3E       		.uleb128 0x3e
 3266 1367 01       		.byte	0x1
 3267 1368 11020000 		.4byte	.LASF282
 3268 136c 01       		.byte	0x1
 3269 136d 30       		.byte	0x30
 3270 136e 01       		.byte	0x1
 3271 136f 00000000 		.4byte	.LFB112
 3272 1373 54000000 		.4byte	.LFE112
 3273 1377 6C020000 		.4byte	.LLST0
 3274 137b 01       		.byte	0x1
 3275 137c 97130000 		.4byte	0x1397
 3276 1380 2F       		.uleb128 0x2f
 3277 1381 6900     		.ascii	"i\000"
 3278 1383 01       		.byte	0x1
 3279 1384 31       		.byte	0x31
 3280 1385 C6020000 		.4byte	0x2c6
 3281 1389 8C020000 		.4byte	.LLST1
 3282 138d 3F       		.uleb128 0x3f
 3283 138e 18000000 		.4byte	.LVL0
ARM GAS  /tmp/ccFmD5nI.s 			page 95


 3284 1392 2A140000 		.4byte	0x142a
 3285 1396 00       		.byte	0
 3286 1397 40       		.uleb128 0x40
 3287 1398 280A0000 		.4byte	.LASF286
 3288 139c 02       		.byte	0x2
 3289 139d 0105     		.2byte	0x501
 3290 139f 01       		.byte	0x1
 3291 13a0 E6020000 		.4byte	0x2e6
 3292 13a4 03       		.byte	0x3
 3293 13a5 B6130000 		.4byte	0x13b6
 3294 13a9 41       		.uleb128 0x41
 3295 13aa 6A060000 		.4byte	.LASF283
 3296 13ae 02       		.byte	0x2
 3297 13af 0105     		.2byte	0x501
 3298 13b1 E6020000 		.4byte	0x2e6
 3299 13b5 00       		.byte	0
 3300 13b6 42       		.uleb128 0x42
 3301 13b7 16060000 		.4byte	.LASF297
 3302 13bb 02       		.byte	0x2
 3303 13bc 8404     		.2byte	0x484
 3304 13be 01       		.byte	0x1
 3305 13bf 03       		.byte	0x3
 3306 13c0 DD130000 		.4byte	0x13dd
 3307 13c4 41       		.uleb128 0x41
 3308 13c5 42020000 		.4byte	.LASF284
 3309 13c9 02       		.byte	0x2
 3310 13ca 8404     		.2byte	0x484
 3311 13cc 61020000 		.4byte	0x261
 3312 13d0 41       		.uleb128 0x41
 3313 13d1 2D0B0000 		.4byte	.LASF285
 3314 13d5 02       		.byte	0x2
 3315 13d6 8404     		.2byte	0x484
 3316 13d8 E6020000 		.4byte	0x2e6
 3317 13dc 00       		.byte	0
 3318 13dd 40       		.uleb128 0x40
 3319 13de C2090000 		.4byte	.LASF287
 3320 13e2 03       		.byte	0x3
 3321 13e3 C901     		.2byte	0x1c9
 3322 13e5 01       		.byte	0x1
 3323 13e6 E6020000 		.4byte	0x2e6
 3324 13ea 03       		.byte	0x3
 3325 13eb FC130000 		.4byte	0x13fc
 3326 13ef 43       		.uleb128 0x43
 3327 13f0 90010000 		.4byte	.LASF288
 3328 13f4 03       		.byte	0x3
 3329 13f5 CB01     		.2byte	0x1cb
 3330 13f7 E6020000 		.4byte	0x2e6
 3331 13fb 00       		.byte	0
 3332 13fc 44       		.uleb128 0x44
 3333 13fd 44060000 		.4byte	.LASF289
 3334 1401 03       		.byte	0x3
 3335 1402 3F01     		.2byte	0x13f
 3336 1404 01       		.byte	0x1
 3337 1405 03       		.byte	0x3
 3338 1406 44       		.uleb128 0x44
 3339 1407 2F040000 		.4byte	.LASF290
 3340 140b 03       		.byte	0x3
ARM GAS  /tmp/ccFmD5nI.s 			page 96


 3341 140c 3401     		.2byte	0x134
 3342 140e 01       		.byte	0x1
 3343 140f 03       		.byte	0x3
 3344 1410 45       		.uleb128 0x45
 3345 1411 01       		.byte	0x1
 3346 1412 01       		.byte	0x1
 3347 1413 610C0000 		.4byte	.LASF291
 3348 1417 610C0000 		.4byte	.LASF291
 3349 141b 0C       		.byte	0xc
 3350 141c 5D       		.byte	0x5d
 3351 141d 45       		.uleb128 0x45
 3352 141e 01       		.byte	0x1
 3353 141f 01       		.byte	0x1
 3354 1420 42040000 		.4byte	.LASF292
 3355 1424 42040000 		.4byte	.LASF292
 3356 1428 0C       		.byte	0xc
 3357 1429 68       		.byte	0x68
 3358 142a 46       		.uleb128 0x46
 3359 142b 01       		.byte	0x1
 3360 142c 01       		.byte	0x1
 3361 142d 82020000 		.4byte	.LASF293
 3362 1431 82020000 		.4byte	.LASF293
 3363 1435 0D       		.byte	0xd
 3364 1436 A601     		.2byte	0x1a6
 3365 1438 00       		.byte	0
 3366              		.section	.debug_abbrev,"",%progbits
 3367              	.Ldebug_abbrev0:
 3368 0000 01       		.uleb128 0x1
 3369 0001 11       		.uleb128 0x11
 3370 0002 01       		.byte	0x1
 3371 0003 25       		.uleb128 0x25
 3372 0004 0E       		.uleb128 0xe
 3373 0005 13       		.uleb128 0x13
 3374 0006 0B       		.uleb128 0xb
 3375 0007 03       		.uleb128 0x3
 3376 0008 0E       		.uleb128 0xe
 3377 0009 1B       		.uleb128 0x1b
 3378 000a 0E       		.uleb128 0xe
 3379 000b 11       		.uleb128 0x11
 3380 000c 01       		.uleb128 0x1
 3381 000d 12       		.uleb128 0x12
 3382 000e 01       		.uleb128 0x1
 3383 000f 10       		.uleb128 0x10
 3384 0010 06       		.uleb128 0x6
 3385 0011 00       		.byte	0
 3386 0012 00       		.byte	0
 3387 0013 02       		.uleb128 0x2
 3388 0014 24       		.uleb128 0x24
 3389 0015 00       		.byte	0
 3390 0016 0B       		.uleb128 0xb
 3391 0017 0B       		.uleb128 0xb
 3392 0018 3E       		.uleb128 0x3e
 3393 0019 0B       		.uleb128 0xb
 3394 001a 03       		.uleb128 0x3
 3395 001b 0E       		.uleb128 0xe
 3396 001c 00       		.byte	0
 3397 001d 00       		.byte	0
ARM GAS  /tmp/ccFmD5nI.s 			page 97


 3398 001e 03       		.uleb128 0x3
 3399 001f 04       		.uleb128 0x4
 3400 0020 01       		.byte	0x1
 3401 0021 03       		.uleb128 0x3
 3402 0022 0E       		.uleb128 0xe
 3403 0023 3E       		.uleb128 0x3e
 3404 0024 0B       		.uleb128 0xb
 3405 0025 0B       		.uleb128 0xb
 3406 0026 0B       		.uleb128 0xb
 3407 0027 49       		.uleb128 0x49
 3408 0028 13       		.uleb128 0x13
 3409 0029 3A       		.uleb128 0x3a
 3410 002a 0B       		.uleb128 0xb
 3411 002b 3B       		.uleb128 0x3b
 3412 002c 0B       		.uleb128 0xb
 3413 002d 01       		.uleb128 0x1
 3414 002e 13       		.uleb128 0x13
 3415 002f 00       		.byte	0
 3416 0030 00       		.byte	0
 3417 0031 04       		.uleb128 0x4
 3418 0032 28       		.uleb128 0x28
 3419 0033 00       		.byte	0
 3420 0034 03       		.uleb128 0x3
 3421 0035 0E       		.uleb128 0xe
 3422 0036 1C       		.uleb128 0x1c
 3423 0037 0D       		.uleb128 0xd
 3424 0038 00       		.byte	0
 3425 0039 00       		.byte	0
 3426 003a 05       		.uleb128 0x5
 3427 003b 28       		.uleb128 0x28
 3428 003c 00       		.byte	0
 3429 003d 03       		.uleb128 0x3
 3430 003e 0E       		.uleb128 0xe
 3431 003f 1C       		.uleb128 0x1c
 3432 0040 0B       		.uleb128 0xb
 3433 0041 00       		.byte	0
 3434 0042 00       		.byte	0
 3435 0043 06       		.uleb128 0x6
 3436 0044 16       		.uleb128 0x16
 3437 0045 00       		.byte	0
 3438 0046 03       		.uleb128 0x3
 3439 0047 0E       		.uleb128 0xe
 3440 0048 3A       		.uleb128 0x3a
 3441 0049 0B       		.uleb128 0xb
 3442 004a 3B       		.uleb128 0x3b
 3443 004b 05       		.uleb128 0x5
 3444 004c 49       		.uleb128 0x49
 3445 004d 13       		.uleb128 0x13
 3446 004e 00       		.byte	0
 3447 004f 00       		.byte	0
 3448 0050 07       		.uleb128 0x7
 3449 0051 16       		.uleb128 0x16
 3450 0052 00       		.byte	0
 3451 0053 03       		.uleb128 0x3
 3452 0054 0E       		.uleb128 0xe
 3453 0055 3A       		.uleb128 0x3a
 3454 0056 0B       		.uleb128 0xb
ARM GAS  /tmp/ccFmD5nI.s 			page 98


 3455 0057 3B       		.uleb128 0x3b
 3456 0058 0B       		.uleb128 0xb
 3457 0059 49       		.uleb128 0x49
 3458 005a 13       		.uleb128 0x13
 3459 005b 00       		.byte	0
 3460 005c 00       		.byte	0
 3461 005d 08       		.uleb128 0x8
 3462 005e 24       		.uleb128 0x24
 3463 005f 00       		.byte	0
 3464 0060 0B       		.uleb128 0xb
 3465 0061 0B       		.uleb128 0xb
 3466 0062 3E       		.uleb128 0x3e
 3467 0063 0B       		.uleb128 0xb
 3468 0064 03       		.uleb128 0x3
 3469 0065 08       		.uleb128 0x8
 3470 0066 00       		.byte	0
 3471 0067 00       		.byte	0
 3472 0068 09       		.uleb128 0x9
 3473 0069 35       		.uleb128 0x35
 3474 006a 00       		.byte	0
 3475 006b 49       		.uleb128 0x49
 3476 006c 13       		.uleb128 0x13
 3477 006d 00       		.byte	0
 3478 006e 00       		.byte	0
 3479 006f 0A       		.uleb128 0xa
 3480 0070 26       		.uleb128 0x26
 3481 0071 00       		.byte	0
 3482 0072 49       		.uleb128 0x49
 3483 0073 13       		.uleb128 0x13
 3484 0074 00       		.byte	0
 3485 0075 00       		.byte	0
 3486 0076 0B       		.uleb128 0xb
 3487 0077 13       		.uleb128 0x13
 3488 0078 01       		.byte	0x1
 3489 0079 0B       		.uleb128 0xb
 3490 007a 05       		.uleb128 0x5
 3491 007b 3A       		.uleb128 0x3a
 3492 007c 0B       		.uleb128 0xb
 3493 007d 3B       		.uleb128 0x3b
 3494 007e 05       		.uleb128 0x5
 3495 007f 01       		.uleb128 0x1
 3496 0080 13       		.uleb128 0x13
 3497 0081 00       		.byte	0
 3498 0082 00       		.byte	0
 3499 0083 0C       		.uleb128 0xc
 3500 0084 0D       		.uleb128 0xd
 3501 0085 00       		.byte	0
 3502 0086 03       		.uleb128 0x3
 3503 0087 0E       		.uleb128 0xe
 3504 0088 3A       		.uleb128 0x3a
 3505 0089 0B       		.uleb128 0xb
 3506 008a 3B       		.uleb128 0x3b
 3507 008b 05       		.uleb128 0x5
 3508 008c 49       		.uleb128 0x49
 3509 008d 13       		.uleb128 0x13
 3510 008e 38       		.uleb128 0x38
 3511 008f 0A       		.uleb128 0xa
ARM GAS  /tmp/ccFmD5nI.s 			page 99


 3512 0090 00       		.byte	0
 3513 0091 00       		.byte	0
 3514 0092 0D       		.uleb128 0xd
 3515 0093 0D       		.uleb128 0xd
 3516 0094 00       		.byte	0
 3517 0095 03       		.uleb128 0x3
 3518 0096 08       		.uleb128 0x8
 3519 0097 3A       		.uleb128 0x3a
 3520 0098 0B       		.uleb128 0xb
 3521 0099 3B       		.uleb128 0x3b
 3522 009a 05       		.uleb128 0x5
 3523 009b 49       		.uleb128 0x49
 3524 009c 13       		.uleb128 0x13
 3525 009d 38       		.uleb128 0x38
 3526 009e 0A       		.uleb128 0xa
 3527 009f 00       		.byte	0
 3528 00a0 00       		.byte	0
 3529 00a1 0E       		.uleb128 0xe
 3530 00a2 01       		.uleb128 0x1
 3531 00a3 01       		.byte	0x1
 3532 00a4 49       		.uleb128 0x49
 3533 00a5 13       		.uleb128 0x13
 3534 00a6 01       		.uleb128 0x1
 3535 00a7 13       		.uleb128 0x13
 3536 00a8 00       		.byte	0
 3537 00a9 00       		.byte	0
 3538 00aa 0F       		.uleb128 0xf
 3539 00ab 21       		.uleb128 0x21
 3540 00ac 00       		.byte	0
 3541 00ad 49       		.uleb128 0x49
 3542 00ae 13       		.uleb128 0x13
 3543 00af 2F       		.uleb128 0x2f
 3544 00b0 0B       		.uleb128 0xb
 3545 00b1 00       		.byte	0
 3546 00b2 00       		.byte	0
 3547 00b3 10       		.uleb128 0x10
 3548 00b4 21       		.uleb128 0x21
 3549 00b5 00       		.byte	0
 3550 00b6 49       		.uleb128 0x49
 3551 00b7 13       		.uleb128 0x13
 3552 00b8 2F       		.uleb128 0x2f
 3553 00b9 05       		.uleb128 0x5
 3554 00ba 00       		.byte	0
 3555 00bb 00       		.byte	0
 3556 00bc 11       		.uleb128 0x11
 3557 00bd 13       		.uleb128 0x13
 3558 00be 01       		.byte	0x1
 3559 00bf 0B       		.uleb128 0xb
 3560 00c0 0B       		.uleb128 0xb
 3561 00c1 3A       		.uleb128 0x3a
 3562 00c2 0B       		.uleb128 0xb
 3563 00c3 3B       		.uleb128 0x3b
 3564 00c4 05       		.uleb128 0x5
 3565 00c5 01       		.uleb128 0x1
 3566 00c6 13       		.uleb128 0x13
 3567 00c7 00       		.byte	0
 3568 00c8 00       		.byte	0
ARM GAS  /tmp/ccFmD5nI.s 			page 100


 3569 00c9 12       		.uleb128 0x12
 3570 00ca 34       		.uleb128 0x34
 3571 00cb 00       		.byte	0
 3572 00cc 03       		.uleb128 0x3
 3573 00cd 0E       		.uleb128 0xe
 3574 00ce 3A       		.uleb128 0x3a
 3575 00cf 0B       		.uleb128 0xb
 3576 00d0 3B       		.uleb128 0x3b
 3577 00d1 05       		.uleb128 0x5
 3578 00d2 49       		.uleb128 0x49
 3579 00d3 13       		.uleb128 0x13
 3580 00d4 3F       		.uleb128 0x3f
 3581 00d5 0C       		.uleb128 0xc
 3582 00d6 3C       		.uleb128 0x3c
 3583 00d7 0C       		.uleb128 0xc
 3584 00d8 00       		.byte	0
 3585 00d9 00       		.byte	0
 3586 00da 13       		.uleb128 0x13
 3587 00db 34       		.uleb128 0x34
 3588 00dc 00       		.byte	0
 3589 00dd 03       		.uleb128 0x3
 3590 00de 0E       		.uleb128 0xe
 3591 00df 3A       		.uleb128 0x3a
 3592 00e0 0B       		.uleb128 0xb
 3593 00e1 3B       		.uleb128 0x3b
 3594 00e2 0B       		.uleb128 0xb
 3595 00e3 49       		.uleb128 0x49
 3596 00e4 13       		.uleb128 0x13
 3597 00e5 3F       		.uleb128 0x3f
 3598 00e6 0C       		.uleb128 0xc
 3599 00e7 3C       		.uleb128 0x3c
 3600 00e8 0C       		.uleb128 0xc
 3601 00e9 00       		.byte	0
 3602 00ea 00       		.byte	0
 3603 00eb 14       		.uleb128 0x14
 3604 00ec 0F       		.uleb128 0xf
 3605 00ed 00       		.byte	0
 3606 00ee 0B       		.uleb128 0xb
 3607 00ef 0B       		.uleb128 0xb
 3608 00f0 49       		.uleb128 0x49
 3609 00f1 13       		.uleb128 0x13
 3610 00f2 00       		.byte	0
 3611 00f3 00       		.byte	0
 3612 00f4 15       		.uleb128 0x15
 3613 00f5 13       		.uleb128 0x13
 3614 00f6 00       		.byte	0
 3615 00f7 03       		.uleb128 0x3
 3616 00f8 0E       		.uleb128 0xe
 3617 00f9 3C       		.uleb128 0x3c
 3618 00fa 0C       		.uleb128 0xc
 3619 00fb 00       		.byte	0
 3620 00fc 00       		.byte	0
 3621 00fd 16       		.uleb128 0x16
 3622 00fe 17       		.uleb128 0x17
 3623 00ff 01       		.byte	0x1
 3624 0100 0B       		.uleb128 0xb
 3625 0101 0B       		.uleb128 0xb
ARM GAS  /tmp/ccFmD5nI.s 			page 101


 3626 0102 3A       		.uleb128 0x3a
 3627 0103 0B       		.uleb128 0xb
 3628 0104 3B       		.uleb128 0x3b
 3629 0105 0B       		.uleb128 0xb
 3630 0106 01       		.uleb128 0x1
 3631 0107 13       		.uleb128 0x13
 3632 0108 00       		.byte	0
 3633 0109 00       		.byte	0
 3634 010a 17       		.uleb128 0x17
 3635 010b 0D       		.uleb128 0xd
 3636 010c 00       		.byte	0
 3637 010d 03       		.uleb128 0x3
 3638 010e 0E       		.uleb128 0xe
 3639 010f 3A       		.uleb128 0x3a
 3640 0110 0B       		.uleb128 0xb
 3641 0111 3B       		.uleb128 0x3b
 3642 0112 0B       		.uleb128 0xb
 3643 0113 49       		.uleb128 0x49
 3644 0114 13       		.uleb128 0x13
 3645 0115 00       		.byte	0
 3646 0116 00       		.byte	0
 3647 0117 18       		.uleb128 0x18
 3648 0118 13       		.uleb128 0x13
 3649 0119 01       		.byte	0x1
 3650 011a 0B       		.uleb128 0xb
 3651 011b 0B       		.uleb128 0xb
 3652 011c 3A       		.uleb128 0x3a
 3653 011d 0B       		.uleb128 0xb
 3654 011e 3B       		.uleb128 0x3b
 3655 011f 0B       		.uleb128 0xb
 3656 0120 01       		.uleb128 0x1
 3657 0121 13       		.uleb128 0x13
 3658 0122 00       		.byte	0
 3659 0123 00       		.byte	0
 3660 0124 19       		.uleb128 0x19
 3661 0125 0D       		.uleb128 0xd
 3662 0126 00       		.byte	0
 3663 0127 03       		.uleb128 0x3
 3664 0128 0E       		.uleb128 0xe
 3665 0129 3A       		.uleb128 0x3a
 3666 012a 0B       		.uleb128 0xb
 3667 012b 3B       		.uleb128 0x3b
 3668 012c 0B       		.uleb128 0xb
 3669 012d 49       		.uleb128 0x49
 3670 012e 13       		.uleb128 0x13
 3671 012f 38       		.uleb128 0x38
 3672 0130 0A       		.uleb128 0xa
 3673 0131 00       		.byte	0
 3674 0132 00       		.byte	0
 3675 0133 1A       		.uleb128 0x1a
 3676 0134 0F       		.uleb128 0xf
 3677 0135 00       		.byte	0
 3678 0136 0B       		.uleb128 0xb
 3679 0137 0B       		.uleb128 0xb
 3680 0138 00       		.byte	0
 3681 0139 00       		.byte	0
 3682 013a 1B       		.uleb128 0x1b
ARM GAS  /tmp/ccFmD5nI.s 			page 102


 3683 013b 13       		.uleb128 0x13
 3684 013c 01       		.byte	0x1
 3685 013d 03       		.uleb128 0x3
 3686 013e 0E       		.uleb128 0xe
 3687 013f 0B       		.uleb128 0xb
 3688 0140 0B       		.uleb128 0xb
 3689 0141 3A       		.uleb128 0x3a
 3690 0142 0B       		.uleb128 0xb
 3691 0143 3B       		.uleb128 0x3b
 3692 0144 0B       		.uleb128 0xb
 3693 0145 01       		.uleb128 0x1
 3694 0146 13       		.uleb128 0x13
 3695 0147 00       		.byte	0
 3696 0148 00       		.byte	0
 3697 0149 1C       		.uleb128 0x1c
 3698 014a 0D       		.uleb128 0xd
 3699 014b 00       		.byte	0
 3700 014c 03       		.uleb128 0x3
 3701 014d 08       		.uleb128 0x8
 3702 014e 3A       		.uleb128 0x3a
 3703 014f 0B       		.uleb128 0xb
 3704 0150 3B       		.uleb128 0x3b
 3705 0151 0B       		.uleb128 0xb
 3706 0152 49       		.uleb128 0x49
 3707 0153 13       		.uleb128 0x13
 3708 0154 38       		.uleb128 0x38
 3709 0155 0A       		.uleb128 0xa
 3710 0156 00       		.byte	0
 3711 0157 00       		.byte	0
 3712 0158 1D       		.uleb128 0x1d
 3713 0159 13       		.uleb128 0x13
 3714 015a 01       		.byte	0x1
 3715 015b 03       		.uleb128 0x3
 3716 015c 0E       		.uleb128 0xe
 3717 015d 0B       		.uleb128 0xb
 3718 015e 05       		.uleb128 0x5
 3719 015f 3A       		.uleb128 0x3a
 3720 0160 0B       		.uleb128 0xb
 3721 0161 3B       		.uleb128 0x3b
 3722 0162 0B       		.uleb128 0xb
 3723 0163 01       		.uleb128 0x1
 3724 0164 13       		.uleb128 0x13
 3725 0165 00       		.byte	0
 3726 0166 00       		.byte	0
 3727 0167 1E       		.uleb128 0x1e
 3728 0168 15       		.uleb128 0x15
 3729 0169 00       		.byte	0
 3730 016a 27       		.uleb128 0x27
 3731 016b 0C       		.uleb128 0xc
 3732 016c 00       		.byte	0
 3733 016d 00       		.byte	0
 3734 016e 1F       		.uleb128 0x1f
 3735 016f 15       		.uleb128 0x15
 3736 0170 01       		.byte	0x1
 3737 0171 27       		.uleb128 0x27
 3738 0172 0C       		.uleb128 0xc
 3739 0173 49       		.uleb128 0x49
ARM GAS  /tmp/ccFmD5nI.s 			page 103


 3740 0174 13       		.uleb128 0x13
 3741 0175 01       		.uleb128 0x1
 3742 0176 13       		.uleb128 0x13
 3743 0177 00       		.byte	0
 3744 0178 00       		.byte	0
 3745 0179 20       		.uleb128 0x20
 3746 017a 05       		.uleb128 0x5
 3747 017b 00       		.byte	0
 3748 017c 49       		.uleb128 0x49
 3749 017d 13       		.uleb128 0x13
 3750 017e 00       		.byte	0
 3751 017f 00       		.byte	0
 3752 0180 21       		.uleb128 0x21
 3753 0181 13       		.uleb128 0x13
 3754 0182 01       		.byte	0x1
 3755 0183 03       		.uleb128 0x3
 3756 0184 0E       		.uleb128 0xe
 3757 0185 0B       		.uleb128 0xb
 3758 0186 05       		.uleb128 0x5
 3759 0187 3A       		.uleb128 0x3a
 3760 0188 0B       		.uleb128 0xb
 3761 0189 3B       		.uleb128 0x3b
 3762 018a 05       		.uleb128 0x5
 3763 018b 01       		.uleb128 0x1
 3764 018c 13       		.uleb128 0x13
 3765 018d 00       		.byte	0
 3766 018e 00       		.byte	0
 3767 018f 22       		.uleb128 0x22
 3768 0190 13       		.uleb128 0x13
 3769 0191 01       		.byte	0x1
 3770 0192 03       		.uleb128 0x3
 3771 0193 0E       		.uleb128 0xe
 3772 0194 0B       		.uleb128 0xb
 3773 0195 0B       		.uleb128 0xb
 3774 0196 3A       		.uleb128 0x3a
 3775 0197 0B       		.uleb128 0xb
 3776 0198 3B       		.uleb128 0x3b
 3777 0199 05       		.uleb128 0x5
 3778 019a 01       		.uleb128 0x1
 3779 019b 13       		.uleb128 0x13
 3780 019c 00       		.byte	0
 3781 019d 00       		.byte	0
 3782 019e 23       		.uleb128 0x23
 3783 019f 17       		.uleb128 0x17
 3784 01a0 01       		.byte	0x1
 3785 01a1 0B       		.uleb128 0xb
 3786 01a2 0B       		.uleb128 0xb
 3787 01a3 3A       		.uleb128 0x3a
 3788 01a4 0B       		.uleb128 0xb
 3789 01a5 3B       		.uleb128 0x3b
 3790 01a6 05       		.uleb128 0x5
 3791 01a7 01       		.uleb128 0x1
 3792 01a8 13       		.uleb128 0x13
 3793 01a9 00       		.byte	0
 3794 01aa 00       		.byte	0
 3795 01ab 24       		.uleb128 0x24
 3796 01ac 0D       		.uleb128 0xd
ARM GAS  /tmp/ccFmD5nI.s 			page 104


 3797 01ad 00       		.byte	0
 3798 01ae 03       		.uleb128 0x3
 3799 01af 0E       		.uleb128 0xe
 3800 01b0 3A       		.uleb128 0x3a
 3801 01b1 0B       		.uleb128 0xb
 3802 01b2 3B       		.uleb128 0x3b
 3803 01b3 05       		.uleb128 0x5
 3804 01b4 49       		.uleb128 0x49
 3805 01b5 13       		.uleb128 0x13
 3806 01b6 00       		.byte	0
 3807 01b7 00       		.byte	0
 3808 01b8 25       		.uleb128 0x25
 3809 01b9 15       		.uleb128 0x15
 3810 01ba 01       		.byte	0x1
 3811 01bb 27       		.uleb128 0x27
 3812 01bc 0C       		.uleb128 0xc
 3813 01bd 01       		.uleb128 0x1
 3814 01be 13       		.uleb128 0x13
 3815 01bf 00       		.byte	0
 3816 01c0 00       		.byte	0
 3817 01c1 26       		.uleb128 0x26
 3818 01c2 34       		.uleb128 0x34
 3819 01c3 00       		.byte	0
 3820 01c4 03       		.uleb128 0x3
 3821 01c5 0E       		.uleb128 0xe
 3822 01c6 3A       		.uleb128 0x3a
 3823 01c7 0B       		.uleb128 0xb
 3824 01c8 3B       		.uleb128 0x3b
 3825 01c9 0B       		.uleb128 0xb
 3826 01ca 49       		.uleb128 0x49
 3827 01cb 13       		.uleb128 0x13
 3828 01cc 3F       		.uleb128 0x3f
 3829 01cd 0C       		.uleb128 0xc
 3830 01ce 02       		.uleb128 0x2
 3831 01cf 0A       		.uleb128 0xa
 3832 01d0 00       		.byte	0
 3833 01d1 00       		.byte	0
 3834 01d2 27       		.uleb128 0x27
 3835 01d3 34       		.uleb128 0x34
 3836 01d4 00       		.byte	0
 3837 01d5 47       		.uleb128 0x47
 3838 01d6 13       		.uleb128 0x13
 3839 01d7 3A       		.uleb128 0x3a
 3840 01d8 0B       		.uleb128 0xb
 3841 01d9 3B       		.uleb128 0x3b
 3842 01da 0B       		.uleb128 0xb
 3843 01db 02       		.uleb128 0x2
 3844 01dc 0A       		.uleb128 0xa
 3845 01dd 00       		.byte	0
 3846 01de 00       		.byte	0
 3847 01df 28       		.uleb128 0x28
 3848 01e0 34       		.uleb128 0x34
 3849 01e1 00       		.byte	0
 3850 01e2 03       		.uleb128 0x3
 3851 01e3 0E       		.uleb128 0xe
 3852 01e4 3A       		.uleb128 0x3a
 3853 01e5 0B       		.uleb128 0xb
ARM GAS  /tmp/ccFmD5nI.s 			page 105


 3854 01e6 3B       		.uleb128 0x3b
 3855 01e7 0B       		.uleb128 0xb
 3856 01e8 49       		.uleb128 0x49
 3857 01e9 13       		.uleb128 0x13
 3858 01ea 02       		.uleb128 0x2
 3859 01eb 0A       		.uleb128 0xa
 3860 01ec 00       		.byte	0
 3861 01ed 00       		.byte	0
 3862 01ee 29       		.uleb128 0x29
 3863 01ef 2E       		.uleb128 0x2e
 3864 01f0 01       		.byte	0x1
 3865 01f1 3F       		.uleb128 0x3f
 3866 01f2 0C       		.uleb128 0xc
 3867 01f3 03       		.uleb128 0x3
 3868 01f4 0E       		.uleb128 0xe
 3869 01f5 3A       		.uleb128 0x3a
 3870 01f6 0B       		.uleb128 0xb
 3871 01f7 3B       		.uleb128 0x3b
 3872 01f8 05       		.uleb128 0x5
 3873 01f9 27       		.uleb128 0x27
 3874 01fa 0C       		.uleb128 0xc
 3875 01fb 49       		.uleb128 0x49
 3876 01fc 13       		.uleb128 0x13
 3877 01fd 11       		.uleb128 0x11
 3878 01fe 01       		.uleb128 0x1
 3879 01ff 12       		.uleb128 0x12
 3880 0200 01       		.uleb128 0x1
 3881 0201 40       		.uleb128 0x40
 3882 0202 0A       		.uleb128 0xa
 3883 0203 9742     		.uleb128 0x2117
 3884 0205 0C       		.uleb128 0xc
 3885 0206 01       		.uleb128 0x1
 3886 0207 13       		.uleb128 0x13
 3887 0208 00       		.byte	0
 3888 0209 00       		.byte	0
 3889 020a 2A       		.uleb128 0x2a
 3890 020b 05       		.uleb128 0x5
 3891 020c 00       		.byte	0
 3892 020d 03       		.uleb128 0x3
 3893 020e 0E       		.uleb128 0xe
 3894 020f 3A       		.uleb128 0x3a
 3895 0210 0B       		.uleb128 0xb
 3896 0211 3B       		.uleb128 0x3b
 3897 0212 05       		.uleb128 0x5
 3898 0213 49       		.uleb128 0x49
 3899 0214 13       		.uleb128 0x13
 3900 0215 02       		.uleb128 0x2
 3901 0216 0A       		.uleb128 0xa
 3902 0217 00       		.byte	0
 3903 0218 00       		.byte	0
 3904 0219 2B       		.uleb128 0x2b
 3905 021a 2E       		.uleb128 0x2e
 3906 021b 01       		.byte	0x1
 3907 021c 3F       		.uleb128 0x3f
 3908 021d 0C       		.uleb128 0xc
 3909 021e 03       		.uleb128 0x3
 3910 021f 0E       		.uleb128 0xe
ARM GAS  /tmp/ccFmD5nI.s 			page 106


 3911 0220 3A       		.uleb128 0x3a
 3912 0221 0B       		.uleb128 0xb
 3913 0222 3B       		.uleb128 0x3b
 3914 0223 0B       		.uleb128 0xb
 3915 0224 27       		.uleb128 0x27
 3916 0225 0C       		.uleb128 0xc
 3917 0226 49       		.uleb128 0x49
 3918 0227 13       		.uleb128 0x13
 3919 0228 11       		.uleb128 0x11
 3920 0229 01       		.uleb128 0x1
 3921 022a 12       		.uleb128 0x12
 3922 022b 01       		.uleb128 0x1
 3923 022c 40       		.uleb128 0x40
 3924 022d 0A       		.uleb128 0xa
 3925 022e 9742     		.uleb128 0x2117
 3926 0230 0C       		.uleb128 0xc
 3927 0231 01       		.uleb128 0x1
 3928 0232 13       		.uleb128 0x13
 3929 0233 00       		.byte	0
 3930 0234 00       		.byte	0
 3931 0235 2C       		.uleb128 0x2c
 3932 0236 05       		.uleb128 0x5
 3933 0237 00       		.byte	0
 3934 0238 03       		.uleb128 0x3
 3935 0239 0E       		.uleb128 0xe
 3936 023a 3A       		.uleb128 0x3a
 3937 023b 0B       		.uleb128 0xb
 3938 023c 3B       		.uleb128 0x3b
 3939 023d 0B       		.uleb128 0xb
 3940 023e 49       		.uleb128 0x49
 3941 023f 13       		.uleb128 0x13
 3942 0240 02       		.uleb128 0x2
 3943 0241 0A       		.uleb128 0xa
 3944 0242 00       		.byte	0
 3945 0243 00       		.byte	0
 3946 0244 2D       		.uleb128 0x2d
 3947 0245 2E       		.uleb128 0x2e
 3948 0246 01       		.byte	0x1
 3949 0247 3F       		.uleb128 0x3f
 3950 0248 0C       		.uleb128 0xc
 3951 0249 03       		.uleb128 0x3
 3952 024a 0E       		.uleb128 0xe
 3953 024b 3A       		.uleb128 0x3a
 3954 024c 0B       		.uleb128 0xb
 3955 024d 3B       		.uleb128 0x3b
 3956 024e 0B       		.uleb128 0xb
 3957 024f 27       		.uleb128 0x27
 3958 0250 0C       		.uleb128 0xc
 3959 0251 11       		.uleb128 0x11
 3960 0252 01       		.uleb128 0x1
 3961 0253 12       		.uleb128 0x12
 3962 0254 01       		.uleb128 0x1
 3963 0255 40       		.uleb128 0x40
 3964 0256 06       		.uleb128 0x6
 3965 0257 9742     		.uleb128 0x2117
 3966 0259 0C       		.uleb128 0xc
 3967 025a 01       		.uleb128 0x1
ARM GAS  /tmp/ccFmD5nI.s 			page 107


 3968 025b 13       		.uleb128 0x13
 3969 025c 00       		.byte	0
 3970 025d 00       		.byte	0
 3971 025e 2E       		.uleb128 0x2e
 3972 025f 05       		.uleb128 0x5
 3973 0260 00       		.byte	0
 3974 0261 03       		.uleb128 0x3
 3975 0262 0E       		.uleb128 0xe
 3976 0263 3A       		.uleb128 0x3a
 3977 0264 0B       		.uleb128 0xb
 3978 0265 3B       		.uleb128 0x3b
 3979 0266 0B       		.uleb128 0xb
 3980 0267 49       		.uleb128 0x49
 3981 0268 13       		.uleb128 0x13
 3982 0269 02       		.uleb128 0x2
 3983 026a 06       		.uleb128 0x6
 3984 026b 00       		.byte	0
 3985 026c 00       		.byte	0
 3986 026d 2F       		.uleb128 0x2f
 3987 026e 34       		.uleb128 0x34
 3988 026f 00       		.byte	0
 3989 0270 03       		.uleb128 0x3
 3990 0271 08       		.uleb128 0x8
 3991 0272 3A       		.uleb128 0x3a
 3992 0273 0B       		.uleb128 0xb
 3993 0274 3B       		.uleb128 0x3b
 3994 0275 0B       		.uleb128 0xb
 3995 0276 49       		.uleb128 0x49
 3996 0277 13       		.uleb128 0x13
 3997 0278 02       		.uleb128 0x2
 3998 0279 06       		.uleb128 0x6
 3999 027a 00       		.byte	0
 4000 027b 00       		.byte	0
 4001 027c 30       		.uleb128 0x30
 4002 027d 34       		.uleb128 0x34
 4003 027e 00       		.byte	0
 4004 027f 03       		.uleb128 0x3
 4005 0280 08       		.uleb128 0x8
 4006 0281 3A       		.uleb128 0x3a
 4007 0282 0B       		.uleb128 0xb
 4008 0283 3B       		.uleb128 0x3b
 4009 0284 0B       		.uleb128 0xb
 4010 0285 49       		.uleb128 0x49
 4011 0286 13       		.uleb128 0x13
 4012 0287 00       		.byte	0
 4013 0288 00       		.byte	0
 4014 0289 31       		.uleb128 0x31
 4015 028a 1D       		.uleb128 0x1d
 4016 028b 01       		.byte	0x1
 4017 028c 31       		.uleb128 0x31
 4018 028d 13       		.uleb128 0x13
 4019 028e 11       		.uleb128 0x11
 4020 028f 01       		.uleb128 0x1
 4021 0290 12       		.uleb128 0x12
 4022 0291 01       		.uleb128 0x1
 4023 0292 58       		.uleb128 0x58
 4024 0293 0B       		.uleb128 0xb
ARM GAS  /tmp/ccFmD5nI.s 			page 108


 4025 0294 59       		.uleb128 0x59
 4026 0295 0B       		.uleb128 0xb
 4027 0296 01       		.uleb128 0x1
 4028 0297 13       		.uleb128 0x13
 4029 0298 00       		.byte	0
 4030 0299 00       		.byte	0
 4031 029a 32       		.uleb128 0x32
 4032 029b 0B       		.uleb128 0xb
 4033 029c 01       		.byte	0x1
 4034 029d 11       		.uleb128 0x11
 4035 029e 01       		.uleb128 0x1
 4036 029f 12       		.uleb128 0x12
 4037 02a0 01       		.uleb128 0x1
 4038 02a1 00       		.byte	0
 4039 02a2 00       		.byte	0
 4040 02a3 33       		.uleb128 0x33
 4041 02a4 34       		.uleb128 0x34
 4042 02a5 00       		.byte	0
 4043 02a6 31       		.uleb128 0x31
 4044 02a7 13       		.uleb128 0x13
 4045 02a8 02       		.uleb128 0x2
 4046 02a9 0A       		.uleb128 0xa
 4047 02aa 00       		.byte	0
 4048 02ab 00       		.byte	0
 4049 02ac 34       		.uleb128 0x34
 4050 02ad 1D       		.uleb128 0x1d
 4051 02ae 00       		.byte	0
 4052 02af 31       		.uleb128 0x31
 4053 02b0 13       		.uleb128 0x13
 4054 02b1 11       		.uleb128 0x11
 4055 02b2 01       		.uleb128 0x1
 4056 02b3 12       		.uleb128 0x12
 4057 02b4 01       		.uleb128 0x1
 4058 02b5 58       		.uleb128 0x58
 4059 02b6 0B       		.uleb128 0xb
 4060 02b7 59       		.uleb128 0x59
 4061 02b8 0B       		.uleb128 0xb
 4062 02b9 00       		.byte	0
 4063 02ba 00       		.byte	0
 4064 02bb 35       		.uleb128 0x35
 4065 02bc 898201   		.uleb128 0x4109
 4066 02bf 00       		.byte	0
 4067 02c0 11       		.uleb128 0x11
 4068 02c1 01       		.uleb128 0x1
 4069 02c2 9542     		.uleb128 0x2115
 4070 02c4 0C       		.uleb128 0xc
 4071 02c5 31       		.uleb128 0x31
 4072 02c6 13       		.uleb128 0x13
 4073 02c7 00       		.byte	0
 4074 02c8 00       		.byte	0
 4075 02c9 36       		.uleb128 0x36
 4076 02ca 2E       		.uleb128 0x2e
 4077 02cb 01       		.byte	0x1
 4078 02cc 3F       		.uleb128 0x3f
 4079 02cd 0C       		.uleb128 0xc
 4080 02ce 03       		.uleb128 0x3
 4081 02cf 0E       		.uleb128 0xe
ARM GAS  /tmp/ccFmD5nI.s 			page 109


 4082 02d0 3A       		.uleb128 0x3a
 4083 02d1 0B       		.uleb128 0xb
 4084 02d2 3B       		.uleb128 0x3b
 4085 02d3 0B       		.uleb128 0xb
 4086 02d4 27       		.uleb128 0x27
 4087 02d5 0C       		.uleb128 0xc
 4088 02d6 49       		.uleb128 0x49
 4089 02d7 13       		.uleb128 0x13
 4090 02d8 11       		.uleb128 0x11
 4091 02d9 01       		.uleb128 0x1
 4092 02da 12       		.uleb128 0x12
 4093 02db 01       		.uleb128 0x1
 4094 02dc 40       		.uleb128 0x40
 4095 02dd 06       		.uleb128 0x6
 4096 02de 9742     		.uleb128 0x2117
 4097 02e0 0C       		.uleb128 0xc
 4098 02e1 01       		.uleb128 0x1
 4099 02e2 13       		.uleb128 0x13
 4100 02e3 00       		.byte	0
 4101 02e4 00       		.byte	0
 4102 02e5 37       		.uleb128 0x37
 4103 02e6 898201   		.uleb128 0x4109
 4104 02e9 01       		.byte	0x1
 4105 02ea 11       		.uleb128 0x11
 4106 02eb 01       		.uleb128 0x1
 4107 02ec 31       		.uleb128 0x31
 4108 02ed 13       		.uleb128 0x13
 4109 02ee 00       		.byte	0
 4110 02ef 00       		.byte	0
 4111 02f0 38       		.uleb128 0x38
 4112 02f1 8A8201   		.uleb128 0x410a
 4113 02f4 00       		.byte	0
 4114 02f5 02       		.uleb128 0x2
 4115 02f6 0A       		.uleb128 0xa
 4116 02f7 9142     		.uleb128 0x2111
 4117 02f9 0A       		.uleb128 0xa
 4118 02fa 00       		.byte	0
 4119 02fb 00       		.byte	0
 4120 02fc 39       		.uleb128 0x39
 4121 02fd 2E       		.uleb128 0x2e
 4122 02fe 00       		.byte	0
 4123 02ff 3F       		.uleb128 0x3f
 4124 0300 0C       		.uleb128 0xc
 4125 0301 03       		.uleb128 0x3
 4126 0302 0E       		.uleb128 0xe
 4127 0303 3A       		.uleb128 0x3a
 4128 0304 0B       		.uleb128 0xb
 4129 0305 3B       		.uleb128 0x3b
 4130 0306 0B       		.uleb128 0xb
 4131 0307 27       		.uleb128 0x27
 4132 0308 0C       		.uleb128 0xc
 4133 0309 11       		.uleb128 0x11
 4134 030a 01       		.uleb128 0x1
 4135 030b 12       		.uleb128 0x12
 4136 030c 01       		.uleb128 0x1
 4137 030d 40       		.uleb128 0x40
 4138 030e 0A       		.uleb128 0xa
ARM GAS  /tmp/ccFmD5nI.s 			page 110


 4139 030f 9742     		.uleb128 0x2117
 4140 0311 0C       		.uleb128 0xc
 4141 0312 00       		.byte	0
 4142 0313 00       		.byte	0
 4143 0314 3A       		.uleb128 0x3a
 4144 0315 2E       		.uleb128 0x2e
 4145 0316 01       		.byte	0x1
 4146 0317 3F       		.uleb128 0x3f
 4147 0318 0C       		.uleb128 0xc
 4148 0319 03       		.uleb128 0x3
 4149 031a 0E       		.uleb128 0xe
 4150 031b 3A       		.uleb128 0x3a
 4151 031c 0B       		.uleb128 0xb
 4152 031d 3B       		.uleb128 0x3b
 4153 031e 0B       		.uleb128 0xb
 4154 031f 27       		.uleb128 0x27
 4155 0320 0C       		.uleb128 0xc
 4156 0321 11       		.uleb128 0x11
 4157 0322 01       		.uleb128 0x1
 4158 0323 12       		.uleb128 0x12
 4159 0324 01       		.uleb128 0x1
 4160 0325 40       		.uleb128 0x40
 4161 0326 0A       		.uleb128 0xa
 4162 0327 9742     		.uleb128 0x2117
 4163 0329 0C       		.uleb128 0xc
 4164 032a 01       		.uleb128 0x1
 4165 032b 13       		.uleb128 0x13
 4166 032c 00       		.byte	0
 4167 032d 00       		.byte	0
 4168 032e 3B       		.uleb128 0x3b
 4169 032f 1D       		.uleb128 0x1d
 4170 0330 01       		.byte	0x1
 4171 0331 31       		.uleb128 0x31
 4172 0332 13       		.uleb128 0x13
 4173 0333 52       		.uleb128 0x52
 4174 0334 01       		.uleb128 0x1
 4175 0335 55       		.uleb128 0x55
 4176 0336 06       		.uleb128 0x6
 4177 0337 58       		.uleb128 0x58
 4178 0338 0B       		.uleb128 0xb
 4179 0339 59       		.uleb128 0x59
 4180 033a 0B       		.uleb128 0xb
 4181 033b 00       		.byte	0
 4182 033c 00       		.byte	0
 4183 033d 3C       		.uleb128 0x3c
 4184 033e 05       		.uleb128 0x5
 4185 033f 00       		.byte	0
 4186 0340 31       		.uleb128 0x31
 4187 0341 13       		.uleb128 0x13
 4188 0342 02       		.uleb128 0x2
 4189 0343 06       		.uleb128 0x6
 4190 0344 00       		.byte	0
 4191 0345 00       		.byte	0
 4192 0346 3D       		.uleb128 0x3d
 4193 0347 1D       		.uleb128 0x1d
 4194 0348 01       		.byte	0x1
 4195 0349 31       		.uleb128 0x31
ARM GAS  /tmp/ccFmD5nI.s 			page 111


 4196 034a 13       		.uleb128 0x13
 4197 034b 11       		.uleb128 0x11
 4198 034c 01       		.uleb128 0x1
 4199 034d 12       		.uleb128 0x12
 4200 034e 01       		.uleb128 0x1
 4201 034f 58       		.uleb128 0x58
 4202 0350 0B       		.uleb128 0xb
 4203 0351 59       		.uleb128 0x59
 4204 0352 05       		.uleb128 0x5
 4205 0353 00       		.byte	0
 4206 0354 00       		.byte	0
 4207 0355 3E       		.uleb128 0x3e
 4208 0356 2E       		.uleb128 0x2e
 4209 0357 01       		.byte	0x1
 4210 0358 3F       		.uleb128 0x3f
 4211 0359 0C       		.uleb128 0xc
 4212 035a 03       		.uleb128 0x3
 4213 035b 0E       		.uleb128 0xe
 4214 035c 3A       		.uleb128 0x3a
 4215 035d 0B       		.uleb128 0xb
 4216 035e 3B       		.uleb128 0x3b
 4217 035f 0B       		.uleb128 0xb
 4218 0360 27       		.uleb128 0x27
 4219 0361 0C       		.uleb128 0xc
 4220 0362 11       		.uleb128 0x11
 4221 0363 01       		.uleb128 0x1
 4222 0364 12       		.uleb128 0x12
 4223 0365 01       		.uleb128 0x1
 4224 0366 40       		.uleb128 0x40
 4225 0367 06       		.uleb128 0x6
 4226 0368 9642     		.uleb128 0x2116
 4227 036a 0C       		.uleb128 0xc
 4228 036b 01       		.uleb128 0x1
 4229 036c 13       		.uleb128 0x13
 4230 036d 00       		.byte	0
 4231 036e 00       		.byte	0
 4232 036f 3F       		.uleb128 0x3f
 4233 0370 898201   		.uleb128 0x4109
 4234 0373 00       		.byte	0
 4235 0374 11       		.uleb128 0x11
 4236 0375 01       		.uleb128 0x1
 4237 0376 31       		.uleb128 0x31
 4238 0377 13       		.uleb128 0x13
 4239 0378 00       		.byte	0
 4240 0379 00       		.byte	0
 4241 037a 40       		.uleb128 0x40
 4242 037b 2E       		.uleb128 0x2e
 4243 037c 01       		.byte	0x1
 4244 037d 03       		.uleb128 0x3
 4245 037e 0E       		.uleb128 0xe
 4246 037f 3A       		.uleb128 0x3a
 4247 0380 0B       		.uleb128 0xb
 4248 0381 3B       		.uleb128 0x3b
 4249 0382 05       		.uleb128 0x5
 4250 0383 27       		.uleb128 0x27
 4251 0384 0C       		.uleb128 0xc
 4252 0385 49       		.uleb128 0x49
ARM GAS  /tmp/ccFmD5nI.s 			page 112


 4253 0386 13       		.uleb128 0x13
 4254 0387 20       		.uleb128 0x20
 4255 0388 0B       		.uleb128 0xb
 4256 0389 01       		.uleb128 0x1
 4257 038a 13       		.uleb128 0x13
 4258 038b 00       		.byte	0
 4259 038c 00       		.byte	0
 4260 038d 41       		.uleb128 0x41
 4261 038e 05       		.uleb128 0x5
 4262 038f 00       		.byte	0
 4263 0390 03       		.uleb128 0x3
 4264 0391 0E       		.uleb128 0xe
 4265 0392 3A       		.uleb128 0x3a
 4266 0393 0B       		.uleb128 0xb
 4267 0394 3B       		.uleb128 0x3b
 4268 0395 05       		.uleb128 0x5
 4269 0396 49       		.uleb128 0x49
 4270 0397 13       		.uleb128 0x13
 4271 0398 00       		.byte	0
 4272 0399 00       		.byte	0
 4273 039a 42       		.uleb128 0x42
 4274 039b 2E       		.uleb128 0x2e
 4275 039c 01       		.byte	0x1
 4276 039d 03       		.uleb128 0x3
 4277 039e 0E       		.uleb128 0xe
 4278 039f 3A       		.uleb128 0x3a
 4279 03a0 0B       		.uleb128 0xb
 4280 03a1 3B       		.uleb128 0x3b
 4281 03a2 05       		.uleb128 0x5
 4282 03a3 27       		.uleb128 0x27
 4283 03a4 0C       		.uleb128 0xc
 4284 03a5 20       		.uleb128 0x20
 4285 03a6 0B       		.uleb128 0xb
 4286 03a7 01       		.uleb128 0x1
 4287 03a8 13       		.uleb128 0x13
 4288 03a9 00       		.byte	0
 4289 03aa 00       		.byte	0
 4290 03ab 43       		.uleb128 0x43
 4291 03ac 34       		.uleb128 0x34
 4292 03ad 00       		.byte	0
 4293 03ae 03       		.uleb128 0x3
 4294 03af 0E       		.uleb128 0xe
 4295 03b0 3A       		.uleb128 0x3a
 4296 03b1 0B       		.uleb128 0xb
 4297 03b2 3B       		.uleb128 0x3b
 4298 03b3 05       		.uleb128 0x5
 4299 03b4 49       		.uleb128 0x49
 4300 03b5 13       		.uleb128 0x13
 4301 03b6 00       		.byte	0
 4302 03b7 00       		.byte	0
 4303 03b8 44       		.uleb128 0x44
 4304 03b9 2E       		.uleb128 0x2e
 4305 03ba 00       		.byte	0
 4306 03bb 03       		.uleb128 0x3
 4307 03bc 0E       		.uleb128 0xe
 4308 03bd 3A       		.uleb128 0x3a
 4309 03be 0B       		.uleb128 0xb
ARM GAS  /tmp/ccFmD5nI.s 			page 113


 4310 03bf 3B       		.uleb128 0x3b
 4311 03c0 05       		.uleb128 0x5
 4312 03c1 27       		.uleb128 0x27
 4313 03c2 0C       		.uleb128 0xc
 4314 03c3 20       		.uleb128 0x20
 4315 03c4 0B       		.uleb128 0xb
 4316 03c5 00       		.byte	0
 4317 03c6 00       		.byte	0
 4318 03c7 45       		.uleb128 0x45
 4319 03c8 2E       		.uleb128 0x2e
 4320 03c9 00       		.byte	0
 4321 03ca 3F       		.uleb128 0x3f
 4322 03cb 0C       		.uleb128 0xc
 4323 03cc 3C       		.uleb128 0x3c
 4324 03cd 0C       		.uleb128 0xc
 4325 03ce 8740     		.uleb128 0x2007
 4326 03d0 0E       		.uleb128 0xe
 4327 03d1 03       		.uleb128 0x3
 4328 03d2 0E       		.uleb128 0xe
 4329 03d3 3A       		.uleb128 0x3a
 4330 03d4 0B       		.uleb128 0xb
 4331 03d5 3B       		.uleb128 0x3b
 4332 03d6 0B       		.uleb128 0xb
 4333 03d7 00       		.byte	0
 4334 03d8 00       		.byte	0
 4335 03d9 46       		.uleb128 0x46
 4336 03da 2E       		.uleb128 0x2e
 4337 03db 00       		.byte	0
 4338 03dc 3F       		.uleb128 0x3f
 4339 03dd 0C       		.uleb128 0xc
 4340 03de 3C       		.uleb128 0x3c
 4341 03df 0C       		.uleb128 0xc
 4342 03e0 8740     		.uleb128 0x2007
 4343 03e2 0E       		.uleb128 0xe
 4344 03e3 03       		.uleb128 0x3
 4345 03e4 0E       		.uleb128 0xe
 4346 03e5 3A       		.uleb128 0x3a
 4347 03e6 0B       		.uleb128 0xb
 4348 03e7 3B       		.uleb128 0x3b
 4349 03e8 05       		.uleb128 0x5
 4350 03e9 00       		.byte	0
 4351 03ea 00       		.byte	0
 4352 03eb 00       		.byte	0
 4353              		.section	.debug_loc,"",%progbits
 4354              	.Ldebug_loc0:
 4355              	.LLST12:
 4356 0000 14010000 		.4byte	.LFB117-.Ltext0
 4357 0004 16010000 		.4byte	.LCFI2-.Ltext0
 4358 0008 0200     		.2byte	0x2
 4359 000a 7D       		.byte	0x7d
 4360 000b 00       		.sleb128 0
 4361 000c 16010000 		.4byte	.LCFI2-.Ltext0
 4362 0010 2A010000 		.4byte	.LCFI3-.Ltext0
 4363 0014 0200     		.2byte	0x2
 4364 0016 7D       		.byte	0x7d
 4365 0017 10       		.sleb128 16
 4366 0018 2A010000 		.4byte	.LCFI3-.Ltext0
ARM GAS  /tmp/ccFmD5nI.s 			page 114


 4367 001c 2C010000 		.4byte	.LCFI4-.Ltext0
 4368 0020 0200     		.2byte	0x2
 4369 0022 7D       		.byte	0x7d
 4370 0023 00       		.sleb128 0
 4371 0024 2C010000 		.4byte	.LCFI4-.Ltext0
 4372 0028 54010000 		.4byte	.LCFI5-.Ltext0
 4373 002c 0200     		.2byte	0x2
 4374 002e 7D       		.byte	0x7d
 4375 002f 10       		.sleb128 16
 4376 0030 54010000 		.4byte	.LCFI5-.Ltext0
 4377 0034 58010000 		.4byte	.LCFI6-.Ltext0
 4378 0038 0200     		.2byte	0x2
 4379 003a 7D       		.byte	0x7d
 4380 003b 00       		.sleb128 0
 4381 003c 58010000 		.4byte	.LCFI6-.Ltext0
 4382 0040 74010000 		.4byte	.LFE117-.Ltext0
 4383 0044 0200     		.2byte	0x2
 4384 0046 7D       		.byte	0x7d
 4385 0047 10       		.sleb128 16
 4386 0048 00000000 		.4byte	0
 4387 004c 00000000 		.4byte	0
 4388              	.LLST13:
 4389 0050 14010000 		.4byte	.LVL19-.Ltext0
 4390 0054 3E010000 		.4byte	.LVL22-.Ltext0
 4391 0058 0100     		.2byte	0x1
 4392 005a 50       		.byte	0x50
 4393 005b 3E010000 		.4byte	.LVL22-.Ltext0
 4394 005f 58010000 		.4byte	.LVL23-.Ltext0
 4395 0063 0400     		.2byte	0x4
 4396 0065 F3       		.byte	0xf3
 4397 0066 01       		.uleb128 0x1
 4398 0067 50       		.byte	0x50
 4399 0068 9F       		.byte	0x9f
 4400 0069 58010000 		.4byte	.LVL23-.Ltext0
 4401 006d 5C010000 		.4byte	.LVL24-.Ltext0
 4402 0071 0100     		.2byte	0x1
 4403 0073 50       		.byte	0x50
 4404 0074 5C010000 		.4byte	.LVL24-.Ltext0
 4405 0078 74010000 		.4byte	.LFE117-.Ltext0
 4406 007c 0400     		.2byte	0x4
 4407 007e F3       		.byte	0xf3
 4408 007f 01       		.uleb128 0x1
 4409 0080 50       		.byte	0x50
 4410 0081 9F       		.byte	0x9f
 4411 0082 00000000 		.4byte	0
 4412 0086 00000000 		.4byte	0
 4413              	.LLST14:
 4414 008a 14010000 		.4byte	.LVL19-.Ltext0
 4415 008e 20010000 		.4byte	.LVL20-.Ltext0
 4416 0092 0200     		.2byte	0x2
 4417 0094 30       		.byte	0x30
 4418 0095 9F       		.byte	0x9f
 4419 0096 22010000 		.4byte	.LVL21-.Ltext0
 4420 009a 57010000 		.4byte	.LVL23-1-.Ltext0
 4421 009e 0100     		.2byte	0x1
 4422 00a0 52       		.byte	0x52
 4423 00a1 58010000 		.4byte	.LVL23-.Ltext0
ARM GAS  /tmp/ccFmD5nI.s 			page 115


 4424 00a5 66010000 		.4byte	.LVL25-.Ltext0
 4425 00a9 0100     		.2byte	0x1
 4426 00ab 52       		.byte	0x52
 4427 00ac 6C010000 		.4byte	.LVL26-.Ltext0
 4428 00b0 74010000 		.4byte	.LFE117-.Ltext0
 4429 00b4 0100     		.2byte	0x1
 4430 00b6 52       		.byte	0x52
 4431 00b7 00000000 		.4byte	0
 4432 00bb 00000000 		.4byte	0
 4433              	.LLST15:
 4434 00bf 3E010000 		.4byte	.LVL22-.Ltext0
 4435 00c3 57010000 		.4byte	.LVL23-1-.Ltext0
 4436 00c7 0100     		.2byte	0x1
 4437 00c9 50       		.byte	0x50
 4438 00ca 5C010000 		.4byte	.LVL24-.Ltext0
 4439 00ce 74010000 		.4byte	.LFE117-.Ltext0
 4440 00d2 0100     		.2byte	0x1
 4441 00d4 50       		.byte	0x50
 4442 00d5 00000000 		.4byte	0
 4443 00d9 00000000 		.4byte	0
 4444              	.LLST5:
 4445 00dd D0000000 		.4byte	.LFB116-.Ltext0
 4446 00e1 D4000000 		.4byte	.LCFI1-.Ltext0
 4447 00e5 0200     		.2byte	0x2
 4448 00e7 7D       		.byte	0x7d
 4449 00e8 00       		.sleb128 0
 4450 00e9 D4000000 		.4byte	.LCFI1-.Ltext0
 4451 00ed 14010000 		.4byte	.LFE116-.Ltext0
 4452 00f1 0200     		.2byte	0x2
 4453 00f3 7D       		.byte	0x7d
 4454 00f4 20       		.sleb128 32
 4455 00f5 00000000 		.4byte	0
 4456 00f9 00000000 		.4byte	0
 4457              	.LLST6:
 4458 00fd D0000000 		.4byte	.LVL13-.Ltext0
 4459 0101 E6000000 		.4byte	.LVL14-.Ltext0
 4460 0105 0100     		.2byte	0x1
 4461 0107 50       		.byte	0x50
 4462 0108 E6000000 		.4byte	.LVL14-.Ltext0
 4463 010c 0A010000 		.4byte	.LVL17-.Ltext0
 4464 0110 0100     		.2byte	0x1
 4465 0112 56       		.byte	0x56
 4466 0113 0A010000 		.4byte	.LVL17-.Ltext0
 4467 0117 0C010000 		.4byte	.LVL18-.Ltext0
 4468 011b 0100     		.2byte	0x1
 4469 011d 50       		.byte	0x50
 4470 011e 0C010000 		.4byte	.LVL18-.Ltext0
 4471 0122 14010000 		.4byte	.LFE116-.Ltext0
 4472 0126 0100     		.2byte	0x1
 4473 0128 56       		.byte	0x56
 4474 0129 00000000 		.4byte	0
 4475 012d 00000000 		.4byte	0
 4476              	.LLST7:
 4477 0131 D0000000 		.4byte	.LVL13-.Ltext0
 4478 0135 E9000000 		.4byte	.LVL15-1-.Ltext0
 4479 0139 0100     		.2byte	0x1
 4480 013b 51       		.byte	0x51
ARM GAS  /tmp/ccFmD5nI.s 			page 116


 4481 013c E9000000 		.4byte	.LVL15-1-.Ltext0
 4482 0140 0A010000 		.4byte	.LVL17-.Ltext0
 4483 0144 0400     		.2byte	0x4
 4484 0146 F3       		.byte	0xf3
 4485 0147 01       		.uleb128 0x1
 4486 0148 51       		.byte	0x51
 4487 0149 9F       		.byte	0x9f
 4488 014a 0A010000 		.4byte	.LVL17-.Ltext0
 4489 014e 14010000 		.4byte	.LFE116-.Ltext0
 4490 0152 0100     		.2byte	0x1
 4491 0154 51       		.byte	0x51
 4492 0155 00000000 		.4byte	0
 4493 0159 00000000 		.4byte	0
 4494              	.LLST8:
 4495 015d D0000000 		.4byte	.LVL13-.Ltext0
 4496 0161 E9000000 		.4byte	.LVL15-1-.Ltext0
 4497 0165 0100     		.2byte	0x1
 4498 0167 52       		.byte	0x52
 4499 0168 E9000000 		.4byte	.LVL15-1-.Ltext0
 4500 016c 0A010000 		.4byte	.LVL17-.Ltext0
 4501 0170 0400     		.2byte	0x4
 4502 0172 F3       		.byte	0xf3
 4503 0173 01       		.uleb128 0x1
 4504 0174 52       		.byte	0x52
 4505 0175 9F       		.byte	0x9f
 4506 0176 0A010000 		.4byte	.LVL17-.Ltext0
 4507 017a 14010000 		.4byte	.LFE116-.Ltext0
 4508 017e 0100     		.2byte	0x1
 4509 0180 52       		.byte	0x52
 4510 0181 00000000 		.4byte	0
 4511 0185 00000000 		.4byte	0
 4512              	.LLST9:
 4513 0189 D0000000 		.4byte	.LVL13-.Ltext0
 4514 018d E9000000 		.4byte	.LVL15-1-.Ltext0
 4515 0191 0100     		.2byte	0x1
 4516 0193 53       		.byte	0x53
 4517 0194 E9000000 		.4byte	.LVL15-1-.Ltext0
 4518 0198 0A010000 		.4byte	.LVL17-.Ltext0
 4519 019c 0100     		.2byte	0x1
 4520 019e 57       		.byte	0x57
 4521 019f 0A010000 		.4byte	.LVL17-.Ltext0
 4522 01a3 14010000 		.4byte	.LFE116-.Ltext0
 4523 01a7 0100     		.2byte	0x1
 4524 01a9 53       		.byte	0x53
 4525 01aa 00000000 		.4byte	0
 4526 01ae 00000000 		.4byte	0
 4527              	.LLST10:
 4528 01b2 D0000000 		.4byte	.LVL13-.Ltext0
 4529 01b6 0A010000 		.4byte	.LVL17-.Ltext0
 4530 01ba 0200     		.2byte	0x2
 4531 01bc 91       		.byte	0x91
 4532 01bd 00       		.sleb128 0
 4533 01be 0A010000 		.4byte	.LVL17-.Ltext0
 4534 01c2 14010000 		.4byte	.LFE116-.Ltext0
 4535 01c6 0200     		.2byte	0x2
 4536 01c8 91       		.byte	0x91
 4537 01c9 00       		.sleb128 0
ARM GAS  /tmp/ccFmD5nI.s 			page 117


 4538 01ca 00000000 		.4byte	0
 4539 01ce 00000000 		.4byte	0
 4540              	.LLST11:
 4541 01d2 EA000000 		.4byte	.LVL15-.Ltext0
 4542 01d6 06010000 		.4byte	.LVL16-.Ltext0
 4543 01da 0100     		.2byte	0x1
 4544 01dc 50       		.byte	0x50
 4545 01dd 00000000 		.4byte	0
 4546 01e1 00000000 		.4byte	0
 4547              	.LLST2:
 4548 01e5 5A000000 		.4byte	.LVL6-.Ltext0
 4549 01e9 62000000 		.4byte	.LVL7-.Ltext0
 4550 01ed 0D00     		.2byte	0xd
 4551 01ef 72       		.byte	0x72
 4552 01f0 00       		.sleb128 0
 4553 01f1 F7       		.byte	0xf7
 4554 01f2 25       		.uleb128 0x25
 4555 01f3 0A       		.byte	0xa
 4556 01f4 E803     		.2byte	0x3e8
 4557 01f6 F7       		.byte	0xf7
 4558 01f7 25       		.uleb128 0x25
 4559 01f8 1B       		.byte	0x1b
 4560 01f9 F7       		.byte	0xf7
 4561 01fa 00       		.uleb128 0
 4562 01fb 9F       		.byte	0x9f
 4563 01fc 62000000 		.4byte	.LVL7-.Ltext0
 4564 0200 64000000 		.4byte	.LVL8-.Ltext0
 4565 0204 0100     		.2byte	0x1
 4566 0206 53       		.byte	0x53
 4567 0207 64000000 		.4byte	.LVL8-.Ltext0
 4568 020b 68000000 		.4byte	.LVL10-.Ltext0
 4569 020f 0300     		.2byte	0x3
 4570 0211 73       		.byte	0x73
 4571 0212 01       		.sleb128 1
 4572 0213 9F       		.byte	0x9f
 4573 0214 68000000 		.4byte	.LVL10-.Ltext0
 4574 0218 6E000000 		.4byte	.LVL11-.Ltext0
 4575 021c 0600     		.2byte	0x6
 4576 021e 71       		.byte	0x71
 4577 021f 04       		.sleb128 4
 4578 0220 06       		.byte	0x6
 4579 0221 23       		.byte	0x23
 4580 0222 01       		.uleb128 0x1
 4581 0223 9F       		.byte	0x9f
 4582 0224 6E000000 		.4byte	.LVL11-.Ltext0
 4583 0228 76000000 		.4byte	.LVL12-.Ltext0
 4584 022c 0D00     		.2byte	0xd
 4585 022e 72       		.byte	0x72
 4586 022f 00       		.sleb128 0
 4587 0230 F7       		.byte	0xf7
 4588 0231 25       		.uleb128 0x25
 4589 0232 0A       		.byte	0xa
 4590 0233 E803     		.2byte	0x3e8
 4591 0235 F7       		.byte	0xf7
 4592 0236 25       		.uleb128 0x25
 4593 0237 1B       		.byte	0x1b
 4594 0238 F7       		.byte	0xf7
ARM GAS  /tmp/ccFmD5nI.s 			page 118


 4595 0239 00       		.uleb128 0
 4596 023a 9F       		.byte	0x9f
 4597 023b 00000000 		.4byte	0
 4598 023f 00000000 		.4byte	0
 4599              	.LLST3:
 4600 0243 66000000 		.4byte	.LVL9-.Ltext0
 4601 0247 6E000000 		.4byte	.LVL11-.Ltext0
 4602 024b 0200     		.2byte	0x2
 4603 024d 3F       		.byte	0x3f
 4604 024e 9F       		.byte	0x9f
 4605 024f 00000000 		.4byte	0
 4606 0253 00000000 		.4byte	0
 4607              	.LLST4:
 4608 0257 66000000 		.4byte	.LVL9-.Ltext0
 4609 025b 6E000000 		.4byte	.LVL11-.Ltext0
 4610 025f 0300     		.2byte	0x3
 4611 0261 09       		.byte	0x9
 4612 0262 FF       		.byte	0xff
 4613 0263 9F       		.byte	0x9f
 4614 0264 00000000 		.4byte	0
 4615 0268 00000000 		.4byte	0
 4616              	.LLST0:
 4617 026c 00000000 		.4byte	.LFB112-.Ltext0
 4618 0270 02000000 		.4byte	.LCFI0-.Ltext0
 4619 0274 0200     		.2byte	0x2
 4620 0276 7D       		.byte	0x7d
 4621 0277 00       		.sleb128 0
 4622 0278 02000000 		.4byte	.LCFI0-.Ltext0
 4623 027c 54000000 		.4byte	.LFE112-.Ltext0
 4624 0280 0200     		.2byte	0x2
 4625 0282 7D       		.byte	0x7d
 4626 0283 10       		.sleb128 16
 4627 0284 00000000 		.4byte	0
 4628 0288 00000000 		.4byte	0
 4629              	.LLST1:
 4630 028c 18000000 		.4byte	.LVL0-.Ltext0
 4631 0290 1A000000 		.4byte	.LVL1-.Ltext0
 4632 0294 0200     		.2byte	0x2
 4633 0296 30       		.byte	0x30
 4634 0297 9F       		.byte	0x9f
 4635 0298 1A000000 		.4byte	.LVL1-.Ltext0
 4636 029c 4C000000 		.4byte	.LVL4-.Ltext0
 4637 02a0 0100     		.2byte	0x1
 4638 02a2 56       		.byte	0x56
 4639 02a3 4C000000 		.4byte	.LVL4-.Ltext0
 4640 02a7 4E000000 		.4byte	.LVL5-.Ltext0
 4641 02ab 0300     		.2byte	0x3
 4642 02ad 76       		.byte	0x76
 4643 02ae 01       		.sleb128 1
 4644 02af 9F       		.byte	0x9f
 4645 02b0 00000000 		.4byte	0
 4646 02b4 00000000 		.4byte	0
 4647              		.section	.debug_aranges,"",%progbits
 4648 0000 1C000000 		.4byte	0x1c
 4649 0004 0200     		.2byte	0x2
 4650 0006 00000000 		.4byte	.Ldebug_info0
 4651 000a 04       		.byte	0x4
ARM GAS  /tmp/ccFmD5nI.s 			page 119


 4652 000b 00       		.byte	0
 4653 000c 0000     		.2byte	0
 4654 000e 0000     		.2byte	0
 4655 0010 00000000 		.4byte	.Ltext0
 4656 0014 8E010000 		.4byte	.Letext0-.Ltext0
 4657 0018 00000000 		.4byte	0
 4658 001c 00000000 		.4byte	0
 4659              		.section	.debug_ranges,"",%progbits
 4660              	.Ldebug_ranges0:
 4661 0000 56000000 		.4byte	.LBB14-.Ltext0
 4662 0004 58000000 		.4byte	.LBE14-.Ltext0
 4663 0008 62000000 		.4byte	.LBB19-.Ltext0
 4664 000c 76000000 		.4byte	.LBE19-.Ltext0
 4665 0010 00000000 		.4byte	0
 4666 0014 00000000 		.4byte	0
 4667              		.section	.debug_line,"",%progbits
 4668              	.Ldebug_line0:
 4669 0000 0A030000 		.section	.debug_str,"MS",%progbits,1
 4669      02003B02 
 4669      00000201 
 4669      FB0E0D00 
 4669      01010101 
 4670              	.LASF109:
 4671 0000 52534552 		.ascii	"RSERVED1\000"
 4671      56454431 
 4671      00
 4672              	.LASF11:
 4673 0009 5254435F 		.ascii	"RTC_WKUP_IRQn\000"
 4673      574B5550 
 4673      5F495251 
 4673      6E00
 4674              	.LASF16:
 4675 0017 45585449 		.ascii	"EXTI2_IRQn\000"
 4675      325F4952 
 4675      516E00
 4676              	.LASF259:
 4677 0022 544D5F54 		.ascii	"TM_Time2\000"
 4677      696D6532 
 4677      00
 4678              	.LASF25:
 4679 002b 444D4131 		.ascii	"DMA1_Stream6_IRQn\000"
 4679      5F537472 
 4679      65616D36 
 4679      5F495251 
 4679      6E00
 4680              	.LASF52:
 4681 003d 54494D38 		.ascii	"TIM8_UP_TIM13_IRQn\000"
 4681      5F55505F 
 4681      54494D31 
 4681      335F4952 
 4681      516E00
 4682              	.LASF249:
 4683 0050 5F5F6C6F 		.ascii	"__locale_t\000"
 4683      63616C65 
 4683      5F7400
 4684              	.LASF148:
 4685 005b 5F5F7661 		.ascii	"__value\000"
ARM GAS  /tmp/ccFmD5nI.s 			page 120


 4685      6C756500 
 4686              	.LASF217:
 4687 0063 5F5F7366 		.ascii	"__sf\000"
 4687      00
 4688              	.LASF184:
 4689 0068 5F726561 		.ascii	"_read\000"
 4689      6400
 4690              	.LASF185:
 4691 006e 5F777269 		.ascii	"_write\000"
 4691      746500
 4692              	.LASF104:
 4693 0075 696E7433 		.ascii	"int32_t\000"
 4693      325F7400 
 4694              	.LASF228:
 4695 007d 5F617363 		.ascii	"_asctime_buf\000"
 4695      74696D65 
 4695      5F627566 
 4695      00
 4696              	.LASF211:
 4697 008a 5F637674 		.ascii	"_cvtlen\000"
 4697      6C656E00 
 4698              	.LASF247:
 4699 0092 5F756E75 		.ascii	"_unused\000"
 4699      73656400 
 4700              	.LASF158:
 4701 009a 5F5F746D 		.ascii	"__tm\000"
 4701      00
 4702              	.LASF243:
 4703 009f 5F776373 		.ascii	"_wcsrtombs_state\000"
 4703      72746F6D 
 4703      62735F73 
 4703      74617465 
 4703      00
 4704              	.LASF189:
 4705 00b0 5F6E6275 		.ascii	"_nbuf\000"
 4705      6600
 4706              	.LASF159:
 4707 00b6 5F5F746D 		.ascii	"__tm_sec\000"
 4707      5F736563 
 4707      00
 4708              	.LASF65:
 4709 00bf 444D4132 		.ascii	"DMA2_Stream1_IRQn\000"
 4709      5F537472 
 4709      65616D31 
 4709      5F495251 
 4709      6E00
 4710              	.LASF236:
 4711 00d1 5F6C3634 		.ascii	"_l64a_buf\000"
 4711      615F6275 
 4711      6600
 4712              	.LASF121:
 4713 00db 56544F52 		.ascii	"VTOR\000"
 4713      00
 4714              	.LASF59:
 4715 00e0 53504933 		.ascii	"SPI3_IRQn\000"
 4715      5F495251 
 4715      6E00
ARM GAS  /tmp/ccFmD5nI.s 			page 121


 4716              	.LASF12:
 4717 00ea 464C4153 		.ascii	"FLASH_IRQn\000"
 4717      485F4952 
 4717      516E00
 4718              	.LASF86:
 4719 00f5 44434D49 		.ascii	"DCMI_IRQn\000"
 4719      5F495251 
 4719      6E00
 4720              	.LASF296:
 4721 00ff 2F686F6D 		.ascii	"/home/sticky/Projects/stuff/stm32f4_usb\000"
 4721      652F7374 
 4721      69636B79 
 4721      2F50726F 
 4721      6A656374 
 4722              	.LASF193:
 4723 0127 5F6C6F63 		.ascii	"_lock\000"
 4723      6B00
 4724              	.LASF224:
 4725 012d 5F6D756C 		.ascii	"_mult\000"
 4725      7400
 4726              	.LASF36:
 4727 0133 54494D32 		.ascii	"TIM2_IRQn\000"
 4727      5F495251 
 4727      6E00
 4728              	.LASF112:
 4729 013d 49435052 		.ascii	"ICPR\000"
 4729      00
 4730              	.LASF72:
 4731 0142 43414E32 		.ascii	"CAN2_RX0_IRQn\000"
 4731      5F525830 
 4731      5F495251 
 4731      6E00
 4732              	.LASF79:
 4733 0150 55534152 		.ascii	"USART6_IRQn\000"
 4733      54365F49 
 4733      52516E00 
 4734              	.LASF145:
 4735 015c 5F5F7763 		.ascii	"__wch\000"
 4735      6800
 4736              	.LASF93:
 4737 0162 5F5F7569 		.ascii	"__uint8_t\000"
 4737      6E74385F 
 4737      7400
 4738              	.LASF44:
 4739 016c 53504932 		.ascii	"SPI2_IRQn\000"
 4739      5F495251 
 4739      6E00
 4740              	.LASF51:
 4741 0176 54494D38 		.ascii	"TIM8_BRK_TIM12_IRQn\000"
 4741      5F42524B 
 4741      5F54494D 
 4741      31325F49 
 4741      52516E00 
 4742              	.LASF181:
 4743 018a 5F66696C 		.ascii	"_file\000"
 4743      6500
 4744              	.LASF288:
ARM GAS  /tmp/ccFmD5nI.s 			page 122


 4745 0190 72657375 		.ascii	"result\000"
 4745      6C7400
 4746              	.LASF168:
 4747 0197 5F6F6E5F 		.ascii	"_on_exit_args\000"
 4747      65786974 
 4747      5F617267 
 4747      7300
 4748              	.LASF122:
 4749 01a5 41495243 		.ascii	"AIRCR\000"
 4749      5200
 4750              	.LASF268:
 4751 01ab 544D5F44 		.ascii	"TM_DELAY_TimerAutoReloadValue\000"
 4751      454C4159 
 4751      5F54696D 
 4751      65724175 
 4751      746F5265 
 4752              	.LASF239:
 4753 01c9 5F6D6272 		.ascii	"_mbrlen_state\000"
 4753      6C656E5F 
 4753      73746174 
 4753      6500
 4754              	.LASF98:
 4755 01d7 6C6F6E67 		.ascii	"long int\000"
 4755      20696E74 
 4755      00
 4756              	.LASF250:
 4757 01e0 5F696D70 		.ascii	"_impure_ptr\000"
 4757      7572655F 
 4757      70747200 
 4758              	.LASF208:
 4759 01ec 5F726573 		.ascii	"_result_k\000"
 4759      756C745F 
 4759      6B00
 4760              	.LASF178:
 4761 01f6 5F73697A 		.ascii	"_size\000"
 4761      6500
 4762              	.LASF119:
 4763 01fc 43505549 		.ascii	"CPUID\000"
 4763      4400
 4764              	.LASF254:
 4765 0202 456E6162 		.ascii	"Enabled\000"
 4765      6C656400 
 4766              	.LASF264:
 4767 020a 54696D65 		.ascii	"Timers\000"
 4767      727300
 4768              	.LASF282:
 4769 0211 53797354 		.ascii	"SysTick_Handler\000"
 4769      69636B5F 
 4769      48616E64 
 4769      6C657200 
 4770              	.LASF229:
 4771 0221 5F6C6F63 		.ascii	"_localtime_buf\000"
 4771      616C7469 
 4771      6D655F62 
 4771      756600
 4772              	.LASF76:
 4773 0230 444D4132 		.ascii	"DMA2_Stream5_IRQn\000"
ARM GAS  /tmp/ccFmD5nI.s 			page 123


 4773      5F537472 
 4773      65616D35 
 4773      5F495251 
 4773      6E00
 4774              	.LASF284:
 4775 0242 4952516E 		.ascii	"IRQn\000"
 4775      00
 4776              	.LASF34:
 4777 0247 54494D31 		.ascii	"TIM1_TRG_COM_TIM11_IRQn\000"
 4777      5F545247 
 4777      5F434F4D 
 4777      5F54494D 
 4777      31315F49 
 4778              	.LASF163:
 4779 025f 5F5F746D 		.ascii	"__tm_mon\000"
 4779      5F6D6F6E 
 4779      00
 4780              	.LASF279:
 4781 0268 544D5F44 		.ascii	"TM_DELAY_EnableDelayTimer\000"
 4781      454C4159 
 4781      5F456E61 
 4781      626C6544 
 4781      656C6179 
 4782              	.LASF293:
 4783 0282 544D5F44 		.ascii	"TM_DELAY_1msHandler\000"
 4783      454C4159 
 4783      5F316D73 
 4783      48616E64 
 4783      6C657200 
 4784              	.LASF7:
 4785 0296 53797354 		.ascii	"SysTick_IRQn\000"
 4785      69636B5F 
 4785      4952516E 
 4785      00
 4786              	.LASF47:
 4787 02a3 55534152 		.ascii	"USART3_IRQn\000"
 4787      54335F49 
 4787      52516E00 
 4788              	.LASF120:
 4789 02af 49435352 		.ascii	"ICSR\000"
 4789      00
 4790              	.LASF226:
 4791 02b4 5F756E75 		.ascii	"_unused_rand\000"
 4791      7365645F 
 4791      72616E64 
 4791      00
 4792              	.LASF91:
 4793 02c1 7369676E 		.ascii	"signed char\000"
 4793      65642063 
 4793      68617200 
 4794              	.LASF103:
 4795 02cd 75696E74 		.ascii	"uint8_t\000"
 4795      385F7400 
 4796              	.LASF269:
 4797 02d5 544D5F44 		.ascii	"TM_DELAY_TimerAutoReload\000"
 4797      454C4159 
 4797      5F54696D 
ARM GAS  /tmp/ccFmD5nI.s 			page 124


 4797      65724175 
 4797      746F5265 
 4798              	.LASF21:
 4799 02ee 444D4131 		.ascii	"DMA1_Stream2_IRQn\000"
 4799      5F537472 
 4799      65616D32 
 4799      5F495251 
 4799      6E00
 4800              	.LASF107:
 4801 0300 52455345 		.ascii	"RESERVED0\000"
 4801      52564544 
 4801      3000
 4802              	.LASF94:
 4803 030a 756E7369 		.ascii	"unsigned char\000"
 4803      676E6564 
 4803      20636861 
 4803      7200
 4804              	.LASF68:
 4805 0318 444D4132 		.ascii	"DMA2_Stream4_IRQn\000"
 4805      5F537472 
 4805      65616D34 
 4805      5F495251 
 4805      6E00
 4806              	.LASF115:
 4807 032a 52455345 		.ascii	"RESERVED4\000"
 4807      52564544 
 4807      3400
 4808              	.LASF116:
 4809 0334 52455345 		.ascii	"RESERVED5\000"
 4809      52564544 
 4809      3500
 4810              	.LASF114:
 4811 033e 49414252 		.ascii	"IABR\000"
 4811      00
 4812              	.LASF203:
 4813 0343 5F756E73 		.ascii	"_unspecified_locale_info\000"
 4813      70656369 
 4813      66696564 
 4813      5F6C6F63 
 4813      616C655F 
 4814              	.LASF40:
 4815 035c 49324331 		.ascii	"I2C1_ER_IRQn\000"
 4815      5F45525F 
 4815      4952516E 
 4815      00
 4816              	.LASF196:
 4817 0369 5F726565 		.ascii	"_reent\000"
 4817      6E7400
 4818              	.LASF251:
 4819 0370 5F676C6F 		.ascii	"_global_impure_ptr\000"
 4819      62616C5F 
 4819      696D7075 
 4819      72655F70 
 4819      747200
 4820              	.LASF258:
 4821 0383 544D5F54 		.ascii	"TM_Time\000"
 4821      696D6500 
ARM GAS  /tmp/ccFmD5nI.s 			page 125


 4822              	.LASF74:
 4823 038b 43414E32 		.ascii	"CAN2_SCE_IRQn\000"
 4823      5F534345 
 4823      5F495251 
 4823      6E00
 4824              	.LASF111:
 4825 0399 52455345 		.ascii	"RESERVED2\000"
 4825      52564544 
 4825      3200
 4826              	.LASF113:
 4827 03a3 52455345 		.ascii	"RESERVED3\000"
 4827      52564544 
 4827      3300
 4828              	.LASF58:
 4829 03ad 54494D35 		.ascii	"TIM5_IRQn\000"
 4829      5F495251 
 4829      6E00
 4830              	.LASF3:
 4831 03b7 55736167 		.ascii	"UsageFault_IRQn\000"
 4831      65466175 
 4831      6C745F49 
 4831      52516E00 
 4832              	.LASF151:
 4833 03c7 63686172 		.ascii	"char\000"
 4833      00
 4834              	.LASF175:
 4835 03cc 5F666E73 		.ascii	"_fns\000"
 4835      00
 4836              	.LASF133:
 4837 03d1 5343425F 		.ascii	"SCB_Type\000"
 4837      54797065 
 4837      00
 4838              	.LASF187:
 4839 03da 5F636C6F 		.ascii	"_close\000"
 4839      736500
 4840              	.LASF126:
 4841 03e1 44465352 		.ascii	"DFSR\000"
 4841      00
 4842              	.LASF28:
 4843 03e6 43414E31 		.ascii	"CAN1_RX0_IRQn\000"
 4843      5F525830 
 4843      5F495251 
 4843      6E00
 4844              	.LASF198:
 4845 03f4 5F737464 		.ascii	"_stdin\000"
 4845      696E00
 4846              	.LASF125:
 4847 03fb 48465352 		.ascii	"HFSR\000"
 4847      00
 4848              	.LASF260:
 4849 0400 6D756C74 		.ascii	"mult\000"
 4849      00
 4850              	.LASF270:
 4851 0405 544D5F44 		.ascii	"TM_DELAY_TimerReset\000"
 4851      454C4159 
 4851      5F54696D 
 4851      65725265 
ARM GAS  /tmp/ccFmD5nI.s 			page 126


 4851      73657400 
 4852              	.LASF38:
 4853 0419 54494D34 		.ascii	"TIM4_IRQn\000"
 4853      5F495251 
 4853      6E00
 4854              	.LASF46:
 4855 0423 55534152 		.ascii	"USART2_IRQn\000"
 4855      54325F49 
 4855      52516E00 
 4856              	.LASF290:
 4857 042f 5F5F656E 		.ascii	"__enable_irq\000"
 4857      61626C65 
 4857      5F697271 
 4857      00
 4858              	.LASF123:
 4859 043c 53484353 		.ascii	"SHCSR\000"
 4859      5200
 4860              	.LASF292:
 4861 0442 6D616C6C 		.ascii	"malloc\000"
 4861      6F6300
 4862              	.LASF117:
 4863 0449 53544952 		.ascii	"STIR\000"
 4863      00
 4864              	.LASF39:
 4865 044e 49324331 		.ascii	"I2C1_EV_IRQn\000"
 4865      5F45565F 
 4865      4952516E 
 4865      00
 4866              	.LASF183:
 4867 045b 5F636F6F 		.ascii	"_cookie\000"
 4867      6B696500 
 4868              	.LASF276:
 4869 0463 53746172 		.ascii	"StartTimer\000"
 4869      7454696D 
 4869      657200
 4870              	.LASF156:
 4871 046e 5F776473 		.ascii	"_wds\000"
 4871      00
 4872              	.LASF248:
 4873 0473 5F5F6C6F 		.ascii	"__lock\000"
 4873      636B00
 4874              	.LASF215:
 4875 047a 5F736967 		.ascii	"_sig_func\000"
 4875      5F66756E 
 4875      6300
 4876              	.LASF191:
 4877 0484 5F6F6666 		.ascii	"_offset\000"
 4877      73657400 
 4878              	.LASF212:
 4879 048c 5F637674 		.ascii	"_cvtbuf\000"
 4879      62756600 
 4880              	.LASF35:
 4881 0494 54494D31 		.ascii	"TIM1_CC_IRQn\000"
 4881      5F43435F 
 4881      4952516E 
 4881      00
 4882              	.LASF88:
ARM GAS  /tmp/ccFmD5nI.s 			page 127


 4883 04a1 48415348 		.ascii	"HASH_RNG_IRQn\000"
 4883      5F524E47 
 4883      5F495251 
 4883      6E00
 4884              	.LASF15:
 4885 04af 45585449 		.ascii	"EXTI1_IRQn\000"
 4885      315F4952 
 4885      516E00
 4886              	.LASF27:
 4887 04ba 43414E31 		.ascii	"CAN1_TX_IRQn\000"
 4887      5F54585F 
 4887      4952516E 
 4887      00
 4888              	.LASF24:
 4889 04c7 444D4131 		.ascii	"DMA1_Stream5_IRQn\000"
 4889      5F537472 
 4889      65616D35 
 4889      5F495251 
 4889      6E00
 4890              	.LASF53:
 4891 04d9 54494D38 		.ascii	"TIM8_TRG_COM_TIM14_IRQn\000"
 4891      5F545247 
 4891      5F434F4D 
 4891      5F54494D 
 4891      31345F49 
 4892              	.LASF78:
 4893 04f1 444D4132 		.ascii	"DMA2_Stream7_IRQn\000"
 4893      5F537472 
 4893      65616D37 
 4893      5F495251 
 4893      6E00
 4894              	.LASF75:
 4895 0503 4F54475F 		.ascii	"OTG_FS_IRQn\000"
 4895      46535F49 
 4895      52516E00 
 4896              	.LASF0:
 4897 050f 4E6F6E4D 		.ascii	"NonMaskableInt_IRQn\000"
 4897      61736B61 
 4897      626C6549 
 4897      6E745F49 
 4897      52516E00 
 4898              	.LASF8:
 4899 0523 57574447 		.ascii	"WWDG_IRQn\000"
 4899      5F495251 
 4899      6E00
 4900              	.LASF209:
 4901 052d 5F703573 		.ascii	"_p5s\000"
 4901      00
 4902              	.LASF84:
 4903 0532 4F54475F 		.ascii	"OTG_HS_WKUP_IRQn\000"
 4903      48535F57 
 4903      4B55505F 
 4903      4952516E 
 4903      00
 4904              	.LASF1:
 4905 0543 4D656D6F 		.ascii	"MemoryManagement_IRQn\000"
 4905      72794D61 
ARM GAS  /tmp/ccFmD5nI.s 			page 128


 4905      6E616765 
 4905      6D656E74 
 4905      5F495251 
 4906              	.LASF179:
 4907 0559 5F5F7346 		.ascii	"__sFILE\000"
 4907      494C4500 
 4908              	.LASF205:
 4909 0561 5F5F7364 		.ascii	"__sdidinit\000"
 4909      6964696E 
 4909      697400
 4910              	.LASF195:
 4911 056c 5F666C61 		.ascii	"_flags2\000"
 4911      67733200 
 4912              	.LASF139:
 4913 0574 53797374 		.ascii	"SystemCoreClock\000"
 4913      656D436F 
 4913      7265436C 
 4913      6F636B00 
 4914              	.LASF10:
 4915 0584 54414D50 		.ascii	"TAMP_STAMP_IRQn\000"
 4915      5F535441 
 4915      4D505F49 
 4915      52516E00 
 4916              	.LASF30:
 4917 0594 43414E31 		.ascii	"CAN1_SCE_IRQn\000"
 4917      5F534345 
 4917      5F495251 
 4917      6E00
 4918              	.LASF92:
 4919 05a2 4952516E 		.ascii	"IRQn_Type\000"
 4919      5F547970 
 4919      6500
 4920              	.LASF278:
 4921 05ac 544D5F44 		.ascii	"TM_DELAY_DisableDelayTimer\000"
 4921      454C4159 
 4921      5F446973 
 4921      61626C65 
 4921      44656C61 
 4922              	.LASF295:
 4923 05c7 696E632F 		.ascii	"inc/user_libs/tm_stm32f4_delay.c\000"
 4923      75736572 
 4923      5F6C6962 
 4923      732F746D 
 4923      5F73746D 
 4924              	.LASF64:
 4925 05e8 444D4132 		.ascii	"DMA2_Stream0_IRQn\000"
 4925      5F537472 
 4925      65616D30 
 4925      5F495251 
 4925      6E00
 4926              	.LASF197:
 4927 05fa 5F657272 		.ascii	"_errno\000"
 4927      6E6F00
 4928              	.LASF237:
 4929 0601 5F736967 		.ascii	"_signal_buf\000"
 4929      6E616C5F 
 4929      62756600 
ARM GAS  /tmp/ccFmD5nI.s 			page 129


 4930              	.LASF255:
 4931 060d 43616C6C 		.ascii	"Callback\000"
 4931      6261636B 
 4931      00
 4932              	.LASF297:
 4933 0616 4E564943 		.ascii	"NVIC_SetPriority\000"
 4933      5F536574 
 4933      5072696F 
 4933      72697479 
 4933      00
 4934              	.LASF42:
 4935 0627 49324332 		.ascii	"I2C2_ER_IRQn\000"
 4935      5F45525F 
 4935      4952516E 
 4935      00
 4936              	.LASF157:
 4937 0634 5F426967 		.ascii	"_Bigint\000"
 4937      696E7400 
 4938              	.LASF154:
 4939 063c 5F6D6178 		.ascii	"_maxwds\000"
 4939      77647300 
 4940              	.LASF289:
 4941 0644 5F5F6469 		.ascii	"__disable_irq\000"
 4941      7361626C 
 4941      655F6972 
 4941      7100
 4942              	.LASF206:
 4943 0652 5F5F636C 		.ascii	"__cleanup\000"
 4943      65616E75 
 4943      7000
 4944              	.LASF2:
 4945 065c 42757346 		.ascii	"BusFault_IRQn\000"
 4945      61756C74 
 4945      5F495251 
 4945      6E00
 4946              	.LASF283:
 4947 066a 7469636B 		.ascii	"ticks\000"
 4947      7300
 4948              	.LASF214:
 4949 0670 5F617465 		.ascii	"_atexit0\000"
 4949      78697430 
 4949      00
 4950              	.LASF61:
 4951 0679 55415254 		.ascii	"UART5_IRQn\000"
 4951      355F4952 
 4951      516E00
 4952              	.LASF32:
 4953 0684 54494D31 		.ascii	"TIM1_BRK_TIM9_IRQn\000"
 4953      5F42524B 
 4953      5F54494D 
 4953      395F4952 
 4953      516E00
 4954              	.LASF99:
 4955 0697 5F5F7569 		.ascii	"__uint32_t\000"
 4955      6E743332 
 4955      5F7400
 4956              	.LASF202:
ARM GAS  /tmp/ccFmD5nI.s 			page 130


 4957 06a2 5F656D65 		.ascii	"_emergency\000"
 4957      7267656E 
 4957      637900
 4958              	.LASF234:
 4959 06ad 5F6D6274 		.ascii	"_mbtowc_state\000"
 4959      6F77635F 
 4959      73746174 
 4959      6500
 4960              	.LASF63:
 4961 06bb 54494D37 		.ascii	"TIM7_IRQn\000"
 4961      5F495251 
 4961      6E00
 4962              	.LASF101:
 4963 06c5 6C6F6E67 		.ascii	"long long int\000"
 4963      206C6F6E 
 4963      6720696E 
 4963      7400
 4964              	.LASF70:
 4965 06d3 4554485F 		.ascii	"ETH_WKUP_IRQn\000"
 4965      574B5550 
 4965      5F495251 
 4965      6E00
 4966              	.LASF85:
 4967 06e1 4F54475F 		.ascii	"OTG_HS_IRQn\000"
 4967      48535F49 
 4967      52516E00 
 4968              	.LASF220:
 4969 06ed 5F6E696F 		.ascii	"_niobs\000"
 4969      627300
 4970              	.LASF263:
 4971 06f4 436F756E 		.ascii	"Count\000"
 4971      7400
 4972              	.LASF43:
 4973 06fa 53504931 		.ascii	"SPI1_IRQn\000"
 4973      5F495251 
 4973      6E00
 4974              	.LASF216:
 4975 0704 5F5F7367 		.ascii	"__sglue\000"
 4975      6C756500 
 4976              	.LASF246:
 4977 070c 5F6E6D61 		.ascii	"_nmalloc\000"
 4977      6C6C6F63 
 4977      00
 4978              	.LASF4:
 4979 0715 53564361 		.ascii	"SVCall_IRQn\000"
 4979      6C6C5F49 
 4979      52516E00 
 4980              	.LASF230:
 4981 0721 5F67616D 		.ascii	"_gamma_signgam\000"
 4981      6D615F73 
 4981      69676E67 
 4981      616D00
 4982              	.LASF210:
 4983 0730 5F667265 		.ascii	"_freelist\000"
 4983      656C6973 
 4983      7400
 4984              	.LASF221:
ARM GAS  /tmp/ccFmD5nI.s 			page 131


 4985 073a 5F696F62 		.ascii	"_iobs\000"
 4985      7300
 4986              	.LASF219:
 4987 0740 5F676C75 		.ascii	"_glue\000"
 4987      6500
 4988              	.LASF89:
 4989 0746 4650555F 		.ascii	"FPU_IRQn\000"
 4989      4952516E 
 4989      00
 4990              	.LASF155:
 4991 074f 5F736967 		.ascii	"_sign\000"
 4991      6E00
 4992              	.LASF271:
 4993 0755 544D5F44 		.ascii	"TM_DELAY_TimerStart\000"
 4993      454C4159 
 4993      5F54696D 
 4993      65725374 
 4993      61727400 
 4994              	.LASF60:
 4995 0769 55415254 		.ascii	"UART4_IRQn\000"
 4995      345F4952 
 4995      516E00
 4996              	.LASF265:
 4997 0774 544D5F44 		.ascii	"TM_DELAY_Timers_t\000"
 4997      454C4159 
 4997      5F54696D 
 4997      6572735F 
 4997      7400
 4998              	.LASF50:
 4999 0786 4F54475F 		.ascii	"OTG_FS_WKUP_IRQn\000"
 4999      46535F57 
 4999      4B55505F 
 4999      4952516E 
 4999      00
 5000              	.LASF18:
 5001 0797 45585449 		.ascii	"EXTI4_IRQn\000"
 5001      345F4952 
 5001      516E00
 5002              	.LASF134:
 5003 07a2 4354524C 		.ascii	"CTRL\000"
 5003      00
 5004              	.LASF62:
 5005 07a7 54494D36 		.ascii	"TIM6_DAC_IRQn\000"
 5005      5F444143 
 5005      5F495251 
 5005      6E00
 5006              	.LASF244:
 5007 07b5 5F685F65 		.ascii	"_h_errno\000"
 5007      72726E6F 
 5007      00
 5008              	.LASF41:
 5009 07be 49324332 		.ascii	"I2C2_EV_IRQn\000"
 5009      5F45565F 
 5009      4952516E 
 5009      00
 5010              	.LASF90:
 5011 07cb 756E7369 		.ascii	"unsigned int\000"
ARM GAS  /tmp/ccFmD5nI.s 			page 132


 5011      676E6564 
 5011      20696E74 
 5011      00
 5012              	.LASF242:
 5013 07d8 5F776372 		.ascii	"_wcrtomb_state\000"
 5013      746F6D62 
 5013      5F737461 
 5013      746500
 5014              	.LASF162:
 5015 07e7 5F5F746D 		.ascii	"__tm_mday\000"
 5015      5F6D6461 
 5015      7900
 5016              	.LASF262:
 5017 07f1 544D5F44 		.ascii	"TM_DELAY_Initialized\000"
 5017      454C4159 
 5017      5F496E69 
 5017      7469616C 
 5017      697A6564 
 5018              	.LASF213:
 5019 0806 5F6E6577 		.ascii	"_new\000"
 5019      00
 5020              	.LASF188:
 5021 080b 5F756275 		.ascii	"_ubuf\000"
 5021      6600
 5022              	.LASF200:
 5023 0811 5F737464 		.ascii	"_stderr\000"
 5023      65727200 
 5024              	.LASF235:
 5025 0819 5F776374 		.ascii	"_wctomb_state\000"
 5025      6F6D625F 
 5025      73746174 
 5025      6500
 5026              	.LASF194:
 5027 0827 5F6D6273 		.ascii	"_mbstate\000"
 5027      74617465 
 5027      00
 5028              	.LASF128:
 5029 0830 42464152 		.ascii	"BFAR\000"
 5029      00
 5030              	.LASF231:
 5031 0835 5F72616E 		.ascii	"_rand_next\000"
 5031      645F6E65 
 5031      787400
 5032              	.LASF281:
 5033 0840 544D5F44 		.ascii	"TM_DELAY_Init\000"
 5033      454C4159 
 5033      5F496E69 
 5033      7400
 5034              	.LASF180:
 5035 084e 5F666C61 		.ascii	"_flags\000"
 5035      677300
 5036              	.LASF20:
 5037 0855 444D4131 		.ascii	"DMA1_Stream1_IRQn\000"
 5037      5F537472 
 5037      65616D31 
 5037      5F495251 
 5037      6E00
ARM GAS  /tmp/ccFmD5nI.s 			page 133


 5038              	.LASF173:
 5039 0867 5F617465 		.ascii	"_atexit\000"
 5039      78697400 
 5040              	.LASF67:
 5041 086f 444D4132 		.ascii	"DMA2_Stream3_IRQn\000"
 5041      5F537472 
 5041      65616D33 
 5041      5F495251 
 5041      6E00
 5042              	.LASF71:
 5043 0881 43414E32 		.ascii	"CAN2_TX_IRQn\000"
 5043      5F54585F 
 5043      4952516E 
 5043      00
 5044              	.LASF147:
 5045 088e 5F5F636F 		.ascii	"__count\000"
 5045      756E7400 
 5046              	.LASF137:
 5047 0896 53797354 		.ascii	"SysTick_Type\000"
 5047      69636B5F 
 5047      54797065 
 5047      00
 5048              	.LASF165:
 5049 08a3 5F5F746D 		.ascii	"__tm_wday\000"
 5049      5F776461 
 5049      7900
 5050              	.LASF140:
 5051 08ad 6C6F6E67 		.ascii	"long double\000"
 5051      20646F75 
 5051      626C6500 
 5052              	.LASF166:
 5053 08b9 5F5F746D 		.ascii	"__tm_yday\000"
 5053      5F796461 
 5053      7900
 5054              	.LASF223:
 5055 08c3 5F736565 		.ascii	"_seed\000"
 5055      6400
 5056              	.LASF186:
 5057 08c9 5F736565 		.ascii	"_seek\000"
 5057      6B00
 5058              	.LASF19:
 5059 08cf 444D4131 		.ascii	"DMA1_Stream0_IRQn\000"
 5059      5F537472 
 5059      65616D30 
 5059      5F495251 
 5059      6E00
 5060              	.LASF143:
 5061 08e1 5F66706F 		.ascii	"_fpos_t\000"
 5061      735F7400 
 5062              	.LASF146:
 5063 08e9 5F5F7763 		.ascii	"__wchb\000"
 5063      686200
 5064              	.LASF49:
 5065 08f0 5254435F 		.ascii	"RTC_Alarm_IRQn\000"
 5065      416C6172 
 5065      6D5F4952 
 5065      516E00
ARM GAS  /tmp/ccFmD5nI.s 			page 134


 5066              	.LASF118:
 5067 08ff 4E564943 		.ascii	"NVIC_Type\000"
 5067      5F547970 
 5067      6500
 5068              	.LASF81:
 5069 0909 49324333 		.ascii	"I2C3_ER_IRQn\000"
 5069      5F45525F 
 5069      4952516E 
 5069      00
 5070              	.LASF87:
 5071 0916 43525950 		.ascii	"CRYP_IRQn\000"
 5071      5F495251 
 5071      6E00
 5072              	.LASF48:
 5073 0920 45585449 		.ascii	"EXTI15_10_IRQn\000"
 5073      31355F31 
 5073      305F4952 
 5073      516E00
 5074              	.LASF102:
 5075 092f 6C6F6E67 		.ascii	"long long unsigned int\000"
 5075      206C6F6E 
 5075      6720756E 
 5075      7369676E 
 5075      65642069 
 5076              	.LASF170:
 5077 0946 5F64736F 		.ascii	"_dso_handle\000"
 5077      5F68616E 
 5077      646C6500 
 5078              	.LASF100:
 5079 0952 6C6F6E67 		.ascii	"long unsigned int\000"
 5079      20756E73 
 5079      69676E65 
 5079      6420696E 
 5079      7400
 5080              	.LASF222:
 5081 0964 5F72616E 		.ascii	"_rand48\000"
 5081      64343800 
 5082              	.LASF256:
 5083 096c 55736572 		.ascii	"UserParameters\000"
 5083      50617261 
 5083      6D657465 
 5083      727300
 5084              	.LASF37:
 5085 097b 54494D33 		.ascii	"TIM3_IRQn\000"
 5085      5F495251 
 5085      6E00
 5086              	.LASF199:
 5087 0985 5F737464 		.ascii	"_stdout\000"
 5087      6F757400 
 5088              	.LASF45:
 5089 098d 55534152 		.ascii	"USART1_IRQn\000"
 5089      54315F49 
 5089      52516E00 
 5090              	.LASF261:
 5091 0999 544D5F54 		.ascii	"TM_TimingDelay\000"
 5091      696D696E 
 5091      6744656C 
ARM GAS  /tmp/ccFmD5nI.s 			page 135


 5091      617900
 5092              	.LASF253:
 5093 09a8 4175746F 		.ascii	"AutoReload\000"
 5093      52656C6F 
 5093      616400
 5094              	.LASF190:
 5095 09b3 5F626C6B 		.ascii	"_blksize\000"
 5095      73697A65 
 5095      00
 5096              	.LASF177:
 5097 09bc 5F626173 		.ascii	"_base\000"
 5097      6500
 5098              	.LASF287:
 5099 09c2 5F5F6765 		.ascii	"__get_PRIMASK\000"
 5099      745F5052 
 5099      494D4153 
 5099      4B00
 5100              	.LASF73:
 5101 09d0 43414E32 		.ascii	"CAN2_RX1_IRQn\000"
 5101      5F525831 
 5101      5F495251 
 5101      6E00
 5102              	.LASF227:
 5103 09de 5F737472 		.ascii	"_strtok_last\000"
 5103      746F6B5F 
 5103      6C617374 
 5103      00
 5104              	.LASF26:
 5105 09eb 4144435F 		.ascii	"ADC_IRQn\000"
 5105      4952516E 
 5105      00
 5106              	.LASF240:
 5107 09f4 5F6D6272 		.ascii	"_mbrtowc_state\000"
 5107      746F7763 
 5107      5F737461 
 5107      746500
 5108              	.LASF108:
 5109 0a03 49434552 		.ascii	"ICER\000"
 5109      00
 5110              	.LASF150:
 5111 0a08 5F666C6F 		.ascii	"_flock_t\000"
 5111      636B5F74 
 5111      00
 5112              	.LASF218:
 5113 0a11 5F5F4649 		.ascii	"__FILE\000"
 5113      4C4500
 5114              	.LASF149:
 5115 0a18 5F6D6273 		.ascii	"_mbstate_t\000"
 5115      74617465 
 5115      5F7400
 5116              	.LASF232:
 5117 0a23 5F723438 		.ascii	"_r48\000"
 5117      00
 5118              	.LASF286:
 5119 0a28 53797354 		.ascii	"SysTick_Config\000"
 5119      69636B5F 
 5119      436F6E66 
ARM GAS  /tmp/ccFmD5nI.s 			page 136


 5119      696700
 5120              	.LASF9:
 5121 0a37 5056445F 		.ascii	"PVD_IRQn\000"
 5121      4952516E 
 5121      00
 5122              	.LASF144:
 5123 0a40 77696E74 		.ascii	"wint_t\000"
 5123      5F7400
 5124              	.LASF129:
 5125 0a47 41465352 		.ascii	"AFSR\000"
 5125      00
 5126              	.LASF136:
 5127 0a4c 43414C49 		.ascii	"CALIB\000"
 5127      4200
 5128              	.LASF153:
 5129 0a52 5F6E6578 		.ascii	"_next\000"
 5129      7400
 5130              	.LASF192:
 5131 0a58 5F646174 		.ascii	"_data\000"
 5131      6100
 5132              	.LASF56:
 5133 0a5e 46534D43 		.ascii	"FSMC_IRQn\000"
 5133      5F495251 
 5133      6E00
 5134              	.LASF14:
 5135 0a68 45585449 		.ascii	"EXTI0_IRQn\000"
 5135      305F4952 
 5135      516E00
 5136              	.LASF124:
 5137 0a73 43465352 		.ascii	"CFSR\000"
 5137      00
 5138              	.LASF23:
 5139 0a78 444D4131 		.ascii	"DMA1_Stream4_IRQn\000"
 5139      5F537472 
 5139      65616D34 
 5139      5F495251 
 5139      6E00
 5140              	.LASF77:
 5141 0a8a 444D4132 		.ascii	"DMA2_Stream6_IRQn\000"
 5141      5F537472 
 5141      65616D36 
 5141      5F495251 
 5141      6E00
 5142              	.LASF272:
 5143 0a9c 544D5F44 		.ascii	"TM_DELAY_TimerStop\000"
 5143      454C4159 
 5143      5F54696D 
 5143      65725374 
 5143      6F7000
 5144              	.LASF135:
 5145 0aaf 4C4F4144 		.ascii	"LOAD\000"
 5145      00
 5146              	.LASF5:
 5147 0ab4 44656275 		.ascii	"DebugMonitor_IRQn\000"
 5147      674D6F6E 
 5147      69746F72 
 5147      5F495251 
ARM GAS  /tmp/ccFmD5nI.s 			page 137


 5147      6E00
 5148              	.LASF80:
 5149 0ac6 49324333 		.ascii	"I2C3_EV_IRQn\000"
 5149      5F45565F 
 5149      4952516E 
 5149      00
 5150              	.LASF280:
 5151 0ad3 544D5F44 		.ascii	"TM_DELAY_TimerDelete\000"
 5151      454C4159 
 5151      5F54696D 
 5151      65724465 
 5151      6C657465 
 5152              	.LASF257:
 5153 0ae8 544D5F44 		.ascii	"TM_DELAY_Timer_t\000"
 5153      454C4159 
 5153      5F54696D 
 5153      65725F74 
 5153      00
 5154              	.LASF69:
 5155 0af9 4554485F 		.ascii	"ETH_IRQn\000"
 5155      4952516E 
 5155      00
 5156              	.LASF130:
 5157 0b02 4D4D4652 		.ascii	"MMFR\000"
 5157      00
 5158              	.LASF127:
 5159 0b07 4D4D4641 		.ascii	"MMFAR\000"
 5159      5200
 5160              	.LASF233:
 5161 0b0d 5F6D626C 		.ascii	"_mblen_state\000"
 5161      656E5F73 
 5161      74617465 
 5161      00
 5162              	.LASF95:
 5163 0b1a 73686F72 		.ascii	"short int\000"
 5163      7420696E 
 5163      7400
 5164              	.LASF13:
 5165 0b24 5243435F 		.ascii	"RCC_IRQn\000"
 5165      4952516E 
 5165      00
 5166              	.LASF285:
 5167 0b2d 7072696F 		.ascii	"priority\000"
 5167      72697479 
 5167      00
 5168              	.LASF277:
 5169 0b36 544D5F44 		.ascii	"TM_DELAY_CustomTimerCallback\000"
 5169      454C4159 
 5169      5F437573 
 5169      746F6D54 
 5169      696D6572 
 5170              	.LASF131:
 5171 0b53 49534152 		.ascii	"ISAR\000"
 5171      00
 5172              	.LASF252:
 5173 0b58 7375626F 		.ascii	"suboptarg\000"
 5173      70746172 
ARM GAS  /tmp/ccFmD5nI.s 			page 138


 5173      6700
 5174              	.LASF171:
 5175 0b62 5F666E74 		.ascii	"_fntypes\000"
 5175      79706573 
 5175      00
 5176              	.LASF22:
 5177 0b6b 444D4131 		.ascii	"DMA1_Stream3_IRQn\000"
 5177      5F537472 
 5177      65616D33 
 5177      5F495251 
 5177      6E00
 5178              	.LASF164:
 5179 0b7d 5F5F746D 		.ascii	"__tm_year\000"
 5179      5F796561 
 5179      7200
 5180              	.LASF273:
 5181 0b87 43757374 		.ascii	"CustomTimers\000"
 5181      6F6D5469 
 5181      6D657273 
 5181      00
 5182              	.LASF33:
 5183 0b94 54494D31 		.ascii	"TIM1_UP_TIM10_IRQn\000"
 5183      5F55505F 
 5183      54494D31 
 5183      305F4952 
 5183      516E00
 5184              	.LASF138:
 5185 0ba7 49544D5F 		.ascii	"ITM_RxBuffer\000"
 5185      52784275 
 5185      66666572 
 5185      00
 5186              	.LASF182:
 5187 0bb4 5F6C6266 		.ascii	"_lbfsize\000"
 5187      73697A65 
 5187      00
 5188              	.LASF201:
 5189 0bbd 5F696E63 		.ascii	"_inc\000"
 5189      00
 5190              	.LASF174:
 5191 0bc2 5F696E64 		.ascii	"_ind\000"
 5191      00
 5192              	.LASF176:
 5193 0bc7 5F5F7362 		.ascii	"__sbuf\000"
 5193      756600
 5194              	.LASF172:
 5195 0bce 5F69735F 		.ascii	"_is_cxa\000"
 5195      63786100 
 5196              	.LASF141:
 5197 0bd6 5F4C4F43 		.ascii	"_LOCK_T\000"
 5197      4B5F5400 
 5198              	.LASF245:
 5199 0bde 5F6E6578 		.ascii	"_nextf\000"
 5199      746600
 5200              	.LASF82:
 5201 0be5 4F54475F 		.ascii	"OTG_HS_EP1_OUT_IRQn\000"
 5201      48535F45 
 5201      50315F4F 
ARM GAS  /tmp/ccFmD5nI.s 			page 139


 5201      55545F49 
 5201      52516E00 
 5202              	.LASF204:
 5203 0bf9 5F6C6F63 		.ascii	"_locale\000"
 5203      616C6500 
 5204              	.LASF152:
 5205 0c01 5F5F554C 		.ascii	"__ULong\000"
 5205      6F6E6700 
 5206              	.LASF274:
 5207 0c09 544D5F44 		.ascii	"TM_DELAY_TimerCreate\000"
 5207      454C4159 
 5207      5F54696D 
 5207      65724372 
 5207      65617465 
 5208              	.LASF105:
 5209 0c1e 75696E74 		.ascii	"uint32_t\000"
 5209      33325F74 
 5209      00
 5210              	.LASF207:
 5211 0c27 5F726573 		.ascii	"_result\000"
 5211      756C7400 
 5212              	.LASF29:
 5213 0c2f 43414E31 		.ascii	"CAN1_RX1_IRQn\000"
 5213      5F525831 
 5213      5F495251 
 5213      6E00
 5214              	.LASF267:
 5215 0c3d 4175746F 		.ascii	"AutoReloadValue\000"
 5215      52656C6F 
 5215      61645661 
 5215      6C756500 
 5216              	.LASF31:
 5217 0c4d 45585449 		.ascii	"EXTI9_5_IRQn\000"
 5217      395F355F 
 5217      4952516E 
 5217      00
 5218              	.LASF142:
 5219 0c5a 5F6F6666 		.ascii	"_off_t\000"
 5219      5F7400
 5220              	.LASF291:
 5221 0c61 66726565 		.ascii	"free\000"
 5221      00
 5222              	.LASF225:
 5223 0c66 5F616464 		.ascii	"_add\000"
 5223      00
 5224              	.LASF96:
 5225 0c6b 73686F72 		.ascii	"short unsigned int\000"
 5225      7420756E 
 5225      7369676E 
 5225      65642069 
 5225      6E7400
 5226              	.LASF161:
 5227 0c7e 5F5F746D 		.ascii	"__tm_hour\000"
 5227      5F686F75 
 5227      7200
 5228              	.LASF266:
 5229 0c88 54696D65 		.ascii	"Timer\000"
ARM GAS  /tmp/ccFmD5nI.s 			page 140


 5229      7200
 5230              	.LASF54:
 5231 0c8e 54494D38 		.ascii	"TIM8_CC_IRQn\000"
 5231      5F43435F 
 5231      4952516E 
 5231      00
 5232              	.LASF57:
 5233 0c9b 5344494F 		.ascii	"SDIO_IRQn\000"
 5233      5F495251 
 5233      6E00
 5234              	.LASF132:
 5235 0ca5 43504143 		.ascii	"CPACR\000"
 5235      5200
 5236              	.LASF110:
 5237 0cab 49535052 		.ascii	"ISPR\000"
 5237      00
 5238              	.LASF17:
 5239 0cb0 45585449 		.ascii	"EXTI3_IRQn\000"
 5239      335F4952 
 5239      516E00
 5240              	.LASF6:
 5241 0cbb 50656E64 		.ascii	"PendSV_IRQn\000"
 5241      53565F49 
 5241      52516E00 
 5242              	.LASF241:
 5243 0cc7 5F6D6273 		.ascii	"_mbsrtowcs_state\000"
 5243      72746F77 
 5243      63735F73 
 5243      74617465 
 5243      00
 5244              	.LASF83:
 5245 0cd8 4F54475F 		.ascii	"OTG_HS_EP1_IN_IRQn\000"
 5245      48535F45 
 5245      50315F49 
 5245      4E5F4952 
 5245      516E00
 5246              	.LASF294:
 5247 0ceb 474E5520 		.ascii	"GNU C11 7.2.1 20170904 (release) [ARM/embedded-7-br"
 5247      43313120 
 5247      372E322E 
 5247      31203230 
 5247      31373039 
 5248 0d1e 616E6368 		.ascii	"anch revision 255204] -mcpu=cortex-m4 -mthumb -g -g"
 5248      20726576 
 5248      6973696F 
 5248      6E203235 
 5248      35323034 
 5249 0d51 64776172 		.ascii	"dwarf-2 -Os -fomit-frame-pointer\000"
 5249      662D3220 
 5249      2D4F7320 
 5249      2D666F6D 
 5249      69742D66 
 5250              	.LASF55:
 5251 0d72 444D4131 		.ascii	"DMA1_Stream7_IRQn\000"
 5251      5F537472 
 5251      65616D37 
 5251      5F495251 
ARM GAS  /tmp/ccFmD5nI.s 			page 141


 5251      6E00
 5252              	.LASF97:
 5253 0d84 5F5F696E 		.ascii	"__int32_t\000"
 5253      7433325F 
 5253      7400
 5254              	.LASF106:
 5255 0d8e 49534552 		.ascii	"ISER\000"
 5255      00
 5256              	.LASF169:
 5257 0d93 5F666E61 		.ascii	"_fnargs\000"
 5257      72677300 
 5258              	.LASF167:
 5259 0d9b 5F5F746D 		.ascii	"__tm_isdst\000"
 5259      5F697364 
 5259      737400
 5260              	.LASF275:
 5261 0da6 52656C6F 		.ascii	"ReloadValue\000"
 5261      61645661 
 5261      6C756500 
 5262              	.LASF160:
 5263 0db2 5F5F746D 		.ascii	"__tm_min\000"
 5263      5F6D696E 
 5263      00
 5264              	.LASF238:
 5265 0dbb 5F676574 		.ascii	"_getdate_err\000"
 5265      64617465 
 5265      5F657272 
 5265      00
 5266              	.LASF66:
 5267 0dc8 444D4132 		.ascii	"DMA2_Stream2_IRQn\000"
 5267      5F537472 
 5267      65616D32 
 5267      5F495251 
 5267      6E00
 5268              		.ident	"GCC: (GNU Tools for Arm Embedded Processors 7-2017-q4-major) 7.2.1 20170904 (release) [ARM
ARM GAS  /tmp/ccFmD5nI.s 			page 142


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tm_stm32f4_delay.c
     /tmp/ccFmD5nI.s:74     .text:0000000000000000 $t
     /tmp/ccFmD5nI.s:81     .text:0000000000000000 SysTick_Handler
     /tmp/ccFmD5nI.s:180    .text:0000000000000050 $d
     /tmp/ccFmD5nI.s:184    .text:0000000000000054 $t
     /tmp/ccFmD5nI.s:191    .text:0000000000000054 TM_DELAY_Init
     /tmp/ccFmD5nI.s:263    .text:000000000000008c $d
                            *COM*:0000000000000004 mult
     /tmp/ccFmD5nI.s:272    .text:00000000000000a4 $t
     /tmp/ccFmD5nI.s:279    .text:00000000000000a4 TM_DELAY_EnableDelayTimer
     /tmp/ccFmD5nI.s:304    .text:00000000000000b8 $d
     /tmp/ccFmD5nI.s:309    .text:00000000000000c0 $t
     /tmp/ccFmD5nI.s:316    .text:00000000000000c0 TM_DELAY_DisableDelayTimer
     /tmp/ccFmD5nI.s:335    .text:00000000000000cc $d
     /tmp/ccFmD5nI.s:339    .text:00000000000000d0 $t
     /tmp/ccFmD5nI.s:346    .text:00000000000000d0 TM_DELAY_TimerCreate
     /tmp/ccFmD5nI.s:428    .text:0000000000000110 $d
     /tmp/ccFmD5nI.s:432    .text:0000000000000114 $t
     /tmp/ccFmD5nI.s:439    .text:0000000000000114 TM_DELAY_TimerDelete
     /tmp/ccFmD5nI.s:587    .text:0000000000000170 $d
     /tmp/ccFmD5nI.s:591    .text:0000000000000174 $t
     /tmp/ccFmD5nI.s:598    .text:0000000000000174 TM_DELAY_TimerStop
     /tmp/ccFmD5nI.s:623    .text:000000000000017a TM_DELAY_TimerStart
     /tmp/ccFmD5nI.s:648    .text:0000000000000180 TM_DELAY_TimerReset
     /tmp/ccFmD5nI.s:673    .text:0000000000000186 TM_DELAY_TimerAutoReload
     /tmp/ccFmD5nI.s:697    .text:000000000000018a TM_DELAY_TimerAutoReloadValue
     /tmp/ccFmD5nI.s:736    .bss:0000000000000020 TM_DELAY_Initialized
     /tmp/ccFmD5nI.s:728    .bss:0000000000000004 TM_Time2
     /tmp/ccFmD5nI.s:724    .bss:0000000000000000 TM_Time
     /tmp/ccFmD5nI.s:741    .bss:0000000000000024 TM_TimingDelay
     /tmp/ccFmD5nI.s:720    .bss:0000000000000000 $d
     /tmp/ccFmD5nI.s:732    .bss:0000000000000008 CustomTimers

UNDEFINED SYMBOLS
TM_DELAY_1msHandler
SystemCoreClock
malloc
free
